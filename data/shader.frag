#version 330
layout(location = 0) out vec3 out0;
layout(std140) uniform uBlock1 {
float u0;
} u1;
uniform sampler2D s4;
uniform sampler2D s5;
 in float vf0;
 in float vf1;
void main() {
float t0 = (-float(15.0));
float t1 = (0-t0);
float t2 = (0-0);
float t3 = (t2*t2);
float t4 = (3-2);
float t5 = (t4*t4);
float t6 = (t3+t5);
float t7 = (t1*t1);
float t8 = (t6+t7);
float t9 = sqrt(t8);
float t10 = (t1/t9);
float t11 = (1*t10);
float t12 = (t4/t9);
float t13 = (0*t12);
float t14 = (t11-t13);
float t15 = (t14*t14);
float t16 = (t2/t9);
float t17 = (0*t16);
float t18 = (float(0.2)*t10);
float t19 = (t17-t18);
float t20 = (t19*t19);
float t21 = (t15+t20);
float t22 = (float(0.2)*t12);
float t23 = (1*t16);
float t24 = (t22-t23);
float t25 = (t24*t24);
float t26 = (t21+t25);
float t27 = sqrt(t26);
float t28 = (t14/t27);
float t29 = (vf0-float(0.5));
float t30 = (float(1.5)*t29);
float t31 = (t28*t30);
float t32 = (t19/t27);
float t33 = (float(1.5)*float(0.6666667));
float t34 = (vf1-float(0.5));
float t35 = (t33*t34);
float t36 = (t32*t35);
float t37 = (t31+t36);
float t38 = (t24/t27);
float t39 = (t38*1);
float t40 = (t37+t39);
float t41 = (t40*t40);
float t42 = (t12*t38);
float t43 = (t10*t32);
float t44 = (t42-t43);
float t45 = (t44*t30);
float t46 = (t10*t28);
float t47 = (t16*t38);
float t48 = (t46-t47);
float t49 = (t48*t35);
float t50 = (t45+t49);
float t51 = (t16*t32);
float t52 = (t12*t28);
float t53 = (t51-t52);
float t54 = (t53*1);
float t55 = (t50+t54);
float t56 = (t55*t55);
float t57 = (t41+t56);
float t58 = (t16*t30);
float t59 = (t12*t35);
float t60 = (t58+t59);
float t61 = (t10*1);
float t62 = (t60+t61);
float t63 = (t62*t62);
float t64 = (t57+t63);
float t65 = sqrt(t64);
float t66 = (t40/t65);
float t67 = (t66*float(0.16));
float t68 = (0+t67);
float t69 = (t68*t68);
float t70 = (t55/t65);
float t71 = (t70*float(0.16));
float t72 = (2+t71);
float t73 = (t72*t72);
float t74 = (t69+t73);
float t75 = (t62/t65);
float t76 = (t75*float(0.16));
float t77 = (t0+t76);
float t78 = (t77*t77);
float t79 = (t74+t78);
float t80 = sqrt(t79);
float t81 = (t80*t80);
bool t82 = (t81<1);
float t83 = (0*0);
float t84 = (2*2);
float t85 = (t83+t84);
float t86 = (t0*t0);
float t87 = (t85+t86);
float t88 = sqrt(t87);
float t89 = (t88*t88);
bool t90 = (t89>1);
bool t91 = (t82&&t90);
float t92;
float t93;
float t94;
float t95;
if(t91){
t92 = 0;
t93 = 0;
t94 = 0;
t95 = 1;
} else {
t92 = 0;
t93 = 0;
t94 = 0;
t95 = 0;
}
float t96 = (1-0);
float t97 = (t95*t96);
float t98 = (t92*t97);
float t99 = (0+t98);
bool t100 = (2>0);
bool t101 = (t72>0);
bool t102 = (!t101);
bool t103 = (t100&&t102);
bool t104 = (!t100);
bool t105 = (t101&&t104);
bool t106 = (t103||t105);
bool t107 = (t81<196);
bool t108 = (t81>float(6.76));
bool t109 = (t107&&t108);
bool t110 = (t106&&t109);
float t111;
float t112;
float t113;
float t114;
if(t110){
float t115 = (t72/t70);
float t116 = (-t115);
float t117 = (t66*t116);
float t118 = (t68+t117);
float t119 = atan(t118,t77);
float t120 = (u1.u0/30);
float t121 = (t119+t120);
float t122 = (2*3.1415927);
float t123 = (t121+t122);
float t124 = mod(t123,2);
float t125 = (t124*3.1415927);
float t126 = (2*3.1415927);
float t127 = (t125/t126);
float t128 = (t118*t118);
float t129 = (t70*t116);
float t130 = (t72+t129);
float t131 = (t130*t130);
float t132 = (t128+t131);
float t133 = (t75*t116);
float t134 = (t77+t133);
float t135 = (t134*t134);
float t136 = (t132+t135);
float t137 = sqrt(t136);
float t138 = (t137*t137);
float t139 = sqrt(t138);
float t140 = (t139-float(2.6));
float t141 = (t140/float(11.4));
vec4 t142 = texture(s4,vec2(t127,t141));
t111 = t142.x;
t112 = t142.y;
t113 = t142.z;
float t143;
if(t110){
t143 = 1;
} else {
t143 = 0;
}
float t144 = (t142.x*t142.x);
float t145 = (t142.y*t142.y);
float t146 = (t144+t145);
float t147 = (t142.z*t142.z);
float t148 = (t146+t147);
float t149 = sqrt(t148);
float t150 = (t149*t149);
float t151 = (t150/float(3.0));
bool t152 = (t151<=1);
float t153;
if(t152){
t153 = t151;
} else {
t153 = 1;
}
bool t154 = (t153>=0);
float t155;
if(t154){
t155 = t153;
} else {
t155 = 0;
}
float t156 = (t143*t155);
t114 = t156;
} else {
t111 = 0;
t112 = 0;
t113 = 0;
t114 = 0;
}
float t157 = (1-0);
float t158 = (t95*t157);
float t159 = (0+t158);
float t160 = (1-t159);
float t161 = (t114*t160);
float t162 = (t111*t161);
float t163 = (t99+t162);
float t164 = (-float(1.5));
float t165 = (2*t75);
float t166 = (t0*t70);
float t167 = (t165-t166);
float t168 = (t167*t167);
float t169 = (t0*t66);
float t170 = (0*t75);
float t171 = (t169-t170);
float t172 = (t171*t171);
float t173 = (t168+t172);
float t174 = (0*t70);
float t175 = (2*t66);
float t176 = (t174-t175);
float t177 = (t176*t176);
float t178 = (t173+t177);
float t179 = sqrt(t178);
float t180 = (t179*t179);
float t181 = (t164*t180);
float t182 = (t181*t68);
float t183 = pow(t81,float(2.5));
float t184 = (t182/t183);
float t185 = (t184*float(0.16));
float t186 = (t66+t185);
float t187 = (t186*float(0.16));
float t188 = (t68+t187);
float t189 = (t188*t188);
float t190 = (t181*t72);
float t191 = (t190/t183);
float t192 = (t191*float(0.16));
float t193 = (t70+t192);
float t194 = (t193*float(0.16));
float t195 = (t72+t194);
float t196 = (t195*t195);
float t197 = (t189+t196);
float t198 = (t181*t77);
float t199 = (t198/t183);
float t200 = (t199*float(0.16));
float t201 = (t75+t200);
float t202 = (t201*float(0.16));
float t203 = (t77+t202);
float t204 = (t203*t203);
float t205 = (t197+t204);
float t206 = sqrt(t205);
float t207 = (t206*t206);
bool t208 = (t207<1);
float t209 = (t68*t68);
float t210 = (t72*t72);
float t211 = (t209+t210);
float t212 = (t77*t77);
float t213 = (t211+t212);
float t214 = sqrt(t213);
float t215 = (t214*t214);
bool t216 = (t215>1);
bool t217 = (t208&&t216);
float t218;
float t219;
float t220;
float t221;
if(t217){
t218 = 0;
t219 = 0;
t220 = 0;
t221 = 1;
} else {
t218 = 0;
t219 = 0;
t220 = 0;
t221 = 0;
}
float t222 = (1-t159);
float t223 = (t114*t222);
float t224 = (t159+t223);
float t225 = (1-t224);
float t226 = (t221*t225);
float t227 = (t218*t226);
float t228 = (t163+t227);
bool t229 = (t72>0);
bool t230 = (t195>0);
bool t231 = (!t230);
bool t232 = (t229&&t231);
bool t233 = (!t229);
bool t234 = (t230&&t233);
bool t235 = (t232||t234);
bool t236 = (t207<196);
bool t237 = (t207>float(6.76));
bool t238 = (t236&&t237);
bool t239 = (t235&&t238);
float t240;
float t241;
float t242;
float t243;
if(t239){
float t244 = (t195/t193);
float t245 = (-t244);
float t246 = (t186*t245);
float t247 = (t188+t246);
float t248 = atan(t247,t203);
float t249 = (u1.u0/30);
float t250 = (t248+t249);
float t251 = (2*3.1415927);
float t252 = (t250+t251);
float t253 = mod(t252,2);
float t254 = (t253*3.1415927);
float t255 = (2*3.1415927);
float t256 = (t254/t255);
float t257 = (t247*t247);
float t258 = (t193*t245);
float t259 = (t195+t258);
float t260 = (t259*t259);
float t261 = (t257+t260);
float t262 = (t201*t245);
float t263 = (t203+t262);
float t264 = (t263*t263);
float t265 = (t261+t264);
float t266 = sqrt(t265);
float t267 = (t266*t266);
float t268 = sqrt(t267);
float t269 = (t268-float(2.6));
float t270 = (t269/float(11.4));
vec4 t271 = texture(s4,vec2(t256,t270));
t240 = t271.x;
t241 = t271.y;
t242 = t271.z;
float t272;
if(t239){
t272 = 1;
} else {
t272 = 0;
}
float t273 = (t271.x*t271.x);
float t274 = (t271.y*t271.y);
float t275 = (t273+t274);
float t276 = (t271.z*t271.z);
float t277 = (t275+t276);
float t278 = sqrt(t277);
float t279 = (t278*t278);
float t280 = (t279/float(3.0));
bool t281 = (t280<=1);
float t282;
if(t281){
t282 = t280;
} else {
t282 = 1;
}
bool t283 = (t282>=0);
float t284;
if(t283){
t284 = t282;
} else {
t284 = 0;
}
float t285 = (t272*t284);
t243 = t285;
} else {
t240 = 0;
t241 = 0;
t242 = 0;
t243 = 0;
}
float t286 = (1-t224);
float t287 = (t221*t286);
float t288 = (t224+t287);
float t289 = (1-t288);
float t290 = (t243*t289);
float t291 = (t240*t290);
float t292 = (t228+t291);
float t293 = (-float(1.5));
float t294 = (t293*t180);
float t295 = (t294*t188);
float t296 = pow(t207,float(2.5));
float t297 = (t295/t296);
float t298 = (t297*float(0.16));
float t299 = (t186+t298);
float t300 = (t299*float(0.16));
float t301 = (t188+t300);
float t302 = (t301*t301);
float t303 = (t294*t195);
float t304 = (t303/t296);
float t305 = (t304*float(0.16));
float t306 = (t193+t305);
float t307 = (t306*float(0.16));
float t308 = (t195+t307);
float t309 = (t308*t308);
float t310 = (t302+t309);
float t311 = (t294*t203);
float t312 = (t311/t296);
float t313 = (t312*float(0.16));
float t314 = (t201+t313);
float t315 = (t314*float(0.16));
float t316 = (t203+t315);
float t317 = (t316*t316);
float t318 = (t310+t317);
float t319 = sqrt(t318);
float t320 = (t319*t319);
bool t321 = (t320<1);
float t322 = (t188*t188);
float t323 = (t195*t195);
float t324 = (t322+t323);
float t325 = (t203*t203);
float t326 = (t324+t325);
float t327 = sqrt(t326);
float t328 = (t327*t327);
bool t329 = (t328>1);
bool t330 = (t321&&t329);
float t331;
float t332;
float t333;
float t334;
if(t330){
t331 = 0;
t332 = 0;
t333 = 0;
t334 = 1;
} else {
t331 = 0;
t332 = 0;
t333 = 0;
t334 = 0;
}
float t335 = (1-t288);
float t336 = (t243*t335);
float t337 = (t288+t336);
float t338 = (1-t337);
float t339 = (t334*t338);
float t340 = (t331*t339);
float t341 = (t292+t340);
bool t342 = (t195>0);
bool t343 = (t308>0);
bool t344 = (!t343);
bool t345 = (t342&&t344);
bool t346 = (!t342);
bool t347 = (t343&&t346);
bool t348 = (t345||t347);
bool t349 = (t320<196);
bool t350 = (t320>float(6.76));
bool t351 = (t349&&t350);
bool t352 = (t348&&t351);
float t353;
float t354;
float t355;
float t356;
if(t352){
float t357 = (t308/t306);
float t358 = (-t357);
float t359 = (t299*t358);
float t360 = (t301+t359);
float t361 = atan(t360,t316);
float t362 = (u1.u0/30);
float t363 = (t361+t362);
float t364 = (2*3.1415927);
float t365 = (t363+t364);
float t366 = mod(t365,2);
float t367 = (t366*3.1415927);
float t368 = (2*3.1415927);
float t369 = (t367/t368);
float t370 = (t360*t360);
float t371 = (t306*t358);
float t372 = (t308+t371);
float t373 = (t372*t372);
float t374 = (t370+t373);
float t375 = (t314*t358);
float t376 = (t316+t375);
float t377 = (t376*t376);
float t378 = (t374+t377);
float t379 = sqrt(t378);
float t380 = (t379*t379);
float t381 = sqrt(t380);
float t382 = (t381-float(2.6));
float t383 = (t382/float(11.4));
vec4 t384 = texture(s4,vec2(t369,t383));
t353 = t384.x;
t354 = t384.y;
t355 = t384.z;
float t385;
if(t352){
t385 = 1;
} else {
t385 = 0;
}
float t386 = (t384.x*t384.x);
float t387 = (t384.y*t384.y);
float t388 = (t386+t387);
float t389 = (t384.z*t384.z);
float t390 = (t388+t389);
float t391 = sqrt(t390);
float t392 = (t391*t391);
float t393 = (t392/float(3.0));
bool t394 = (t393<=1);
float t395;
if(t394){
t395 = t393;
} else {
t395 = 1;
}
bool t396 = (t395>=0);
float t397;
if(t396){
t397 = t395;
} else {
t397 = 0;
}
float t398 = (t385*t397);
t356 = t398;
} else {
t353 = 0;
t354 = 0;
t355 = 0;
t356 = 0;
}
float t399 = (1-t337);
float t400 = (t334*t399);
float t401 = (t337+t400);
float t402 = (1-t401);
float t403 = (t356*t402);
float t404 = (t353*t403);
float t405 = (t341+t404);
float t406 = (-float(1.5));
float t407 = (t406*t180);
float t408 = (t407*t301);
float t409 = pow(t320,float(2.5));
float t410 = (t408/t409);
float t411 = (t410*float(0.16));
float t412 = (t299+t411);
float t413 = (t412*float(0.16));
float t414 = (t301+t413);
float t415 = (t414*t414);
float t416 = (t407*t308);
float t417 = (t416/t409);
float t418 = (t417*float(0.16));
float t419 = (t306+t418);
float t420 = (t419*float(0.16));
float t421 = (t308+t420);
float t422 = (t421*t421);
float t423 = (t415+t422);
float t424 = (t407*t316);
float t425 = (t424/t409);
float t426 = (t425*float(0.16));
float t427 = (t314+t426);
float t428 = (t427*float(0.16));
float t429 = (t316+t428);
float t430 = (t429*t429);
float t431 = (t423+t430);
float t432 = sqrt(t431);
float t433 = (t432*t432);
bool t434 = (t433<1);
float t435 = (t301*t301);
float t436 = (t308*t308);
float t437 = (t435+t436);
float t438 = (t316*t316);
float t439 = (t437+t438);
float t440 = sqrt(t439);
float t441 = (t440*t440);
bool t442 = (t441>1);
bool t443 = (t434&&t442);
float t444;
float t445;
float t446;
float t447;
if(t443){
t444 = 0;
t445 = 0;
t446 = 0;
t447 = 1;
} else {
t444 = 0;
t445 = 0;
t446 = 0;
t447 = 0;
}
float t448 = (1-t401);
float t449 = (t356*t448);
float t450 = (t401+t449);
float t451 = (1-t450);
float t452 = (t447*t451);
float t453 = (t444*t452);
float t454 = (t405+t453);
bool t455 = (t308>0);
bool t456 = (t421>0);
bool t457 = (!t456);
bool t458 = (t455&&t457);
bool t459 = (!t455);
bool t460 = (t456&&t459);
bool t461 = (t458||t460);
bool t462 = (t433<196);
bool t463 = (t433>float(6.76));
bool t464 = (t462&&t463);
bool t465 = (t461&&t464);
float t466;
float t467;
float t468;
float t469;
if(t465){
float t470 = (t421/t419);
float t471 = (-t470);
float t472 = (t412*t471);
float t473 = (t414+t472);
float t474 = atan(t473,t429);
float t475 = (u1.u0/30);
float t476 = (t474+t475);
float t477 = (2*3.1415927);
float t478 = (t476+t477);
float t479 = mod(t478,2);
float t480 = (t479*3.1415927);
float t481 = (2*3.1415927);
float t482 = (t480/t481);
float t483 = (t473*t473);
float t484 = (t419*t471);
float t485 = (t421+t484);
float t486 = (t485*t485);
float t487 = (t483+t486);
float t488 = (t427*t471);
float t489 = (t429+t488);
float t490 = (t489*t489);
float t491 = (t487+t490);
float t492 = sqrt(t491);
float t493 = (t492*t492);
float t494 = sqrt(t493);
float t495 = (t494-float(2.6));
float t496 = (t495/float(11.4));
vec4 t497 = texture(s4,vec2(t482,t496));
t466 = t497.x;
t467 = t497.y;
t468 = t497.z;
float t498;
if(t465){
t498 = 1;
} else {
t498 = 0;
}
float t499 = (t497.x*t497.x);
float t500 = (t497.y*t497.y);
float t501 = (t499+t500);
float t502 = (t497.z*t497.z);
float t503 = (t501+t502);
float t504 = sqrt(t503);
float t505 = (t504*t504);
float t506 = (t505/float(3.0));
bool t507 = (t506<=1);
float t508;
if(t507){
t508 = t506;
} else {
t508 = 1;
}
bool t509 = (t508>=0);
float t510;
if(t509){
t510 = t508;
} else {
t510 = 0;
}
float t511 = (t498*t510);
t469 = t511;
} else {
t466 = 0;
t467 = 0;
t468 = 0;
t469 = 0;
}
float t512 = (1-t450);
float t513 = (t447*t512);
float t514 = (t450+t513);
float t515 = (1-t514);
float t516 = (t469*t515);
float t517 = (t466*t516);
float t518 = (t454+t517);
float t519 = (-float(1.5));
float t520 = (t519*t180);
float t521 = (t520*t414);
float t522 = pow(t433,float(2.5));
float t523 = (t521/t522);
float t524 = (t523*float(0.16));
float t525 = (t412+t524);
float t526 = (t525*float(0.16));
float t527 = (t414+t526);
float t528 = (t527*t527);
float t529 = (t520*t421);
float t530 = (t529/t522);
float t531 = (t530*float(0.16));
float t532 = (t419+t531);
float t533 = (t532*float(0.16));
float t534 = (t421+t533);
float t535 = (t534*t534);
float t536 = (t528+t535);
float t537 = (t520*t429);
float t538 = (t537/t522);
float t539 = (t538*float(0.16));
float t540 = (t427+t539);
float t541 = (t540*float(0.16));
float t542 = (t429+t541);
float t543 = (t542*t542);
float t544 = (t536+t543);
float t545 = sqrt(t544);
float t546 = (t545*t545);
bool t547 = (t546<1);
float t548 = (t414*t414);
float t549 = (t421*t421);
float t550 = (t548+t549);
float t551 = (t429*t429);
float t552 = (t550+t551);
float t553 = sqrt(t552);
float t554 = (t553*t553);
bool t555 = (t554>1);
bool t556 = (t547&&t555);
float t557;
float t558;
float t559;
float t560;
if(t556){
t557 = 0;
t558 = 0;
t559 = 0;
t560 = 1;
} else {
t557 = 0;
t558 = 0;
t559 = 0;
t560 = 0;
}
float t561 = (1-t514);
float t562 = (t469*t561);
float t563 = (t514+t562);
float t564 = (1-t563);
float t565 = (t560*t564);
float t566 = (t557*t565);
float t567 = (t518+t566);
bool t568 = (t421>0);
bool t569 = (t534>0);
bool t570 = (!t569);
bool t571 = (t568&&t570);
bool t572 = (!t568);
bool t573 = (t569&&t572);
bool t574 = (t571||t573);
bool t575 = (t546<196);
bool t576 = (t546>float(6.76));
bool t577 = (t575&&t576);
bool t578 = (t574&&t577);
float t579;
float t580;
float t581;
float t582;
if(t578){
float t583 = (t534/t532);
float t584 = (-t583);
float t585 = (t525*t584);
float t586 = (t527+t585);
float t587 = atan(t586,t542);
float t588 = (u1.u0/30);
float t589 = (t587+t588);
float t590 = (2*3.1415927);
float t591 = (t589+t590);
float t592 = mod(t591,2);
float t593 = (t592*3.1415927);
float t594 = (2*3.1415927);
float t595 = (t593/t594);
float t596 = (t586*t586);
float t597 = (t532*t584);
float t598 = (t534+t597);
float t599 = (t598*t598);
float t600 = (t596+t599);
float t601 = (t540*t584);
float t602 = (t542+t601);
float t603 = (t602*t602);
float t604 = (t600+t603);
float t605 = sqrt(t604);
float t606 = (t605*t605);
float t607 = sqrt(t606);
float t608 = (t607-float(2.6));
float t609 = (t608/float(11.4));
vec4 t610 = texture(s4,vec2(t595,t609));
t579 = t610.x;
t580 = t610.y;
t581 = t610.z;
float t611;
if(t578){
t611 = 1;
} else {
t611 = 0;
}
float t612 = (t610.x*t610.x);
float t613 = (t610.y*t610.y);
float t614 = (t612+t613);
float t615 = (t610.z*t610.z);
float t616 = (t614+t615);
float t617 = sqrt(t616);
float t618 = (t617*t617);
float t619 = (t618/float(3.0));
bool t620 = (t619<=1);
float t621;
if(t620){
t621 = t619;
} else {
t621 = 1;
}
bool t622 = (t621>=0);
float t623;
if(t622){
t623 = t621;
} else {
t623 = 0;
}
float t624 = (t611*t623);
t582 = t624;
} else {
t579 = 0;
t580 = 0;
t581 = 0;
t582 = 0;
}
float t625 = (1-t563);
float t626 = (t560*t625);
float t627 = (t563+t626);
float t628 = (1-t627);
float t629 = (t582*t628);
float t630 = (t579*t629);
float t631 = (t567+t630);
float t632 = (-float(1.5));
float t633 = (t632*t180);
float t634 = (t633*t527);
float t635 = pow(t546,float(2.5));
float t636 = (t634/t635);
float t637 = (t636*float(0.16));
float t638 = (t525+t637);
float t639 = (t638*float(0.16));
float t640 = (t527+t639);
float t641 = (t640*t640);
float t642 = (t633*t534);
float t643 = (t642/t635);
float t644 = (t643*float(0.16));
float t645 = (t532+t644);
float t646 = (t645*float(0.16));
float t647 = (t534+t646);
float t648 = (t647*t647);
float t649 = (t641+t648);
float t650 = (t633*t542);
float t651 = (t650/t635);
float t652 = (t651*float(0.16));
float t653 = (t540+t652);
float t654 = (t653*float(0.16));
float t655 = (t542+t654);
float t656 = (t655*t655);
float t657 = (t649+t656);
float t658 = sqrt(t657);
float t659 = (t658*t658);
bool t660 = (t659<1);
float t661 = (t527*t527);
float t662 = (t534*t534);
float t663 = (t661+t662);
float t664 = (t542*t542);
float t665 = (t663+t664);
float t666 = sqrt(t665);
float t667 = (t666*t666);
bool t668 = (t667>1);
bool t669 = (t660&&t668);
float t670;
float t671;
float t672;
float t673;
if(t669){
t670 = 0;
t671 = 0;
t672 = 0;
t673 = 1;
} else {
t670 = 0;
t671 = 0;
t672 = 0;
t673 = 0;
}
float t674 = (1-t627);
float t675 = (t582*t674);
float t676 = (t627+t675);
float t677 = (1-t676);
float t678 = (t673*t677);
float t679 = (t670*t678);
float t680 = (t631+t679);
bool t681 = (t534>0);
bool t682 = (t647>0);
bool t683 = (!t682);
bool t684 = (t681&&t683);
bool t685 = (!t681);
bool t686 = (t682&&t685);
bool t687 = (t684||t686);
bool t688 = (t659<196);
bool t689 = (t659>float(6.76));
bool t690 = (t688&&t689);
bool t691 = (t687&&t690);
float t692;
float t693;
float t694;
float t695;
if(t691){
float t696 = (t647/t645);
float t697 = (-t696);
float t698 = (t638*t697);
float t699 = (t640+t698);
float t700 = atan(t699,t655);
float t701 = (u1.u0/30);
float t702 = (t700+t701);
float t703 = (2*3.1415927);
float t704 = (t702+t703);
float t705 = mod(t704,2);
float t706 = (t705*3.1415927);
float t707 = (2*3.1415927);
float t708 = (t706/t707);
float t709 = (t699*t699);
float t710 = (t645*t697);
float t711 = (t647+t710);
float t712 = (t711*t711);
float t713 = (t709+t712);
float t714 = (t653*t697);
float t715 = (t655+t714);
float t716 = (t715*t715);
float t717 = (t713+t716);
float t718 = sqrt(t717);
float t719 = (t718*t718);
float t720 = sqrt(t719);
float t721 = (t720-float(2.6));
float t722 = (t721/float(11.4));
vec4 t723 = texture(s4,vec2(t708,t722));
t692 = t723.x;
t693 = t723.y;
t694 = t723.z;
float t724;
if(t691){
t724 = 1;
} else {
t724 = 0;
}
float t725 = (t723.x*t723.x);
float t726 = (t723.y*t723.y);
float t727 = (t725+t726);
float t728 = (t723.z*t723.z);
float t729 = (t727+t728);
float t730 = sqrt(t729);
float t731 = (t730*t730);
float t732 = (t731/float(3.0));
bool t733 = (t732<=1);
float t734;
if(t733){
t734 = t732;
} else {
t734 = 1;
}
bool t735 = (t734>=0);
float t736;
if(t735){
t736 = t734;
} else {
t736 = 0;
}
float t737 = (t724*t736);
t695 = t737;
} else {
t692 = 0;
t693 = 0;
t694 = 0;
t695 = 0;
}
float t738 = (1-t676);
float t739 = (t673*t738);
float t740 = (t676+t739);
float t741 = (1-t740);
float t742 = (t695*t741);
float t743 = (t692*t742);
float t744 = (t680+t743);
float t745 = (-float(1.5));
float t746 = (t745*t180);
float t747 = (t746*t640);
float t748 = pow(t659,float(2.5));
float t749 = (t747/t748);
float t750 = (t749*float(0.16));
float t751 = (t638+t750);
float t752 = (t751*float(0.16));
float t753 = (t640+t752);
float t754 = (t753*t753);
float t755 = (t746*t647);
float t756 = (t755/t748);
float t757 = (t756*float(0.16));
float t758 = (t645+t757);
float t759 = (t758*float(0.16));
float t760 = (t647+t759);
float t761 = (t760*t760);
float t762 = (t754+t761);
float t763 = (t746*t655);
float t764 = (t763/t748);
float t765 = (t764*float(0.16));
float t766 = (t653+t765);
float t767 = (t766*float(0.16));
float t768 = (t655+t767);
float t769 = (t768*t768);
float t770 = (t762+t769);
float t771 = sqrt(t770);
float t772 = (t771*t771);
bool t773 = (t772<1);
float t774 = (t640*t640);
float t775 = (t647*t647);
float t776 = (t774+t775);
float t777 = (t655*t655);
float t778 = (t776+t777);
float t779 = sqrt(t778);
float t780 = (t779*t779);
bool t781 = (t780>1);
bool t782 = (t773&&t781);
float t783;
float t784;
float t785;
float t786;
if(t782){
t783 = 0;
t784 = 0;
t785 = 0;
t786 = 1;
} else {
t783 = 0;
t784 = 0;
t785 = 0;
t786 = 0;
}
float t787 = (1-t740);
float t788 = (t695*t787);
float t789 = (t740+t788);
float t790 = (1-t789);
float t791 = (t786*t790);
float t792 = (t783*t791);
float t793 = (t744+t792);
bool t794 = (t647>0);
bool t795 = (t760>0);
bool t796 = (!t795);
bool t797 = (t794&&t796);
bool t798 = (!t794);
bool t799 = (t795&&t798);
bool t800 = (t797||t799);
bool t801 = (t772<196);
bool t802 = (t772>float(6.76));
bool t803 = (t801&&t802);
bool t804 = (t800&&t803);
float t805;
float t806;
float t807;
float t808;
if(t804){
float t809 = (t760/t758);
float t810 = (-t809);
float t811 = (t751*t810);
float t812 = (t753+t811);
float t813 = atan(t812,t768);
float t814 = (u1.u0/30);
float t815 = (t813+t814);
float t816 = (2*3.1415927);
float t817 = (t815+t816);
float t818 = mod(t817,2);
float t819 = (t818*3.1415927);
float t820 = (2*3.1415927);
float t821 = (t819/t820);
float t822 = (t812*t812);
float t823 = (t758*t810);
float t824 = (t760+t823);
float t825 = (t824*t824);
float t826 = (t822+t825);
float t827 = (t766*t810);
float t828 = (t768+t827);
float t829 = (t828*t828);
float t830 = (t826+t829);
float t831 = sqrt(t830);
float t832 = (t831*t831);
float t833 = sqrt(t832);
float t834 = (t833-float(2.6));
float t835 = (t834/float(11.4));
vec4 t836 = texture(s4,vec2(t821,t835));
t805 = t836.x;
t806 = t836.y;
t807 = t836.z;
float t837;
if(t804){
t837 = 1;
} else {
t837 = 0;
}
float t838 = (t836.x*t836.x);
float t839 = (t836.y*t836.y);
float t840 = (t838+t839);
float t841 = (t836.z*t836.z);
float t842 = (t840+t841);
float t843 = sqrt(t842);
float t844 = (t843*t843);
float t845 = (t844/float(3.0));
bool t846 = (t845<=1);
float t847;
if(t846){
t847 = t845;
} else {
t847 = 1;
}
bool t848 = (t847>=0);
float t849;
if(t848){
t849 = t847;
} else {
t849 = 0;
}
float t850 = (t837*t849);
t808 = t850;
} else {
t805 = 0;
t806 = 0;
t807 = 0;
t808 = 0;
}
float t851 = (1-t789);
float t852 = (t786*t851);
float t853 = (t789+t852);
float t854 = (1-t853);
float t855 = (t808*t854);
float t856 = (t805*t855);
float t857 = (t793+t856);
float t858 = (-float(1.5));
float t859 = (t858*t180);
float t860 = (t859*t753);
float t861 = pow(t772,float(2.5));
float t862 = (t860/t861);
float t863 = (t862*float(0.16));
float t864 = (t751+t863);
float t865 = (t864*float(0.16));
float t866 = (t753+t865);
float t867 = (t866*t866);
float t868 = (t859*t760);
float t869 = (t868/t861);
float t870 = (t869*float(0.16));
float t871 = (t758+t870);
float t872 = (t871*float(0.16));
float t873 = (t760+t872);
float t874 = (t873*t873);
float t875 = (t867+t874);
float t876 = (t859*t768);
float t877 = (t876/t861);
float t878 = (t877*float(0.16));
float t879 = (t766+t878);
float t880 = (t879*float(0.16));
float t881 = (t768+t880);
float t882 = (t881*t881);
float t883 = (t875+t882);
float t884 = sqrt(t883);
float t885 = (t884*t884);
bool t886 = (t885<1);
float t887 = (t753*t753);
float t888 = (t760*t760);
float t889 = (t887+t888);
float t890 = (t768*t768);
float t891 = (t889+t890);
float t892 = sqrt(t891);
float t893 = (t892*t892);
bool t894 = (t893>1);
bool t895 = (t886&&t894);
float t896;
float t897;
float t898;
float t899;
if(t895){
t896 = 0;
t897 = 0;
t898 = 0;
t899 = 1;
} else {
t896 = 0;
t897 = 0;
t898 = 0;
t899 = 0;
}
float t900 = (1-t853);
float t901 = (t808*t900);
float t902 = (t853+t901);
float t903 = (1-t902);
float t904 = (t899*t903);
float t905 = (t896*t904);
float t906 = (t857+t905);
bool t907 = (t760>0);
bool t908 = (t873>0);
bool t909 = (!t908);
bool t910 = (t907&&t909);
bool t911 = (!t907);
bool t912 = (t908&&t911);
bool t913 = (t910||t912);
bool t914 = (t885<196);
bool t915 = (t885>float(6.76));
bool t916 = (t914&&t915);
bool t917 = (t913&&t916);
float t918;
float t919;
float t920;
float t921;
if(t917){
float t922 = (t873/t871);
float t923 = (-t922);
float t924 = (t864*t923);
float t925 = (t866+t924);
float t926 = atan(t925,t881);
float t927 = (u1.u0/30);
float t928 = (t926+t927);
float t929 = (2*3.1415927);
float t930 = (t928+t929);
float t931 = mod(t930,2);
float t932 = (t931*3.1415927);
float t933 = (2*3.1415927);
float t934 = (t932/t933);
float t935 = (t925*t925);
float t936 = (t871*t923);
float t937 = (t873+t936);
float t938 = (t937*t937);
float t939 = (t935+t938);
float t940 = (t879*t923);
float t941 = (t881+t940);
float t942 = (t941*t941);
float t943 = (t939+t942);
float t944 = sqrt(t943);
float t945 = (t944*t944);
float t946 = sqrt(t945);
float t947 = (t946-float(2.6));
float t948 = (t947/float(11.4));
vec4 t949 = texture(s4,vec2(t934,t948));
t918 = t949.x;
t919 = t949.y;
t920 = t949.z;
float t950;
if(t917){
t950 = 1;
} else {
t950 = 0;
}
float t951 = (t949.x*t949.x);
float t952 = (t949.y*t949.y);
float t953 = (t951+t952);
float t954 = (t949.z*t949.z);
float t955 = (t953+t954);
float t956 = sqrt(t955);
float t957 = (t956*t956);
float t958 = (t957/float(3.0));
bool t959 = (t958<=1);
float t960;
if(t959){
t960 = t958;
} else {
t960 = 1;
}
bool t961 = (t960>=0);
float t962;
if(t961){
t962 = t960;
} else {
t962 = 0;
}
float t963 = (t950*t962);
t921 = t963;
} else {
t918 = 0;
t919 = 0;
t920 = 0;
t921 = 0;
}
float t964 = (1-t902);
float t965 = (t899*t964);
float t966 = (t902+t965);
float t967 = (1-t966);
float t968 = (t921*t967);
float t969 = (t918*t968);
float t970 = (t906+t969);
float t971 = (-float(1.5));
float t972 = (t971*t180);
float t973 = (t972*t866);
float t974 = pow(t885,float(2.5));
float t975 = (t973/t974);
float t976 = (t975*float(0.16));
float t977 = (t864+t976);
float t978 = (t977*float(0.16));
float t979 = (t866+t978);
float t980 = (t979*t979);
float t981 = (t972*t873);
float t982 = (t981/t974);
float t983 = (t982*float(0.16));
float t984 = (t871+t983);
float t985 = (t984*float(0.16));
float t986 = (t873+t985);
float t987 = (t986*t986);
float t988 = (t980+t987);
float t989 = (t972*t881);
float t990 = (t989/t974);
float t991 = (t990*float(0.16));
float t992 = (t879+t991);
float t993 = (t992*float(0.16));
float t994 = (t881+t993);
float t995 = (t994*t994);
float t996 = (t988+t995);
float t997 = sqrt(t996);
float t998 = (t997*t997);
bool t999 = (t998<1);
float t1000 = (t866*t866);
float t1001 = (t873*t873);
float t1002 = (t1000+t1001);
float t1003 = (t881*t881);
float t1004 = (t1002+t1003);
float t1005 = sqrt(t1004);
float t1006 = (t1005*t1005);
bool t1007 = (t1006>1);
bool t1008 = (t999&&t1007);
float t1009;
float t1010;
float t1011;
float t1012;
if(t1008){
t1009 = 0;
t1010 = 0;
t1011 = 0;
t1012 = 1;
} else {
t1009 = 0;
t1010 = 0;
t1011 = 0;
t1012 = 0;
}
float t1013 = (1-t966);
float t1014 = (t921*t1013);
float t1015 = (t966+t1014);
float t1016 = (1-t1015);
float t1017 = (t1012*t1016);
float t1018 = (t1009*t1017);
float t1019 = (t970+t1018);
bool t1020 = (t873>0);
bool t1021 = (t986>0);
bool t1022 = (!t1021);
bool t1023 = (t1020&&t1022);
bool t1024 = (!t1020);
bool t1025 = (t1021&&t1024);
bool t1026 = (t1023||t1025);
bool t1027 = (t998<196);
bool t1028 = (t998>float(6.76));
bool t1029 = (t1027&&t1028);
bool t1030 = (t1026&&t1029);
float t1031;
float t1032;
float t1033;
float t1034;
if(t1030){
float t1035 = (t986/t984);
float t1036 = (-t1035);
float t1037 = (t977*t1036);
float t1038 = (t979+t1037);
float t1039 = atan(t1038,t994);
float t1040 = (u1.u0/30);
float t1041 = (t1039+t1040);
float t1042 = (2*3.1415927);
float t1043 = (t1041+t1042);
float t1044 = mod(t1043,2);
float t1045 = (t1044*3.1415927);
float t1046 = (2*3.1415927);
float t1047 = (t1045/t1046);
float t1048 = (t1038*t1038);
float t1049 = (t984*t1036);
float t1050 = (t986+t1049);
float t1051 = (t1050*t1050);
float t1052 = (t1048+t1051);
float t1053 = (t992*t1036);
float t1054 = (t994+t1053);
float t1055 = (t1054*t1054);
float t1056 = (t1052+t1055);
float t1057 = sqrt(t1056);
float t1058 = (t1057*t1057);
float t1059 = sqrt(t1058);
float t1060 = (t1059-float(2.6));
float t1061 = (t1060/float(11.4));
vec4 t1062 = texture(s4,vec2(t1047,t1061));
t1031 = t1062.x;
t1032 = t1062.y;
t1033 = t1062.z;
float t1063;
if(t1030){
t1063 = 1;
} else {
t1063 = 0;
}
float t1064 = (t1062.x*t1062.x);
float t1065 = (t1062.y*t1062.y);
float t1066 = (t1064+t1065);
float t1067 = (t1062.z*t1062.z);
float t1068 = (t1066+t1067);
float t1069 = sqrt(t1068);
float t1070 = (t1069*t1069);
float t1071 = (t1070/float(3.0));
bool t1072 = (t1071<=1);
float t1073;
if(t1072){
t1073 = t1071;
} else {
t1073 = 1;
}
bool t1074 = (t1073>=0);
float t1075;
if(t1074){
t1075 = t1073;
} else {
t1075 = 0;
}
float t1076 = (t1063*t1075);
t1034 = t1076;
} else {
t1031 = 0;
t1032 = 0;
t1033 = 0;
t1034 = 0;
}
float t1077 = (1-t1015);
float t1078 = (t1012*t1077);
float t1079 = (t1015+t1078);
float t1080 = (1-t1079);
float t1081 = (t1034*t1080);
float t1082 = (t1031*t1081);
float t1083 = (t1019+t1082);
float t1084 = (-float(1.5));
float t1085 = (t1084*t180);
float t1086 = (t1085*t979);
float t1087 = pow(t998,float(2.5));
float t1088 = (t1086/t1087);
float t1089 = (t1088*float(0.16));
float t1090 = (t977+t1089);
float t1091 = (t1090*float(0.16));
float t1092 = (t979+t1091);
float t1093 = (t1092*t1092);
float t1094 = (t1085*t986);
float t1095 = (t1094/t1087);
float t1096 = (t1095*float(0.16));
float t1097 = (t984+t1096);
float t1098 = (t1097*float(0.16));
float t1099 = (t986+t1098);
float t1100 = (t1099*t1099);
float t1101 = (t1093+t1100);
float t1102 = (t1085*t994);
float t1103 = (t1102/t1087);
float t1104 = (t1103*float(0.16));
float t1105 = (t992+t1104);
float t1106 = (t1105*float(0.16));
float t1107 = (t994+t1106);
float t1108 = (t1107*t1107);
float t1109 = (t1101+t1108);
float t1110 = sqrt(t1109);
float t1111 = (t1110*t1110);
bool t1112 = (t1111<1);
float t1113 = (t979*t979);
float t1114 = (t986*t986);
float t1115 = (t1113+t1114);
float t1116 = (t994*t994);
float t1117 = (t1115+t1116);
float t1118 = sqrt(t1117);
float t1119 = (t1118*t1118);
bool t1120 = (t1119>1);
bool t1121 = (t1112&&t1120);
float t1122;
float t1123;
float t1124;
float t1125;
if(t1121){
t1122 = 0;
t1123 = 0;
t1124 = 0;
t1125 = 1;
} else {
t1122 = 0;
t1123 = 0;
t1124 = 0;
t1125 = 0;
}
float t1126 = (1-t1079);
float t1127 = (t1034*t1126);
float t1128 = (t1079+t1127);
float t1129 = (1-t1128);
float t1130 = (t1125*t1129);
float t1131 = (t1122*t1130);
float t1132 = (t1083+t1131);
bool t1133 = (t986>0);
bool t1134 = (t1099>0);
bool t1135 = (!t1134);
bool t1136 = (t1133&&t1135);
bool t1137 = (!t1133);
bool t1138 = (t1134&&t1137);
bool t1139 = (t1136||t1138);
bool t1140 = (t1111<196);
bool t1141 = (t1111>float(6.76));
bool t1142 = (t1140&&t1141);
bool t1143 = (t1139&&t1142);
float t1144;
float t1145;
float t1146;
float t1147;
if(t1143){
float t1148 = (t1099/t1097);
float t1149 = (-t1148);
float t1150 = (t1090*t1149);
float t1151 = (t1092+t1150);
float t1152 = atan(t1151,t1107);
float t1153 = (u1.u0/30);
float t1154 = (t1152+t1153);
float t1155 = (2*3.1415927);
float t1156 = (t1154+t1155);
float t1157 = mod(t1156,2);
float t1158 = (t1157*3.1415927);
float t1159 = (2*3.1415927);
float t1160 = (t1158/t1159);
float t1161 = (t1151*t1151);
float t1162 = (t1097*t1149);
float t1163 = (t1099+t1162);
float t1164 = (t1163*t1163);
float t1165 = (t1161+t1164);
float t1166 = (t1105*t1149);
float t1167 = (t1107+t1166);
float t1168 = (t1167*t1167);
float t1169 = (t1165+t1168);
float t1170 = sqrt(t1169);
float t1171 = (t1170*t1170);
float t1172 = sqrt(t1171);
float t1173 = (t1172-float(2.6));
float t1174 = (t1173/float(11.4));
vec4 t1175 = texture(s4,vec2(t1160,t1174));
t1144 = t1175.x;
t1145 = t1175.y;
t1146 = t1175.z;
float t1176;
if(t1143){
t1176 = 1;
} else {
t1176 = 0;
}
float t1177 = (t1175.x*t1175.x);
float t1178 = (t1175.y*t1175.y);
float t1179 = (t1177+t1178);
float t1180 = (t1175.z*t1175.z);
float t1181 = (t1179+t1180);
float t1182 = sqrt(t1181);
float t1183 = (t1182*t1182);
float t1184 = (t1183/float(3.0));
bool t1185 = (t1184<=1);
float t1186;
if(t1185){
t1186 = t1184;
} else {
t1186 = 1;
}
bool t1187 = (t1186>=0);
float t1188;
if(t1187){
t1188 = t1186;
} else {
t1188 = 0;
}
float t1189 = (t1176*t1188);
t1147 = t1189;
} else {
t1144 = 0;
t1145 = 0;
t1146 = 0;
t1147 = 0;
}
float t1190 = (1-t1128);
float t1191 = (t1125*t1190);
float t1192 = (t1128+t1191);
float t1193 = (1-t1192);
float t1194 = (t1147*t1193);
float t1195 = (t1144*t1194);
float t1196 = (t1132+t1195);
float t1197 = (-float(1.5));
float t1198 = (t1197*t180);
float t1199 = (t1198*t1092);
float t1200 = pow(t1111,float(2.5));
float t1201 = (t1199/t1200);
float t1202 = (t1201*float(0.16));
float t1203 = (t1090+t1202);
float t1204 = (t1203*float(0.16));
float t1205 = (t1092+t1204);
float t1206 = (t1205*t1205);
float t1207 = (t1198*t1099);
float t1208 = (t1207/t1200);
float t1209 = (t1208*float(0.16));
float t1210 = (t1097+t1209);
float t1211 = (t1210*float(0.16));
float t1212 = (t1099+t1211);
float t1213 = (t1212*t1212);
float t1214 = (t1206+t1213);
float t1215 = (t1198*t1107);
float t1216 = (t1215/t1200);
float t1217 = (t1216*float(0.16));
float t1218 = (t1105+t1217);
float t1219 = (t1218*float(0.16));
float t1220 = (t1107+t1219);
float t1221 = (t1220*t1220);
float t1222 = (t1214+t1221);
float t1223 = sqrt(t1222);
float t1224 = (t1223*t1223);
bool t1225 = (t1224<1);
float t1226 = (t1092*t1092);
float t1227 = (t1099*t1099);
float t1228 = (t1226+t1227);
float t1229 = (t1107*t1107);
float t1230 = (t1228+t1229);
float t1231 = sqrt(t1230);
float t1232 = (t1231*t1231);
bool t1233 = (t1232>1);
bool t1234 = (t1225&&t1233);
float t1235;
float t1236;
float t1237;
float t1238;
if(t1234){
t1235 = 0;
t1236 = 0;
t1237 = 0;
t1238 = 1;
} else {
t1235 = 0;
t1236 = 0;
t1237 = 0;
t1238 = 0;
}
float t1239 = (1-t1192);
float t1240 = (t1147*t1239);
float t1241 = (t1192+t1240);
float t1242 = (1-t1241);
float t1243 = (t1238*t1242);
float t1244 = (t1235*t1243);
float t1245 = (t1196+t1244);
bool t1246 = (t1099>0);
bool t1247 = (t1212>0);
bool t1248 = (!t1247);
bool t1249 = (t1246&&t1248);
bool t1250 = (!t1246);
bool t1251 = (t1247&&t1250);
bool t1252 = (t1249||t1251);
bool t1253 = (t1224<196);
bool t1254 = (t1224>float(6.76));
bool t1255 = (t1253&&t1254);
bool t1256 = (t1252&&t1255);
float t1257;
float t1258;
float t1259;
float t1260;
if(t1256){
float t1261 = (t1212/t1210);
float t1262 = (-t1261);
float t1263 = (t1203*t1262);
float t1264 = (t1205+t1263);
float t1265 = atan(t1264,t1220);
float t1266 = (u1.u0/30);
float t1267 = (t1265+t1266);
float t1268 = (2*3.1415927);
float t1269 = (t1267+t1268);
float t1270 = mod(t1269,2);
float t1271 = (t1270*3.1415927);
float t1272 = (2*3.1415927);
float t1273 = (t1271/t1272);
float t1274 = (t1264*t1264);
float t1275 = (t1210*t1262);
float t1276 = (t1212+t1275);
float t1277 = (t1276*t1276);
float t1278 = (t1274+t1277);
float t1279 = (t1218*t1262);
float t1280 = (t1220+t1279);
float t1281 = (t1280*t1280);
float t1282 = (t1278+t1281);
float t1283 = sqrt(t1282);
float t1284 = (t1283*t1283);
float t1285 = sqrt(t1284);
float t1286 = (t1285-float(2.6));
float t1287 = (t1286/float(11.4));
vec4 t1288 = texture(s4,vec2(t1273,t1287));
t1257 = t1288.x;
t1258 = t1288.y;
t1259 = t1288.z;
float t1289;
if(t1256){
t1289 = 1;
} else {
t1289 = 0;
}
float t1290 = (t1288.x*t1288.x);
float t1291 = (t1288.y*t1288.y);
float t1292 = (t1290+t1291);
float t1293 = (t1288.z*t1288.z);
float t1294 = (t1292+t1293);
float t1295 = sqrt(t1294);
float t1296 = (t1295*t1295);
float t1297 = (t1296/float(3.0));
bool t1298 = (t1297<=1);
float t1299;
if(t1298){
t1299 = t1297;
} else {
t1299 = 1;
}
bool t1300 = (t1299>=0);
float t1301;
if(t1300){
t1301 = t1299;
} else {
t1301 = 0;
}
float t1302 = (t1289*t1301);
t1260 = t1302;
} else {
t1257 = 0;
t1258 = 0;
t1259 = 0;
t1260 = 0;
}
float t1303 = (1-t1241);
float t1304 = (t1238*t1303);
float t1305 = (t1241+t1304);
float t1306 = (1-t1305);
float t1307 = (t1260*t1306);
float t1308 = (t1257*t1307);
float t1309 = (t1245+t1308);
float t1310 = (-float(1.5));
float t1311 = (t1310*t180);
float t1312 = (t1311*t1205);
float t1313 = pow(t1224,float(2.5));
float t1314 = (t1312/t1313);
float t1315 = (t1314*float(0.16));
float t1316 = (t1203+t1315);
float t1317 = (t1316*float(0.16));
float t1318 = (t1205+t1317);
float t1319 = (t1318*t1318);
float t1320 = (t1311*t1212);
float t1321 = (t1320/t1313);
float t1322 = (t1321*float(0.16));
float t1323 = (t1210+t1322);
float t1324 = (t1323*float(0.16));
float t1325 = (t1212+t1324);
float t1326 = (t1325*t1325);
float t1327 = (t1319+t1326);
float t1328 = (t1311*t1220);
float t1329 = (t1328/t1313);
float t1330 = (t1329*float(0.16));
float t1331 = (t1218+t1330);
float t1332 = (t1331*float(0.16));
float t1333 = (t1220+t1332);
float t1334 = (t1333*t1333);
float t1335 = (t1327+t1334);
float t1336 = sqrt(t1335);
float t1337 = (t1336*t1336);
bool t1338 = (t1337<1);
float t1339 = (t1205*t1205);
float t1340 = (t1212*t1212);
float t1341 = (t1339+t1340);
float t1342 = (t1220*t1220);
float t1343 = (t1341+t1342);
float t1344 = sqrt(t1343);
float t1345 = (t1344*t1344);
bool t1346 = (t1345>1);
bool t1347 = (t1338&&t1346);
float t1348;
float t1349;
float t1350;
float t1351;
if(t1347){
t1348 = 0;
t1349 = 0;
t1350 = 0;
t1351 = 1;
} else {
t1348 = 0;
t1349 = 0;
t1350 = 0;
t1351 = 0;
}
float t1352 = (1-t1305);
float t1353 = (t1260*t1352);
float t1354 = (t1305+t1353);
float t1355 = (1-t1354);
float t1356 = (t1351*t1355);
float t1357 = (t1348*t1356);
float t1358 = (t1309+t1357);
bool t1359 = (t1212>0);
bool t1360 = (t1325>0);
bool t1361 = (!t1360);
bool t1362 = (t1359&&t1361);
bool t1363 = (!t1359);
bool t1364 = (t1360&&t1363);
bool t1365 = (t1362||t1364);
bool t1366 = (t1337<196);
bool t1367 = (t1337>float(6.76));
bool t1368 = (t1366&&t1367);
bool t1369 = (t1365&&t1368);
float t1370;
float t1371;
float t1372;
float t1373;
if(t1369){
float t1374 = (t1325/t1323);
float t1375 = (-t1374);
float t1376 = (t1316*t1375);
float t1377 = (t1318+t1376);
float t1378 = atan(t1377,t1333);
float t1379 = (u1.u0/30);
float t1380 = (t1378+t1379);
float t1381 = (2*3.1415927);
float t1382 = (t1380+t1381);
float t1383 = mod(t1382,2);
float t1384 = (t1383*3.1415927);
float t1385 = (2*3.1415927);
float t1386 = (t1384/t1385);
float t1387 = (t1377*t1377);
float t1388 = (t1323*t1375);
float t1389 = (t1325+t1388);
float t1390 = (t1389*t1389);
float t1391 = (t1387+t1390);
float t1392 = (t1331*t1375);
float t1393 = (t1333+t1392);
float t1394 = (t1393*t1393);
float t1395 = (t1391+t1394);
float t1396 = sqrt(t1395);
float t1397 = (t1396*t1396);
float t1398 = sqrt(t1397);
float t1399 = (t1398-float(2.6));
float t1400 = (t1399/float(11.4));
vec4 t1401 = texture(s4,vec2(t1386,t1400));
t1370 = t1401.x;
t1371 = t1401.y;
t1372 = t1401.z;
float t1402;
if(t1369){
t1402 = 1;
} else {
t1402 = 0;
}
float t1403 = (t1401.x*t1401.x);
float t1404 = (t1401.y*t1401.y);
float t1405 = (t1403+t1404);
float t1406 = (t1401.z*t1401.z);
float t1407 = (t1405+t1406);
float t1408 = sqrt(t1407);
float t1409 = (t1408*t1408);
float t1410 = (t1409/float(3.0));
bool t1411 = (t1410<=1);
float t1412;
if(t1411){
t1412 = t1410;
} else {
t1412 = 1;
}
bool t1413 = (t1412>=0);
float t1414;
if(t1413){
t1414 = t1412;
} else {
t1414 = 0;
}
float t1415 = (t1402*t1414);
t1373 = t1415;
} else {
t1370 = 0;
t1371 = 0;
t1372 = 0;
t1373 = 0;
}
float t1416 = (1-t1354);
float t1417 = (t1351*t1416);
float t1418 = (t1354+t1417);
float t1419 = (1-t1418);
float t1420 = (t1373*t1419);
float t1421 = (t1370*t1420);
float t1422 = (t1358+t1421);
float t1423 = (-float(1.5));
float t1424 = (t1423*t180);
float t1425 = (t1424*t1318);
float t1426 = pow(t1337,float(2.5));
float t1427 = (t1425/t1426);
float t1428 = (t1427*float(0.16));
float t1429 = (t1316+t1428);
float t1430 = (t1429*float(0.16));
float t1431 = (t1318+t1430);
float t1432 = (t1431*t1431);
float t1433 = (t1424*t1325);
float t1434 = (t1433/t1426);
float t1435 = (t1434*float(0.16));
float t1436 = (t1323+t1435);
float t1437 = (t1436*float(0.16));
float t1438 = (t1325+t1437);
float t1439 = (t1438*t1438);
float t1440 = (t1432+t1439);
float t1441 = (t1424*t1333);
float t1442 = (t1441/t1426);
float t1443 = (t1442*float(0.16));
float t1444 = (t1331+t1443);
float t1445 = (t1444*float(0.16));
float t1446 = (t1333+t1445);
float t1447 = (t1446*t1446);
float t1448 = (t1440+t1447);
float t1449 = sqrt(t1448);
float t1450 = (t1449*t1449);
bool t1451 = (t1450<1);
float t1452 = (t1318*t1318);
float t1453 = (t1325*t1325);
float t1454 = (t1452+t1453);
float t1455 = (t1333*t1333);
float t1456 = (t1454+t1455);
float t1457 = sqrt(t1456);
float t1458 = (t1457*t1457);
bool t1459 = (t1458>1);
bool t1460 = (t1451&&t1459);
float t1461;
float t1462;
float t1463;
float t1464;
if(t1460){
t1461 = 0;
t1462 = 0;
t1463 = 0;
t1464 = 1;
} else {
t1461 = 0;
t1462 = 0;
t1463 = 0;
t1464 = 0;
}
float t1465 = (1-t1418);
float t1466 = (t1373*t1465);
float t1467 = (t1418+t1466);
float t1468 = (1-t1467);
float t1469 = (t1464*t1468);
float t1470 = (t1461*t1469);
float t1471 = (t1422+t1470);
bool t1472 = (t1325>0);
bool t1473 = (t1438>0);
bool t1474 = (!t1473);
bool t1475 = (t1472&&t1474);
bool t1476 = (!t1472);
bool t1477 = (t1473&&t1476);
bool t1478 = (t1475||t1477);
bool t1479 = (t1450<196);
bool t1480 = (t1450>float(6.76));
bool t1481 = (t1479&&t1480);
bool t1482 = (t1478&&t1481);
float t1483;
float t1484;
float t1485;
float t1486;
if(t1482){
float t1487 = (t1438/t1436);
float t1488 = (-t1487);
float t1489 = (t1429*t1488);
float t1490 = (t1431+t1489);
float t1491 = atan(t1490,t1446);
float t1492 = (u1.u0/30);
float t1493 = (t1491+t1492);
float t1494 = (2*3.1415927);
float t1495 = (t1493+t1494);
float t1496 = mod(t1495,2);
float t1497 = (t1496*3.1415927);
float t1498 = (2*3.1415927);
float t1499 = (t1497/t1498);
float t1500 = (t1490*t1490);
float t1501 = (t1436*t1488);
float t1502 = (t1438+t1501);
float t1503 = (t1502*t1502);
float t1504 = (t1500+t1503);
float t1505 = (t1444*t1488);
float t1506 = (t1446+t1505);
float t1507 = (t1506*t1506);
float t1508 = (t1504+t1507);
float t1509 = sqrt(t1508);
float t1510 = (t1509*t1509);
float t1511 = sqrt(t1510);
float t1512 = (t1511-float(2.6));
float t1513 = (t1512/float(11.4));
vec4 t1514 = texture(s4,vec2(t1499,t1513));
t1483 = t1514.x;
t1484 = t1514.y;
t1485 = t1514.z;
float t1515;
if(t1482){
t1515 = 1;
} else {
t1515 = 0;
}
float t1516 = (t1514.x*t1514.x);
float t1517 = (t1514.y*t1514.y);
float t1518 = (t1516+t1517);
float t1519 = (t1514.z*t1514.z);
float t1520 = (t1518+t1519);
float t1521 = sqrt(t1520);
float t1522 = (t1521*t1521);
float t1523 = (t1522/float(3.0));
bool t1524 = (t1523<=1);
float t1525;
if(t1524){
t1525 = t1523;
} else {
t1525 = 1;
}
bool t1526 = (t1525>=0);
float t1527;
if(t1526){
t1527 = t1525;
} else {
t1527 = 0;
}
float t1528 = (t1515*t1527);
t1486 = t1528;
} else {
t1483 = 0;
t1484 = 0;
t1485 = 0;
t1486 = 0;
}
float t1529 = (1-t1467);
float t1530 = (t1464*t1529);
float t1531 = (t1467+t1530);
float t1532 = (1-t1531);
float t1533 = (t1486*t1532);
float t1534 = (t1483*t1533);
float t1535 = (t1471+t1534);
float t1536 = (-float(1.5));
float t1537 = (t1536*t180);
float t1538 = (t1537*t1431);
float t1539 = pow(t1450,float(2.5));
float t1540 = (t1538/t1539);
float t1541 = (t1540*float(0.16));
float t1542 = (t1429+t1541);
float t1543 = (t1542*float(0.16));
float t1544 = (t1431+t1543);
float t1545 = (t1544*t1544);
float t1546 = (t1537*t1438);
float t1547 = (t1546/t1539);
float t1548 = (t1547*float(0.16));
float t1549 = (t1436+t1548);
float t1550 = (t1549*float(0.16));
float t1551 = (t1438+t1550);
float t1552 = (t1551*t1551);
float t1553 = (t1545+t1552);
float t1554 = (t1537*t1446);
float t1555 = (t1554/t1539);
float t1556 = (t1555*float(0.16));
float t1557 = (t1444+t1556);
float t1558 = (t1557*float(0.16));
float t1559 = (t1446+t1558);
float t1560 = (t1559*t1559);
float t1561 = (t1553+t1560);
float t1562 = sqrt(t1561);
float t1563 = (t1562*t1562);
bool t1564 = (t1563<1);
float t1565 = (t1431*t1431);
float t1566 = (t1438*t1438);
float t1567 = (t1565+t1566);
float t1568 = (t1446*t1446);
float t1569 = (t1567+t1568);
float t1570 = sqrt(t1569);
float t1571 = (t1570*t1570);
bool t1572 = (t1571>1);
bool t1573 = (t1564&&t1572);
float t1574;
float t1575;
float t1576;
float t1577;
if(t1573){
t1574 = 0;
t1575 = 0;
t1576 = 0;
t1577 = 1;
} else {
t1574 = 0;
t1575 = 0;
t1576 = 0;
t1577 = 0;
}
float t1578 = (1-t1531);
float t1579 = (t1486*t1578);
float t1580 = (t1531+t1579);
float t1581 = (1-t1580);
float t1582 = (t1577*t1581);
float t1583 = (t1574*t1582);
float t1584 = (t1535+t1583);
bool t1585 = (t1438>0);
bool t1586 = (t1551>0);
bool t1587 = (!t1586);
bool t1588 = (t1585&&t1587);
bool t1589 = (!t1585);
bool t1590 = (t1586&&t1589);
bool t1591 = (t1588||t1590);
bool t1592 = (t1563<196);
bool t1593 = (t1563>float(6.76));
bool t1594 = (t1592&&t1593);
bool t1595 = (t1591&&t1594);
float t1596;
float t1597;
float t1598;
float t1599;
if(t1595){
float t1600 = (t1551/t1549);
float t1601 = (-t1600);
float t1602 = (t1542*t1601);
float t1603 = (t1544+t1602);
float t1604 = atan(t1603,t1559);
float t1605 = (u1.u0/30);
float t1606 = (t1604+t1605);
float t1607 = (2*3.1415927);
float t1608 = (t1606+t1607);
float t1609 = mod(t1608,2);
float t1610 = (t1609*3.1415927);
float t1611 = (2*3.1415927);
float t1612 = (t1610/t1611);
float t1613 = (t1603*t1603);
float t1614 = (t1549*t1601);
float t1615 = (t1551+t1614);
float t1616 = (t1615*t1615);
float t1617 = (t1613+t1616);
float t1618 = (t1557*t1601);
float t1619 = (t1559+t1618);
float t1620 = (t1619*t1619);
float t1621 = (t1617+t1620);
float t1622 = sqrt(t1621);
float t1623 = (t1622*t1622);
float t1624 = sqrt(t1623);
float t1625 = (t1624-float(2.6));
float t1626 = (t1625/float(11.4));
vec4 t1627 = texture(s4,vec2(t1612,t1626));
t1596 = t1627.x;
t1597 = t1627.y;
t1598 = t1627.z;
float t1628;
if(t1595){
t1628 = 1;
} else {
t1628 = 0;
}
float t1629 = (t1627.x*t1627.x);
float t1630 = (t1627.y*t1627.y);
float t1631 = (t1629+t1630);
float t1632 = (t1627.z*t1627.z);
float t1633 = (t1631+t1632);
float t1634 = sqrt(t1633);
float t1635 = (t1634*t1634);
float t1636 = (t1635/float(3.0));
bool t1637 = (t1636<=1);
float t1638;
if(t1637){
t1638 = t1636;
} else {
t1638 = 1;
}
bool t1639 = (t1638>=0);
float t1640;
if(t1639){
t1640 = t1638;
} else {
t1640 = 0;
}
float t1641 = (t1628*t1640);
t1599 = t1641;
} else {
t1596 = 0;
t1597 = 0;
t1598 = 0;
t1599 = 0;
}
float t1642 = (1-t1580);
float t1643 = (t1577*t1642);
float t1644 = (t1580+t1643);
float t1645 = (1-t1644);
float t1646 = (t1599*t1645);
float t1647 = (t1596*t1646);
float t1648 = (t1584+t1647);
float t1649 = (-float(1.5));
float t1650 = (t1649*t180);
float t1651 = (t1650*t1544);
float t1652 = pow(t1563,float(2.5));
float t1653 = (t1651/t1652);
float t1654 = (t1653*float(0.16));
float t1655 = (t1542+t1654);
float t1656 = (t1655*float(0.16));
float t1657 = (t1544+t1656);
float t1658 = (t1657*t1657);
float t1659 = (t1650*t1551);
float t1660 = (t1659/t1652);
float t1661 = (t1660*float(0.16));
float t1662 = (t1549+t1661);
float t1663 = (t1662*float(0.16));
float t1664 = (t1551+t1663);
float t1665 = (t1664*t1664);
float t1666 = (t1658+t1665);
float t1667 = (t1650*t1559);
float t1668 = (t1667/t1652);
float t1669 = (t1668*float(0.16));
float t1670 = (t1557+t1669);
float t1671 = (t1670*float(0.16));
float t1672 = (t1559+t1671);
float t1673 = (t1672*t1672);
float t1674 = (t1666+t1673);
float t1675 = sqrt(t1674);
float t1676 = (t1675*t1675);
bool t1677 = (t1676<1);
float t1678 = (t1544*t1544);
float t1679 = (t1551*t1551);
float t1680 = (t1678+t1679);
float t1681 = (t1559*t1559);
float t1682 = (t1680+t1681);
float t1683 = sqrt(t1682);
float t1684 = (t1683*t1683);
bool t1685 = (t1684>1);
bool t1686 = (t1677&&t1685);
float t1687;
float t1688;
float t1689;
float t1690;
if(t1686){
t1687 = 0;
t1688 = 0;
t1689 = 0;
t1690 = 1;
} else {
t1687 = 0;
t1688 = 0;
t1689 = 0;
t1690 = 0;
}
float t1691 = (1-t1644);
float t1692 = (t1599*t1691);
float t1693 = (t1644+t1692);
float t1694 = (1-t1693);
float t1695 = (t1690*t1694);
float t1696 = (t1687*t1695);
float t1697 = (t1648+t1696);
bool t1698 = (t1551>0);
bool t1699 = (t1664>0);
bool t1700 = (!t1699);
bool t1701 = (t1698&&t1700);
bool t1702 = (!t1698);
bool t1703 = (t1699&&t1702);
bool t1704 = (t1701||t1703);
bool t1705 = (t1676<196);
bool t1706 = (t1676>float(6.76));
bool t1707 = (t1705&&t1706);
bool t1708 = (t1704&&t1707);
float t1709;
float t1710;
float t1711;
float t1712;
if(t1708){
float t1713 = (t1664/t1662);
float t1714 = (-t1713);
float t1715 = (t1655*t1714);
float t1716 = (t1657+t1715);
float t1717 = atan(t1716,t1672);
float t1718 = (u1.u0/30);
float t1719 = (t1717+t1718);
float t1720 = (2*3.1415927);
float t1721 = (t1719+t1720);
float t1722 = mod(t1721,2);
float t1723 = (t1722*3.1415927);
float t1724 = (2*3.1415927);
float t1725 = (t1723/t1724);
float t1726 = (t1716*t1716);
float t1727 = (t1662*t1714);
float t1728 = (t1664+t1727);
float t1729 = (t1728*t1728);
float t1730 = (t1726+t1729);
float t1731 = (t1670*t1714);
float t1732 = (t1672+t1731);
float t1733 = (t1732*t1732);
float t1734 = (t1730+t1733);
float t1735 = sqrt(t1734);
float t1736 = (t1735*t1735);
float t1737 = sqrt(t1736);
float t1738 = (t1737-float(2.6));
float t1739 = (t1738/float(11.4));
vec4 t1740 = texture(s4,vec2(t1725,t1739));
t1709 = t1740.x;
t1710 = t1740.y;
t1711 = t1740.z;
float t1741;
if(t1708){
t1741 = 1;
} else {
t1741 = 0;
}
float t1742 = (t1740.x*t1740.x);
float t1743 = (t1740.y*t1740.y);
float t1744 = (t1742+t1743);
float t1745 = (t1740.z*t1740.z);
float t1746 = (t1744+t1745);
float t1747 = sqrt(t1746);
float t1748 = (t1747*t1747);
float t1749 = (t1748/float(3.0));
bool t1750 = (t1749<=1);
float t1751;
if(t1750){
t1751 = t1749;
} else {
t1751 = 1;
}
bool t1752 = (t1751>=0);
float t1753;
if(t1752){
t1753 = t1751;
} else {
t1753 = 0;
}
float t1754 = (t1741*t1753);
t1712 = t1754;
} else {
t1709 = 0;
t1710 = 0;
t1711 = 0;
t1712 = 0;
}
float t1755 = (1-t1693);
float t1756 = (t1690*t1755);
float t1757 = (t1693+t1756);
float t1758 = (1-t1757);
float t1759 = (t1712*t1758);
float t1760 = (t1709*t1759);
float t1761 = (t1697+t1760);
float t1762 = (-float(1.5));
float t1763 = (t1762*t180);
float t1764 = (t1763*t1657);
float t1765 = pow(t1676,float(2.5));
float t1766 = (t1764/t1765);
float t1767 = (t1766*float(0.16));
float t1768 = (t1655+t1767);
float t1769 = (t1768*float(0.16));
float t1770 = (t1657+t1769);
float t1771 = (t1770*t1770);
float t1772 = (t1763*t1664);
float t1773 = (t1772/t1765);
float t1774 = (t1773*float(0.16));
float t1775 = (t1662+t1774);
float t1776 = (t1775*float(0.16));
float t1777 = (t1664+t1776);
float t1778 = (t1777*t1777);
float t1779 = (t1771+t1778);
float t1780 = (t1763*t1672);
float t1781 = (t1780/t1765);
float t1782 = (t1781*float(0.16));
float t1783 = (t1670+t1782);
float t1784 = (t1783*float(0.16));
float t1785 = (t1672+t1784);
float t1786 = (t1785*t1785);
float t1787 = (t1779+t1786);
float t1788 = sqrt(t1787);
float t1789 = (t1788*t1788);
bool t1790 = (t1789<1);
float t1791 = (t1657*t1657);
float t1792 = (t1664*t1664);
float t1793 = (t1791+t1792);
float t1794 = (t1672*t1672);
float t1795 = (t1793+t1794);
float t1796 = sqrt(t1795);
float t1797 = (t1796*t1796);
bool t1798 = (t1797>1);
bool t1799 = (t1790&&t1798);
float t1800;
float t1801;
float t1802;
float t1803;
if(t1799){
t1800 = 0;
t1801 = 0;
t1802 = 0;
t1803 = 1;
} else {
t1800 = 0;
t1801 = 0;
t1802 = 0;
t1803 = 0;
}
float t1804 = (1-t1757);
float t1805 = (t1712*t1804);
float t1806 = (t1757+t1805);
float t1807 = (1-t1806);
float t1808 = (t1803*t1807);
float t1809 = (t1800*t1808);
float t1810 = (t1761+t1809);
bool t1811 = (t1664>0);
bool t1812 = (t1777>0);
bool t1813 = (!t1812);
bool t1814 = (t1811&&t1813);
bool t1815 = (!t1811);
bool t1816 = (t1812&&t1815);
bool t1817 = (t1814||t1816);
bool t1818 = (t1789<196);
bool t1819 = (t1789>float(6.76));
bool t1820 = (t1818&&t1819);
bool t1821 = (t1817&&t1820);
float t1822;
float t1823;
float t1824;
float t1825;
if(t1821){
float t1826 = (t1777/t1775);
float t1827 = (-t1826);
float t1828 = (t1768*t1827);
float t1829 = (t1770+t1828);
float t1830 = atan(t1829,t1785);
float t1831 = (u1.u0/30);
float t1832 = (t1830+t1831);
float t1833 = (2*3.1415927);
float t1834 = (t1832+t1833);
float t1835 = mod(t1834,2);
float t1836 = (t1835*3.1415927);
float t1837 = (2*3.1415927);
float t1838 = (t1836/t1837);
float t1839 = (t1829*t1829);
float t1840 = (t1775*t1827);
float t1841 = (t1777+t1840);
float t1842 = (t1841*t1841);
float t1843 = (t1839+t1842);
float t1844 = (t1783*t1827);
float t1845 = (t1785+t1844);
float t1846 = (t1845*t1845);
float t1847 = (t1843+t1846);
float t1848 = sqrt(t1847);
float t1849 = (t1848*t1848);
float t1850 = sqrt(t1849);
float t1851 = (t1850-float(2.6));
float t1852 = (t1851/float(11.4));
vec4 t1853 = texture(s4,vec2(t1838,t1852));
t1822 = t1853.x;
t1823 = t1853.y;
t1824 = t1853.z;
float t1854;
if(t1821){
t1854 = 1;
} else {
t1854 = 0;
}
float t1855 = (t1853.x*t1853.x);
float t1856 = (t1853.y*t1853.y);
float t1857 = (t1855+t1856);
float t1858 = (t1853.z*t1853.z);
float t1859 = (t1857+t1858);
float t1860 = sqrt(t1859);
float t1861 = (t1860*t1860);
float t1862 = (t1861/float(3.0));
bool t1863 = (t1862<=1);
float t1864;
if(t1863){
t1864 = t1862;
} else {
t1864 = 1;
}
bool t1865 = (t1864>=0);
float t1866;
if(t1865){
t1866 = t1864;
} else {
t1866 = 0;
}
float t1867 = (t1854*t1866);
t1825 = t1867;
} else {
t1822 = 0;
t1823 = 0;
t1824 = 0;
t1825 = 0;
}
float t1868 = (1-t1806);
float t1869 = (t1803*t1868);
float t1870 = (t1806+t1869);
float t1871 = (1-t1870);
float t1872 = (t1825*t1871);
float t1873 = (t1822*t1872);
float t1874 = (t1810+t1873);
float t1875 = (-float(1.5));
float t1876 = (t1875*t180);
float t1877 = (t1876*t1770);
float t1878 = pow(t1789,float(2.5));
float t1879 = (t1877/t1878);
float t1880 = (t1879*float(0.16));
float t1881 = (t1768+t1880);
float t1882 = (t1881*float(0.16));
float t1883 = (t1770+t1882);
float t1884 = (t1883*t1883);
float t1885 = (t1876*t1777);
float t1886 = (t1885/t1878);
float t1887 = (t1886*float(0.16));
float t1888 = (t1775+t1887);
float t1889 = (t1888*float(0.16));
float t1890 = (t1777+t1889);
float t1891 = (t1890*t1890);
float t1892 = (t1884+t1891);
float t1893 = (t1876*t1785);
float t1894 = (t1893/t1878);
float t1895 = (t1894*float(0.16));
float t1896 = (t1783+t1895);
float t1897 = (t1896*float(0.16));
float t1898 = (t1785+t1897);
float t1899 = (t1898*t1898);
float t1900 = (t1892+t1899);
float t1901 = sqrt(t1900);
float t1902 = (t1901*t1901);
bool t1903 = (t1902<1);
float t1904 = (t1770*t1770);
float t1905 = (t1777*t1777);
float t1906 = (t1904+t1905);
float t1907 = (t1785*t1785);
float t1908 = (t1906+t1907);
float t1909 = sqrt(t1908);
float t1910 = (t1909*t1909);
bool t1911 = (t1910>1);
bool t1912 = (t1903&&t1911);
float t1913;
float t1914;
float t1915;
float t1916;
if(t1912){
t1913 = 0;
t1914 = 0;
t1915 = 0;
t1916 = 1;
} else {
t1913 = 0;
t1914 = 0;
t1915 = 0;
t1916 = 0;
}
float t1917 = (1-t1870);
float t1918 = (t1825*t1917);
float t1919 = (t1870+t1918);
float t1920 = (1-t1919);
float t1921 = (t1916*t1920);
float t1922 = (t1913*t1921);
float t1923 = (t1874+t1922);
bool t1924 = (t1777>0);
bool t1925 = (t1890>0);
bool t1926 = (!t1925);
bool t1927 = (t1924&&t1926);
bool t1928 = (!t1924);
bool t1929 = (t1925&&t1928);
bool t1930 = (t1927||t1929);
bool t1931 = (t1902<196);
bool t1932 = (t1902>float(6.76));
bool t1933 = (t1931&&t1932);
bool t1934 = (t1930&&t1933);
float t1935;
float t1936;
float t1937;
float t1938;
if(t1934){
float t1939 = (t1890/t1888);
float t1940 = (-t1939);
float t1941 = (t1881*t1940);
float t1942 = (t1883+t1941);
float t1943 = atan(t1942,t1898);
float t1944 = (u1.u0/30);
float t1945 = (t1943+t1944);
float t1946 = (2*3.1415927);
float t1947 = (t1945+t1946);
float t1948 = mod(t1947,2);
float t1949 = (t1948*3.1415927);
float t1950 = (2*3.1415927);
float t1951 = (t1949/t1950);
float t1952 = (t1942*t1942);
float t1953 = (t1888*t1940);
float t1954 = (t1890+t1953);
float t1955 = (t1954*t1954);
float t1956 = (t1952+t1955);
float t1957 = (t1896*t1940);
float t1958 = (t1898+t1957);
float t1959 = (t1958*t1958);
float t1960 = (t1956+t1959);
float t1961 = sqrt(t1960);
float t1962 = (t1961*t1961);
float t1963 = sqrt(t1962);
float t1964 = (t1963-float(2.6));
float t1965 = (t1964/float(11.4));
vec4 t1966 = texture(s4,vec2(t1951,t1965));
t1935 = t1966.x;
t1936 = t1966.y;
t1937 = t1966.z;
float t1967;
if(t1934){
t1967 = 1;
} else {
t1967 = 0;
}
float t1968 = (t1966.x*t1966.x);
float t1969 = (t1966.y*t1966.y);
float t1970 = (t1968+t1969);
float t1971 = (t1966.z*t1966.z);
float t1972 = (t1970+t1971);
float t1973 = sqrt(t1972);
float t1974 = (t1973*t1973);
float t1975 = (t1974/float(3.0));
bool t1976 = (t1975<=1);
float t1977;
if(t1976){
t1977 = t1975;
} else {
t1977 = 1;
}
bool t1978 = (t1977>=0);
float t1979;
if(t1978){
t1979 = t1977;
} else {
t1979 = 0;
}
float t1980 = (t1967*t1979);
t1938 = t1980;
} else {
t1935 = 0;
t1936 = 0;
t1937 = 0;
t1938 = 0;
}
float t1981 = (1-t1919);
float t1982 = (t1916*t1981);
float t1983 = (t1919+t1982);
float t1984 = (1-t1983);
float t1985 = (t1938*t1984);
float t1986 = (t1935*t1985);
float t1987 = (t1923+t1986);
float t1988 = (-float(1.5));
float t1989 = (t1988*t180);
float t1990 = (t1989*t1883);
float t1991 = pow(t1902,float(2.5));
float t1992 = (t1990/t1991);
float t1993 = (t1992*float(0.16));
float t1994 = (t1881+t1993);
float t1995 = (t1994*float(0.16));
float t1996 = (t1883+t1995);
float t1997 = (t1996*t1996);
float t1998 = (t1989*t1890);
float t1999 = (t1998/t1991);
float t2000 = (t1999*float(0.16));
float t2001 = (t1888+t2000);
float t2002 = (t2001*float(0.16));
float t2003 = (t1890+t2002);
float t2004 = (t2003*t2003);
float t2005 = (t1997+t2004);
float t2006 = (t1989*t1898);
float t2007 = (t2006/t1991);
float t2008 = (t2007*float(0.16));
float t2009 = (t1896+t2008);
float t2010 = (t2009*float(0.16));
float t2011 = (t1898+t2010);
float t2012 = (t2011*t2011);
float t2013 = (t2005+t2012);
float t2014 = sqrt(t2013);
float t2015 = (t2014*t2014);
bool t2016 = (t2015<1);
float t2017 = (t1883*t1883);
float t2018 = (t1890*t1890);
float t2019 = (t2017+t2018);
float t2020 = (t1898*t1898);
float t2021 = (t2019+t2020);
float t2022 = sqrt(t2021);
float t2023 = (t2022*t2022);
bool t2024 = (t2023>1);
bool t2025 = (t2016&&t2024);
float t2026;
float t2027;
float t2028;
float t2029;
if(t2025){
t2026 = 0;
t2027 = 0;
t2028 = 0;
t2029 = 1;
} else {
t2026 = 0;
t2027 = 0;
t2028 = 0;
t2029 = 0;
}
float t2030 = (1-t1983);
float t2031 = (t1938*t2030);
float t2032 = (t1983+t2031);
float t2033 = (1-t2032);
float t2034 = (t2029*t2033);
float t2035 = (t2026*t2034);
float t2036 = (t1987+t2035);
bool t2037 = (t1890>0);
bool t2038 = (t2003>0);
bool t2039 = (!t2038);
bool t2040 = (t2037&&t2039);
bool t2041 = (!t2037);
bool t2042 = (t2038&&t2041);
bool t2043 = (t2040||t2042);
bool t2044 = (t2015<196);
bool t2045 = (t2015>float(6.76));
bool t2046 = (t2044&&t2045);
bool t2047 = (t2043&&t2046);
float t2048;
float t2049;
float t2050;
float t2051;
if(t2047){
float t2052 = (t2003/t2001);
float t2053 = (-t2052);
float t2054 = (t1994*t2053);
float t2055 = (t1996+t2054);
float t2056 = atan(t2055,t2011);
float t2057 = (u1.u0/30);
float t2058 = (t2056+t2057);
float t2059 = (2*3.1415927);
float t2060 = (t2058+t2059);
float t2061 = mod(t2060,2);
float t2062 = (t2061*3.1415927);
float t2063 = (2*3.1415927);
float t2064 = (t2062/t2063);
float t2065 = (t2055*t2055);
float t2066 = (t2001*t2053);
float t2067 = (t2003+t2066);
float t2068 = (t2067*t2067);
float t2069 = (t2065+t2068);
float t2070 = (t2009*t2053);
float t2071 = (t2011+t2070);
float t2072 = (t2071*t2071);
float t2073 = (t2069+t2072);
float t2074 = sqrt(t2073);
float t2075 = (t2074*t2074);
float t2076 = sqrt(t2075);
float t2077 = (t2076-float(2.6));
float t2078 = (t2077/float(11.4));
vec4 t2079 = texture(s4,vec2(t2064,t2078));
t2048 = t2079.x;
t2049 = t2079.y;
t2050 = t2079.z;
float t2080;
if(t2047){
t2080 = 1;
} else {
t2080 = 0;
}
float t2081 = (t2079.x*t2079.x);
float t2082 = (t2079.y*t2079.y);
float t2083 = (t2081+t2082);
float t2084 = (t2079.z*t2079.z);
float t2085 = (t2083+t2084);
float t2086 = sqrt(t2085);
float t2087 = (t2086*t2086);
float t2088 = (t2087/float(3.0));
bool t2089 = (t2088<=1);
float t2090;
if(t2089){
t2090 = t2088;
} else {
t2090 = 1;
}
bool t2091 = (t2090>=0);
float t2092;
if(t2091){
t2092 = t2090;
} else {
t2092 = 0;
}
float t2093 = (t2080*t2092);
t2051 = t2093;
} else {
t2048 = 0;
t2049 = 0;
t2050 = 0;
t2051 = 0;
}
float t2094 = (1-t2032);
float t2095 = (t2029*t2094);
float t2096 = (t2032+t2095);
float t2097 = (1-t2096);
float t2098 = (t2051*t2097);
float t2099 = (t2048*t2098);
float t2100 = (t2036+t2099);
float t2101 = (-float(1.5));
float t2102 = (t2101*t180);
float t2103 = (t2102*t1996);
float t2104 = pow(t2015,float(2.5));
float t2105 = (t2103/t2104);
float t2106 = (t2105*float(0.16));
float t2107 = (t1994+t2106);
float t2108 = (t2107*float(0.16));
float t2109 = (t1996+t2108);
float t2110 = (t2109*t2109);
float t2111 = (t2102*t2003);
float t2112 = (t2111/t2104);
float t2113 = (t2112*float(0.16));
float t2114 = (t2001+t2113);
float t2115 = (t2114*float(0.16));
float t2116 = (t2003+t2115);
float t2117 = (t2116*t2116);
float t2118 = (t2110+t2117);
float t2119 = (t2102*t2011);
float t2120 = (t2119/t2104);
float t2121 = (t2120*float(0.16));
float t2122 = (t2009+t2121);
float t2123 = (t2122*float(0.16));
float t2124 = (t2011+t2123);
float t2125 = (t2124*t2124);
float t2126 = (t2118+t2125);
float t2127 = sqrt(t2126);
float t2128 = (t2127*t2127);
bool t2129 = (t2128<1);
float t2130 = (t1996*t1996);
float t2131 = (t2003*t2003);
float t2132 = (t2130+t2131);
float t2133 = (t2011*t2011);
float t2134 = (t2132+t2133);
float t2135 = sqrt(t2134);
float t2136 = (t2135*t2135);
bool t2137 = (t2136>1);
bool t2138 = (t2129&&t2137);
float t2139;
float t2140;
float t2141;
float t2142;
if(t2138){
t2139 = 0;
t2140 = 0;
t2141 = 0;
t2142 = 1;
} else {
t2139 = 0;
t2140 = 0;
t2141 = 0;
t2142 = 0;
}
float t2143 = (1-t2096);
float t2144 = (t2051*t2143);
float t2145 = (t2096+t2144);
float t2146 = (1-t2145);
float t2147 = (t2142*t2146);
float t2148 = (t2139*t2147);
float t2149 = (t2100+t2148);
bool t2150 = (t2003>0);
bool t2151 = (t2116>0);
bool t2152 = (!t2151);
bool t2153 = (t2150&&t2152);
bool t2154 = (!t2150);
bool t2155 = (t2151&&t2154);
bool t2156 = (t2153||t2155);
bool t2157 = (t2128<196);
bool t2158 = (t2128>float(6.76));
bool t2159 = (t2157&&t2158);
bool t2160 = (t2156&&t2159);
float t2161;
float t2162;
float t2163;
float t2164;
if(t2160){
float t2165 = (t2116/t2114);
float t2166 = (-t2165);
float t2167 = (t2107*t2166);
float t2168 = (t2109+t2167);
float t2169 = atan(t2168,t2124);
float t2170 = (u1.u0/30);
float t2171 = (t2169+t2170);
float t2172 = (2*3.1415927);
float t2173 = (t2171+t2172);
float t2174 = mod(t2173,2);
float t2175 = (t2174*3.1415927);
float t2176 = (2*3.1415927);
float t2177 = (t2175/t2176);
float t2178 = (t2168*t2168);
float t2179 = (t2114*t2166);
float t2180 = (t2116+t2179);
float t2181 = (t2180*t2180);
float t2182 = (t2178+t2181);
float t2183 = (t2122*t2166);
float t2184 = (t2124+t2183);
float t2185 = (t2184*t2184);
float t2186 = (t2182+t2185);
float t2187 = sqrt(t2186);
float t2188 = (t2187*t2187);
float t2189 = sqrt(t2188);
float t2190 = (t2189-float(2.6));
float t2191 = (t2190/float(11.4));
vec4 t2192 = texture(s4,vec2(t2177,t2191));
t2161 = t2192.x;
t2162 = t2192.y;
t2163 = t2192.z;
float t2193;
if(t2160){
t2193 = 1;
} else {
t2193 = 0;
}
float t2194 = (t2192.x*t2192.x);
float t2195 = (t2192.y*t2192.y);
float t2196 = (t2194+t2195);
float t2197 = (t2192.z*t2192.z);
float t2198 = (t2196+t2197);
float t2199 = sqrt(t2198);
float t2200 = (t2199*t2199);
float t2201 = (t2200/float(3.0));
bool t2202 = (t2201<=1);
float t2203;
if(t2202){
t2203 = t2201;
} else {
t2203 = 1;
}
bool t2204 = (t2203>=0);
float t2205;
if(t2204){
t2205 = t2203;
} else {
t2205 = 0;
}
float t2206 = (t2193*t2205);
t2164 = t2206;
} else {
t2161 = 0;
t2162 = 0;
t2163 = 0;
t2164 = 0;
}
float t2207 = (1-t2145);
float t2208 = (t2142*t2207);
float t2209 = (t2145+t2208);
float t2210 = (1-t2209);
float t2211 = (t2164*t2210);
float t2212 = (t2161*t2211);
float t2213 = (t2149+t2212);
float t2214 = (-float(1.5));
float t2215 = (t2214*t180);
float t2216 = (t2215*t2109);
float t2217 = pow(t2128,float(2.5));
float t2218 = (t2216/t2217);
float t2219 = (t2218*float(0.16));
float t2220 = (t2107+t2219);
float t2221 = (t2220*float(0.16));
float t2222 = (t2109+t2221);
float t2223 = (t2222*t2222);
float t2224 = (t2215*t2116);
float t2225 = (t2224/t2217);
float t2226 = (t2225*float(0.16));
float t2227 = (t2114+t2226);
float t2228 = (t2227*float(0.16));
float t2229 = (t2116+t2228);
float t2230 = (t2229*t2229);
float t2231 = (t2223+t2230);
float t2232 = (t2215*t2124);
float t2233 = (t2232/t2217);
float t2234 = (t2233*float(0.16));
float t2235 = (t2122+t2234);
float t2236 = (t2235*float(0.16));
float t2237 = (t2124+t2236);
float t2238 = (t2237*t2237);
float t2239 = (t2231+t2238);
float t2240 = sqrt(t2239);
float t2241 = (t2240*t2240);
bool t2242 = (t2241<1);
float t2243 = (t2109*t2109);
float t2244 = (t2116*t2116);
float t2245 = (t2243+t2244);
float t2246 = (t2124*t2124);
float t2247 = (t2245+t2246);
float t2248 = sqrt(t2247);
float t2249 = (t2248*t2248);
bool t2250 = (t2249>1);
bool t2251 = (t2242&&t2250);
float t2252;
float t2253;
float t2254;
float t2255;
if(t2251){
t2252 = 0;
t2253 = 0;
t2254 = 0;
t2255 = 1;
} else {
t2252 = 0;
t2253 = 0;
t2254 = 0;
t2255 = 0;
}
float t2256 = (1-t2209);
float t2257 = (t2164*t2256);
float t2258 = (t2209+t2257);
float t2259 = (1-t2258);
float t2260 = (t2255*t2259);
float t2261 = (t2252*t2260);
float t2262 = (t2213+t2261);
bool t2263 = (t2116>0);
bool t2264 = (t2229>0);
bool t2265 = (!t2264);
bool t2266 = (t2263&&t2265);
bool t2267 = (!t2263);
bool t2268 = (t2264&&t2267);
bool t2269 = (t2266||t2268);
bool t2270 = (t2241<196);
bool t2271 = (t2241>float(6.76));
bool t2272 = (t2270&&t2271);
bool t2273 = (t2269&&t2272);
float t2274;
float t2275;
float t2276;
float t2277;
if(t2273){
float t2278 = (t2229/t2227);
float t2279 = (-t2278);
float t2280 = (t2220*t2279);
float t2281 = (t2222+t2280);
float t2282 = atan(t2281,t2237);
float t2283 = (u1.u0/30);
float t2284 = (t2282+t2283);
float t2285 = (2*3.1415927);
float t2286 = (t2284+t2285);
float t2287 = mod(t2286,2);
float t2288 = (t2287*3.1415927);
float t2289 = (2*3.1415927);
float t2290 = (t2288/t2289);
float t2291 = (t2281*t2281);
float t2292 = (t2227*t2279);
float t2293 = (t2229+t2292);
float t2294 = (t2293*t2293);
float t2295 = (t2291+t2294);
float t2296 = (t2235*t2279);
float t2297 = (t2237+t2296);
float t2298 = (t2297*t2297);
float t2299 = (t2295+t2298);
float t2300 = sqrt(t2299);
float t2301 = (t2300*t2300);
float t2302 = sqrt(t2301);
float t2303 = (t2302-float(2.6));
float t2304 = (t2303/float(11.4));
vec4 t2305 = texture(s4,vec2(t2290,t2304));
t2274 = t2305.x;
t2275 = t2305.y;
t2276 = t2305.z;
float t2306;
if(t2273){
t2306 = 1;
} else {
t2306 = 0;
}
float t2307 = (t2305.x*t2305.x);
float t2308 = (t2305.y*t2305.y);
float t2309 = (t2307+t2308);
float t2310 = (t2305.z*t2305.z);
float t2311 = (t2309+t2310);
float t2312 = sqrt(t2311);
float t2313 = (t2312*t2312);
float t2314 = (t2313/float(3.0));
bool t2315 = (t2314<=1);
float t2316;
if(t2315){
t2316 = t2314;
} else {
t2316 = 1;
}
bool t2317 = (t2316>=0);
float t2318;
if(t2317){
t2318 = t2316;
} else {
t2318 = 0;
}
float t2319 = (t2306*t2318);
t2277 = t2319;
} else {
t2274 = 0;
t2275 = 0;
t2276 = 0;
t2277 = 0;
}
float t2320 = (1-t2258);
float t2321 = (t2255*t2320);
float t2322 = (t2258+t2321);
float t2323 = (1-t2322);
float t2324 = (t2277*t2323);
float t2325 = (t2274*t2324);
float t2326 = (t2262+t2325);
float t2327 = (-float(1.5));
float t2328 = (t2327*t180);
float t2329 = (t2328*t2222);
float t2330 = pow(t2241,float(2.5));
float t2331 = (t2329/t2330);
float t2332 = (t2331*float(0.16));
float t2333 = (t2220+t2332);
float t2334 = (t2333*float(0.16));
float t2335 = (t2222+t2334);
float t2336 = (t2335*t2335);
float t2337 = (t2328*t2229);
float t2338 = (t2337/t2330);
float t2339 = (t2338*float(0.16));
float t2340 = (t2227+t2339);
float t2341 = (t2340*float(0.16));
float t2342 = (t2229+t2341);
float t2343 = (t2342*t2342);
float t2344 = (t2336+t2343);
float t2345 = (t2328*t2237);
float t2346 = (t2345/t2330);
float t2347 = (t2346*float(0.16));
float t2348 = (t2235+t2347);
float t2349 = (t2348*float(0.16));
float t2350 = (t2237+t2349);
float t2351 = (t2350*t2350);
float t2352 = (t2344+t2351);
float t2353 = sqrt(t2352);
float t2354 = (t2353*t2353);
bool t2355 = (t2354<1);
float t2356 = (t2222*t2222);
float t2357 = (t2229*t2229);
float t2358 = (t2356+t2357);
float t2359 = (t2237*t2237);
float t2360 = (t2358+t2359);
float t2361 = sqrt(t2360);
float t2362 = (t2361*t2361);
bool t2363 = (t2362>1);
bool t2364 = (t2355&&t2363);
float t2365;
float t2366;
float t2367;
float t2368;
if(t2364){
t2365 = 0;
t2366 = 0;
t2367 = 0;
t2368 = 1;
} else {
t2365 = 0;
t2366 = 0;
t2367 = 0;
t2368 = 0;
}
float t2369 = (1-t2322);
float t2370 = (t2277*t2369);
float t2371 = (t2322+t2370);
float t2372 = (1-t2371);
float t2373 = (t2368*t2372);
float t2374 = (t2365*t2373);
float t2375 = (t2326+t2374);
bool t2376 = (t2229>0);
bool t2377 = (t2342>0);
bool t2378 = (!t2377);
bool t2379 = (t2376&&t2378);
bool t2380 = (!t2376);
bool t2381 = (t2377&&t2380);
bool t2382 = (t2379||t2381);
bool t2383 = (t2354<196);
bool t2384 = (t2354>float(6.76));
bool t2385 = (t2383&&t2384);
bool t2386 = (t2382&&t2385);
float t2387;
float t2388;
float t2389;
float t2390;
if(t2386){
float t2391 = (t2342/t2340);
float t2392 = (-t2391);
float t2393 = (t2333*t2392);
float t2394 = (t2335+t2393);
float t2395 = atan(t2394,t2350);
float t2396 = (u1.u0/30);
float t2397 = (t2395+t2396);
float t2398 = (2*3.1415927);
float t2399 = (t2397+t2398);
float t2400 = mod(t2399,2);
float t2401 = (t2400*3.1415927);
float t2402 = (2*3.1415927);
float t2403 = (t2401/t2402);
float t2404 = (t2394*t2394);
float t2405 = (t2340*t2392);
float t2406 = (t2342+t2405);
float t2407 = (t2406*t2406);
float t2408 = (t2404+t2407);
float t2409 = (t2348*t2392);
float t2410 = (t2350+t2409);
float t2411 = (t2410*t2410);
float t2412 = (t2408+t2411);
float t2413 = sqrt(t2412);
float t2414 = (t2413*t2413);
float t2415 = sqrt(t2414);
float t2416 = (t2415-float(2.6));
float t2417 = (t2416/float(11.4));
vec4 t2418 = texture(s4,vec2(t2403,t2417));
t2387 = t2418.x;
t2388 = t2418.y;
t2389 = t2418.z;
float t2419;
if(t2386){
t2419 = 1;
} else {
t2419 = 0;
}
float t2420 = (t2418.x*t2418.x);
float t2421 = (t2418.y*t2418.y);
float t2422 = (t2420+t2421);
float t2423 = (t2418.z*t2418.z);
float t2424 = (t2422+t2423);
float t2425 = sqrt(t2424);
float t2426 = (t2425*t2425);
float t2427 = (t2426/float(3.0));
bool t2428 = (t2427<=1);
float t2429;
if(t2428){
t2429 = t2427;
} else {
t2429 = 1;
}
bool t2430 = (t2429>=0);
float t2431;
if(t2430){
t2431 = t2429;
} else {
t2431 = 0;
}
float t2432 = (t2419*t2431);
t2390 = t2432;
} else {
t2387 = 0;
t2388 = 0;
t2389 = 0;
t2390 = 0;
}
float t2433 = (1-t2371);
float t2434 = (t2368*t2433);
float t2435 = (t2371+t2434);
float t2436 = (1-t2435);
float t2437 = (t2390*t2436);
float t2438 = (t2387*t2437);
float t2439 = (t2375+t2438);
float t2440 = (-float(1.5));
float t2441 = (t2440*t180);
float t2442 = (t2441*t2335);
float t2443 = pow(t2354,float(2.5));
float t2444 = (t2442/t2443);
float t2445 = (t2444*float(0.16));
float t2446 = (t2333+t2445);
float t2447 = (t2446*float(0.16));
float t2448 = (t2335+t2447);
float t2449 = (t2448*t2448);
float t2450 = (t2441*t2342);
float t2451 = (t2450/t2443);
float t2452 = (t2451*float(0.16));
float t2453 = (t2340+t2452);
float t2454 = (t2453*float(0.16));
float t2455 = (t2342+t2454);
float t2456 = (t2455*t2455);
float t2457 = (t2449+t2456);
float t2458 = (t2441*t2350);
float t2459 = (t2458/t2443);
float t2460 = (t2459*float(0.16));
float t2461 = (t2348+t2460);
float t2462 = (t2461*float(0.16));
float t2463 = (t2350+t2462);
float t2464 = (t2463*t2463);
float t2465 = (t2457+t2464);
float t2466 = sqrt(t2465);
float t2467 = (t2466*t2466);
bool t2468 = (t2467<1);
float t2469 = (t2335*t2335);
float t2470 = (t2342*t2342);
float t2471 = (t2469+t2470);
float t2472 = (t2350*t2350);
float t2473 = (t2471+t2472);
float t2474 = sqrt(t2473);
float t2475 = (t2474*t2474);
bool t2476 = (t2475>1);
bool t2477 = (t2468&&t2476);
float t2478;
float t2479;
float t2480;
float t2481;
if(t2477){
t2478 = 0;
t2479 = 0;
t2480 = 0;
t2481 = 1;
} else {
t2478 = 0;
t2479 = 0;
t2480 = 0;
t2481 = 0;
}
float t2482 = (1-t2435);
float t2483 = (t2390*t2482);
float t2484 = (t2435+t2483);
float t2485 = (1-t2484);
float t2486 = (t2481*t2485);
float t2487 = (t2478*t2486);
float t2488 = (t2439+t2487);
bool t2489 = (t2342>0);
bool t2490 = (t2455>0);
bool t2491 = (!t2490);
bool t2492 = (t2489&&t2491);
bool t2493 = (!t2489);
bool t2494 = (t2490&&t2493);
bool t2495 = (t2492||t2494);
bool t2496 = (t2467<196);
bool t2497 = (t2467>float(6.76));
bool t2498 = (t2496&&t2497);
bool t2499 = (t2495&&t2498);
float t2500;
float t2501;
float t2502;
float t2503;
if(t2499){
float t2504 = (t2455/t2453);
float t2505 = (-t2504);
float t2506 = (t2446*t2505);
float t2507 = (t2448+t2506);
float t2508 = atan(t2507,t2463);
float t2509 = (u1.u0/30);
float t2510 = (t2508+t2509);
float t2511 = (2*3.1415927);
float t2512 = (t2510+t2511);
float t2513 = mod(t2512,2);
float t2514 = (t2513*3.1415927);
float t2515 = (2*3.1415927);
float t2516 = (t2514/t2515);
float t2517 = (t2507*t2507);
float t2518 = (t2453*t2505);
float t2519 = (t2455+t2518);
float t2520 = (t2519*t2519);
float t2521 = (t2517+t2520);
float t2522 = (t2461*t2505);
float t2523 = (t2463+t2522);
float t2524 = (t2523*t2523);
float t2525 = (t2521+t2524);
float t2526 = sqrt(t2525);
float t2527 = (t2526*t2526);
float t2528 = sqrt(t2527);
float t2529 = (t2528-float(2.6));
float t2530 = (t2529/float(11.4));
vec4 t2531 = texture(s4,vec2(t2516,t2530));
t2500 = t2531.x;
t2501 = t2531.y;
t2502 = t2531.z;
float t2532;
if(t2499){
t2532 = 1;
} else {
t2532 = 0;
}
float t2533 = (t2531.x*t2531.x);
float t2534 = (t2531.y*t2531.y);
float t2535 = (t2533+t2534);
float t2536 = (t2531.z*t2531.z);
float t2537 = (t2535+t2536);
float t2538 = sqrt(t2537);
float t2539 = (t2538*t2538);
float t2540 = (t2539/float(3.0));
bool t2541 = (t2540<=1);
float t2542;
if(t2541){
t2542 = t2540;
} else {
t2542 = 1;
}
bool t2543 = (t2542>=0);
float t2544;
if(t2543){
t2544 = t2542;
} else {
t2544 = 0;
}
float t2545 = (t2532*t2544);
t2503 = t2545;
} else {
t2500 = 0;
t2501 = 0;
t2502 = 0;
t2503 = 0;
}
float t2546 = (1-t2484);
float t2547 = (t2481*t2546);
float t2548 = (t2484+t2547);
float t2549 = (1-t2548);
float t2550 = (t2503*t2549);
float t2551 = (t2500*t2550);
float t2552 = (t2488+t2551);
float t2553 = (-float(1.5));
float t2554 = (t2553*t180);
float t2555 = (t2554*t2448);
float t2556 = pow(t2467,float(2.5));
float t2557 = (t2555/t2556);
float t2558 = (t2557*float(0.16));
float t2559 = (t2446+t2558);
float t2560 = (t2559*float(0.16));
float t2561 = (t2448+t2560);
float t2562 = (t2561*t2561);
float t2563 = (t2554*t2455);
float t2564 = (t2563/t2556);
float t2565 = (t2564*float(0.16));
float t2566 = (t2453+t2565);
float t2567 = (t2566*float(0.16));
float t2568 = (t2455+t2567);
float t2569 = (t2568*t2568);
float t2570 = (t2562+t2569);
float t2571 = (t2554*t2463);
float t2572 = (t2571/t2556);
float t2573 = (t2572*float(0.16));
float t2574 = (t2461+t2573);
float t2575 = (t2574*float(0.16));
float t2576 = (t2463+t2575);
float t2577 = (t2576*t2576);
float t2578 = (t2570+t2577);
float t2579 = sqrt(t2578);
float t2580 = (t2579*t2579);
bool t2581 = (t2580<1);
float t2582 = (t2448*t2448);
float t2583 = (t2455*t2455);
float t2584 = (t2582+t2583);
float t2585 = (t2463*t2463);
float t2586 = (t2584+t2585);
float t2587 = sqrt(t2586);
float t2588 = (t2587*t2587);
bool t2589 = (t2588>1);
bool t2590 = (t2581&&t2589);
float t2591;
float t2592;
float t2593;
float t2594;
if(t2590){
t2591 = 0;
t2592 = 0;
t2593 = 0;
t2594 = 1;
} else {
t2591 = 0;
t2592 = 0;
t2593 = 0;
t2594 = 0;
}
float t2595 = (1-t2548);
float t2596 = (t2503*t2595);
float t2597 = (t2548+t2596);
float t2598 = (1-t2597);
float t2599 = (t2594*t2598);
float t2600 = (t2591*t2599);
float t2601 = (t2552+t2600);
bool t2602 = (t2455>0);
bool t2603 = (t2568>0);
bool t2604 = (!t2603);
bool t2605 = (t2602&&t2604);
bool t2606 = (!t2602);
bool t2607 = (t2603&&t2606);
bool t2608 = (t2605||t2607);
bool t2609 = (t2580<196);
bool t2610 = (t2580>float(6.76));
bool t2611 = (t2609&&t2610);
bool t2612 = (t2608&&t2611);
float t2613;
float t2614;
float t2615;
float t2616;
if(t2612){
float t2617 = (t2568/t2566);
float t2618 = (-t2617);
float t2619 = (t2559*t2618);
float t2620 = (t2561+t2619);
float t2621 = atan(t2620,t2576);
float t2622 = (u1.u0/30);
float t2623 = (t2621+t2622);
float t2624 = (2*3.1415927);
float t2625 = (t2623+t2624);
float t2626 = mod(t2625,2);
float t2627 = (t2626*3.1415927);
float t2628 = (2*3.1415927);
float t2629 = (t2627/t2628);
float t2630 = (t2620*t2620);
float t2631 = (t2566*t2618);
float t2632 = (t2568+t2631);
float t2633 = (t2632*t2632);
float t2634 = (t2630+t2633);
float t2635 = (t2574*t2618);
float t2636 = (t2576+t2635);
float t2637 = (t2636*t2636);
float t2638 = (t2634+t2637);
float t2639 = sqrt(t2638);
float t2640 = (t2639*t2639);
float t2641 = sqrt(t2640);
float t2642 = (t2641-float(2.6));
float t2643 = (t2642/float(11.4));
vec4 t2644 = texture(s4,vec2(t2629,t2643));
t2613 = t2644.x;
t2614 = t2644.y;
t2615 = t2644.z;
float t2645;
if(t2612){
t2645 = 1;
} else {
t2645 = 0;
}
float t2646 = (t2644.x*t2644.x);
float t2647 = (t2644.y*t2644.y);
float t2648 = (t2646+t2647);
float t2649 = (t2644.z*t2644.z);
float t2650 = (t2648+t2649);
float t2651 = sqrt(t2650);
float t2652 = (t2651*t2651);
float t2653 = (t2652/float(3.0));
bool t2654 = (t2653<=1);
float t2655;
if(t2654){
t2655 = t2653;
} else {
t2655 = 1;
}
bool t2656 = (t2655>=0);
float t2657;
if(t2656){
t2657 = t2655;
} else {
t2657 = 0;
}
float t2658 = (t2645*t2657);
t2616 = t2658;
} else {
t2613 = 0;
t2614 = 0;
t2615 = 0;
t2616 = 0;
}
float t2659 = (1-t2597);
float t2660 = (t2594*t2659);
float t2661 = (t2597+t2660);
float t2662 = (1-t2661);
float t2663 = (t2616*t2662);
float t2664 = (t2613*t2663);
float t2665 = (t2601+t2664);
float t2666 = (-float(1.5));
float t2667 = (t2666*t180);
float t2668 = (t2667*t2561);
float t2669 = pow(t2580,float(2.5));
float t2670 = (t2668/t2669);
float t2671 = (t2670*float(0.16));
float t2672 = (t2559+t2671);
float t2673 = (t2672*float(0.16));
float t2674 = (t2561+t2673);
float t2675 = (t2674*t2674);
float t2676 = (t2667*t2568);
float t2677 = (t2676/t2669);
float t2678 = (t2677*float(0.16));
float t2679 = (t2566+t2678);
float t2680 = (t2679*float(0.16));
float t2681 = (t2568+t2680);
float t2682 = (t2681*t2681);
float t2683 = (t2675+t2682);
float t2684 = (t2667*t2576);
float t2685 = (t2684/t2669);
float t2686 = (t2685*float(0.16));
float t2687 = (t2574+t2686);
float t2688 = (t2687*float(0.16));
float t2689 = (t2576+t2688);
float t2690 = (t2689*t2689);
float t2691 = (t2683+t2690);
float t2692 = sqrt(t2691);
float t2693 = (t2692*t2692);
bool t2694 = (t2693<1);
float t2695 = (t2561*t2561);
float t2696 = (t2568*t2568);
float t2697 = (t2695+t2696);
float t2698 = (t2576*t2576);
float t2699 = (t2697+t2698);
float t2700 = sqrt(t2699);
float t2701 = (t2700*t2700);
bool t2702 = (t2701>1);
bool t2703 = (t2694&&t2702);
float t2704;
float t2705;
float t2706;
float t2707;
if(t2703){
t2704 = 0;
t2705 = 0;
t2706 = 0;
t2707 = 1;
} else {
t2704 = 0;
t2705 = 0;
t2706 = 0;
t2707 = 0;
}
float t2708 = (1-t2661);
float t2709 = (t2616*t2708);
float t2710 = (t2661+t2709);
float t2711 = (1-t2710);
float t2712 = (t2707*t2711);
float t2713 = (t2704*t2712);
float t2714 = (t2665+t2713);
bool t2715 = (t2568>0);
bool t2716 = (t2681>0);
bool t2717 = (!t2716);
bool t2718 = (t2715&&t2717);
bool t2719 = (!t2715);
bool t2720 = (t2716&&t2719);
bool t2721 = (t2718||t2720);
bool t2722 = (t2693<196);
bool t2723 = (t2693>float(6.76));
bool t2724 = (t2722&&t2723);
bool t2725 = (t2721&&t2724);
float t2726;
float t2727;
float t2728;
float t2729;
if(t2725){
float t2730 = (t2681/t2679);
float t2731 = (-t2730);
float t2732 = (t2672*t2731);
float t2733 = (t2674+t2732);
float t2734 = atan(t2733,t2689);
float t2735 = (u1.u0/30);
float t2736 = (t2734+t2735);
float t2737 = (2*3.1415927);
float t2738 = (t2736+t2737);
float t2739 = mod(t2738,2);
float t2740 = (t2739*3.1415927);
float t2741 = (2*3.1415927);
float t2742 = (t2740/t2741);
float t2743 = (t2733*t2733);
float t2744 = (t2679*t2731);
float t2745 = (t2681+t2744);
float t2746 = (t2745*t2745);
float t2747 = (t2743+t2746);
float t2748 = (t2687*t2731);
float t2749 = (t2689+t2748);
float t2750 = (t2749*t2749);
float t2751 = (t2747+t2750);
float t2752 = sqrt(t2751);
float t2753 = (t2752*t2752);
float t2754 = sqrt(t2753);
float t2755 = (t2754-float(2.6));
float t2756 = (t2755/float(11.4));
vec4 t2757 = texture(s4,vec2(t2742,t2756));
t2726 = t2757.x;
t2727 = t2757.y;
t2728 = t2757.z;
float t2758;
if(t2725){
t2758 = 1;
} else {
t2758 = 0;
}
float t2759 = (t2757.x*t2757.x);
float t2760 = (t2757.y*t2757.y);
float t2761 = (t2759+t2760);
float t2762 = (t2757.z*t2757.z);
float t2763 = (t2761+t2762);
float t2764 = sqrt(t2763);
float t2765 = (t2764*t2764);
float t2766 = (t2765/float(3.0));
bool t2767 = (t2766<=1);
float t2768;
if(t2767){
t2768 = t2766;
} else {
t2768 = 1;
}
bool t2769 = (t2768>=0);
float t2770;
if(t2769){
t2770 = t2768;
} else {
t2770 = 0;
}
float t2771 = (t2758*t2770);
t2729 = t2771;
} else {
t2726 = 0;
t2727 = 0;
t2728 = 0;
t2729 = 0;
}
float t2772 = (1-t2710);
float t2773 = (t2707*t2772);
float t2774 = (t2710+t2773);
float t2775 = (1-t2774);
float t2776 = (t2729*t2775);
float t2777 = (t2726*t2776);
float t2778 = (t2714+t2777);
float t2779 = (-float(1.5));
float t2780 = (t2779*t180);
float t2781 = (t2780*t2674);
float t2782 = pow(t2693,float(2.5));
float t2783 = (t2781/t2782);
float t2784 = (t2783*float(0.16));
float t2785 = (t2672+t2784);
float t2786 = (t2785*float(0.16));
float t2787 = (t2674+t2786);
float t2788 = (t2787*t2787);
float t2789 = (t2780*t2681);
float t2790 = (t2789/t2782);
float t2791 = (t2790*float(0.16));
float t2792 = (t2679+t2791);
float t2793 = (t2792*float(0.16));
float t2794 = (t2681+t2793);
float t2795 = (t2794*t2794);
float t2796 = (t2788+t2795);
float t2797 = (t2780*t2689);
float t2798 = (t2797/t2782);
float t2799 = (t2798*float(0.16));
float t2800 = (t2687+t2799);
float t2801 = (t2800*float(0.16));
float t2802 = (t2689+t2801);
float t2803 = (t2802*t2802);
float t2804 = (t2796+t2803);
float t2805 = sqrt(t2804);
float t2806 = (t2805*t2805);
bool t2807 = (t2806<1);
float t2808 = (t2674*t2674);
float t2809 = (t2681*t2681);
float t2810 = (t2808+t2809);
float t2811 = (t2689*t2689);
float t2812 = (t2810+t2811);
float t2813 = sqrt(t2812);
float t2814 = (t2813*t2813);
bool t2815 = (t2814>1);
bool t2816 = (t2807&&t2815);
float t2817;
float t2818;
float t2819;
float t2820;
if(t2816){
t2817 = 0;
t2818 = 0;
t2819 = 0;
t2820 = 1;
} else {
t2817 = 0;
t2818 = 0;
t2819 = 0;
t2820 = 0;
}
float t2821 = (1-t2774);
float t2822 = (t2729*t2821);
float t2823 = (t2774+t2822);
float t2824 = (1-t2823);
float t2825 = (t2820*t2824);
float t2826 = (t2817*t2825);
float t2827 = (t2778+t2826);
bool t2828 = (t2681>0);
bool t2829 = (t2794>0);
bool t2830 = (!t2829);
bool t2831 = (t2828&&t2830);
bool t2832 = (!t2828);
bool t2833 = (t2829&&t2832);
bool t2834 = (t2831||t2833);
bool t2835 = (t2806<196);
bool t2836 = (t2806>float(6.76));
bool t2837 = (t2835&&t2836);
bool t2838 = (t2834&&t2837);
float t2839;
float t2840;
float t2841;
float t2842;
if(t2838){
float t2843 = (t2794/t2792);
float t2844 = (-t2843);
float t2845 = (t2785*t2844);
float t2846 = (t2787+t2845);
float t2847 = atan(t2846,t2802);
float t2848 = (u1.u0/30);
float t2849 = (t2847+t2848);
float t2850 = (2*3.1415927);
float t2851 = (t2849+t2850);
float t2852 = mod(t2851,2);
float t2853 = (t2852*3.1415927);
float t2854 = (2*3.1415927);
float t2855 = (t2853/t2854);
float t2856 = (t2846*t2846);
float t2857 = (t2792*t2844);
float t2858 = (t2794+t2857);
float t2859 = (t2858*t2858);
float t2860 = (t2856+t2859);
float t2861 = (t2800*t2844);
float t2862 = (t2802+t2861);
float t2863 = (t2862*t2862);
float t2864 = (t2860+t2863);
float t2865 = sqrt(t2864);
float t2866 = (t2865*t2865);
float t2867 = sqrt(t2866);
float t2868 = (t2867-float(2.6));
float t2869 = (t2868/float(11.4));
vec4 t2870 = texture(s4,vec2(t2855,t2869));
t2839 = t2870.x;
t2840 = t2870.y;
t2841 = t2870.z;
float t2871;
if(t2838){
t2871 = 1;
} else {
t2871 = 0;
}
float t2872 = (t2870.x*t2870.x);
float t2873 = (t2870.y*t2870.y);
float t2874 = (t2872+t2873);
float t2875 = (t2870.z*t2870.z);
float t2876 = (t2874+t2875);
float t2877 = sqrt(t2876);
float t2878 = (t2877*t2877);
float t2879 = (t2878/float(3.0));
bool t2880 = (t2879<=1);
float t2881;
if(t2880){
t2881 = t2879;
} else {
t2881 = 1;
}
bool t2882 = (t2881>=0);
float t2883;
if(t2882){
t2883 = t2881;
} else {
t2883 = 0;
}
float t2884 = (t2871*t2883);
t2842 = t2884;
} else {
t2839 = 0;
t2840 = 0;
t2841 = 0;
t2842 = 0;
}
float t2885 = (1-t2823);
float t2886 = (t2820*t2885);
float t2887 = (t2823+t2886);
float t2888 = (1-t2887);
float t2889 = (t2842*t2888);
float t2890 = (t2839*t2889);
float t2891 = (t2827+t2890);
float t2892 = (-float(1.5));
float t2893 = (t2892*t180);
float t2894 = (t2893*t2787);
float t2895 = pow(t2806,float(2.5));
float t2896 = (t2894/t2895);
float t2897 = (t2896*float(0.16));
float t2898 = (t2785+t2897);
float t2899 = (t2898*float(0.16));
float t2900 = (t2787+t2899);
float t2901 = (t2900*t2900);
float t2902 = (t2893*t2794);
float t2903 = (t2902/t2895);
float t2904 = (t2903*float(0.16));
float t2905 = (t2792+t2904);
float t2906 = (t2905*float(0.16));
float t2907 = (t2794+t2906);
float t2908 = (t2907*t2907);
float t2909 = (t2901+t2908);
float t2910 = (t2893*t2802);
float t2911 = (t2910/t2895);
float t2912 = (t2911*float(0.16));
float t2913 = (t2800+t2912);
float t2914 = (t2913*float(0.16));
float t2915 = (t2802+t2914);
float t2916 = (t2915*t2915);
float t2917 = (t2909+t2916);
float t2918 = sqrt(t2917);
float t2919 = (t2918*t2918);
bool t2920 = (t2919<1);
float t2921 = (t2787*t2787);
float t2922 = (t2794*t2794);
float t2923 = (t2921+t2922);
float t2924 = (t2802*t2802);
float t2925 = (t2923+t2924);
float t2926 = sqrt(t2925);
float t2927 = (t2926*t2926);
bool t2928 = (t2927>1);
bool t2929 = (t2920&&t2928);
float t2930;
float t2931;
float t2932;
float t2933;
if(t2929){
t2930 = 0;
t2931 = 0;
t2932 = 0;
t2933 = 1;
} else {
t2930 = 0;
t2931 = 0;
t2932 = 0;
t2933 = 0;
}
float t2934 = (1-t2887);
float t2935 = (t2842*t2934);
float t2936 = (t2887+t2935);
float t2937 = (1-t2936);
float t2938 = (t2933*t2937);
float t2939 = (t2930*t2938);
float t2940 = (t2891+t2939);
bool t2941 = (t2794>0);
bool t2942 = (t2907>0);
bool t2943 = (!t2942);
bool t2944 = (t2941&&t2943);
bool t2945 = (!t2941);
bool t2946 = (t2942&&t2945);
bool t2947 = (t2944||t2946);
bool t2948 = (t2919<196);
bool t2949 = (t2919>float(6.76));
bool t2950 = (t2948&&t2949);
bool t2951 = (t2947&&t2950);
float t2952;
float t2953;
float t2954;
float t2955;
if(t2951){
float t2956 = (t2907/t2905);
float t2957 = (-t2956);
float t2958 = (t2898*t2957);
float t2959 = (t2900+t2958);
float t2960 = atan(t2959,t2915);
float t2961 = (u1.u0/30);
float t2962 = (t2960+t2961);
float t2963 = (2*3.1415927);
float t2964 = (t2962+t2963);
float t2965 = mod(t2964,2);
float t2966 = (t2965*3.1415927);
float t2967 = (2*3.1415927);
float t2968 = (t2966/t2967);
float t2969 = (t2959*t2959);
float t2970 = (t2905*t2957);
float t2971 = (t2907+t2970);
float t2972 = (t2971*t2971);
float t2973 = (t2969+t2972);
float t2974 = (t2913*t2957);
float t2975 = (t2915+t2974);
float t2976 = (t2975*t2975);
float t2977 = (t2973+t2976);
float t2978 = sqrt(t2977);
float t2979 = (t2978*t2978);
float t2980 = sqrt(t2979);
float t2981 = (t2980-float(2.6));
float t2982 = (t2981/float(11.4));
vec4 t2983 = texture(s4,vec2(t2968,t2982));
t2952 = t2983.x;
t2953 = t2983.y;
t2954 = t2983.z;
float t2984;
if(t2951){
t2984 = 1;
} else {
t2984 = 0;
}
float t2985 = (t2983.x*t2983.x);
float t2986 = (t2983.y*t2983.y);
float t2987 = (t2985+t2986);
float t2988 = (t2983.z*t2983.z);
float t2989 = (t2987+t2988);
float t2990 = sqrt(t2989);
float t2991 = (t2990*t2990);
float t2992 = (t2991/float(3.0));
bool t2993 = (t2992<=1);
float t2994;
if(t2993){
t2994 = t2992;
} else {
t2994 = 1;
}
bool t2995 = (t2994>=0);
float t2996;
if(t2995){
t2996 = t2994;
} else {
t2996 = 0;
}
float t2997 = (t2984*t2996);
t2955 = t2997;
} else {
t2952 = 0;
t2953 = 0;
t2954 = 0;
t2955 = 0;
}
float t2998 = (1-t2936);
float t2999 = (t2933*t2998);
float t3000 = (t2936+t2999);
float t3001 = (1-t3000);
float t3002 = (t2955*t3001);
float t3003 = (t2952*t3002);
float t3004 = (t2940+t3003);
float t3005 = (-float(1.5));
float t3006 = (t3005*t180);
float t3007 = (t3006*t2900);
float t3008 = pow(t2919,float(2.5));
float t3009 = (t3007/t3008);
float t3010 = (t3009*float(0.16));
float t3011 = (t2898+t3010);
float t3012 = (t3011*float(0.16));
float t3013 = (t2900+t3012);
float t3014 = (t3013*t3013);
float t3015 = (t3006*t2907);
float t3016 = (t3015/t3008);
float t3017 = (t3016*float(0.16));
float t3018 = (t2905+t3017);
float t3019 = (t3018*float(0.16));
float t3020 = (t2907+t3019);
float t3021 = (t3020*t3020);
float t3022 = (t3014+t3021);
float t3023 = (t3006*t2915);
float t3024 = (t3023/t3008);
float t3025 = (t3024*float(0.16));
float t3026 = (t2913+t3025);
float t3027 = (t3026*float(0.16));
float t3028 = (t2915+t3027);
float t3029 = (t3028*t3028);
float t3030 = (t3022+t3029);
float t3031 = sqrt(t3030);
float t3032 = (t3031*t3031);
bool t3033 = (t3032<1);
float t3034 = (t2900*t2900);
float t3035 = (t2907*t2907);
float t3036 = (t3034+t3035);
float t3037 = (t2915*t2915);
float t3038 = (t3036+t3037);
float t3039 = sqrt(t3038);
float t3040 = (t3039*t3039);
bool t3041 = (t3040>1);
bool t3042 = (t3033&&t3041);
float t3043;
float t3044;
float t3045;
float t3046;
if(t3042){
t3043 = 0;
t3044 = 0;
t3045 = 0;
t3046 = 1;
} else {
t3043 = 0;
t3044 = 0;
t3045 = 0;
t3046 = 0;
}
float t3047 = (1-t3000);
float t3048 = (t2955*t3047);
float t3049 = (t3000+t3048);
float t3050 = (1-t3049);
float t3051 = (t3046*t3050);
float t3052 = (t3043*t3051);
float t3053 = (t3004+t3052);
bool t3054 = (t2907>0);
bool t3055 = (t3020>0);
bool t3056 = (!t3055);
bool t3057 = (t3054&&t3056);
bool t3058 = (!t3054);
bool t3059 = (t3055&&t3058);
bool t3060 = (t3057||t3059);
bool t3061 = (t3032<196);
bool t3062 = (t3032>float(6.76));
bool t3063 = (t3061&&t3062);
bool t3064 = (t3060&&t3063);
float t3065;
float t3066;
float t3067;
float t3068;
if(t3064){
float t3069 = (t3020/t3018);
float t3070 = (-t3069);
float t3071 = (t3011*t3070);
float t3072 = (t3013+t3071);
float t3073 = atan(t3072,t3028);
float t3074 = (u1.u0/30);
float t3075 = (t3073+t3074);
float t3076 = (2*3.1415927);
float t3077 = (t3075+t3076);
float t3078 = mod(t3077,2);
float t3079 = (t3078*3.1415927);
float t3080 = (2*3.1415927);
float t3081 = (t3079/t3080);
float t3082 = (t3072*t3072);
float t3083 = (t3018*t3070);
float t3084 = (t3020+t3083);
float t3085 = (t3084*t3084);
float t3086 = (t3082+t3085);
float t3087 = (t3026*t3070);
float t3088 = (t3028+t3087);
float t3089 = (t3088*t3088);
float t3090 = (t3086+t3089);
float t3091 = sqrt(t3090);
float t3092 = (t3091*t3091);
float t3093 = sqrt(t3092);
float t3094 = (t3093-float(2.6));
float t3095 = (t3094/float(11.4));
vec4 t3096 = texture(s4,vec2(t3081,t3095));
t3065 = t3096.x;
t3066 = t3096.y;
t3067 = t3096.z;
float t3097;
if(t3064){
t3097 = 1;
} else {
t3097 = 0;
}
float t3098 = (t3096.x*t3096.x);
float t3099 = (t3096.y*t3096.y);
float t3100 = (t3098+t3099);
float t3101 = (t3096.z*t3096.z);
float t3102 = (t3100+t3101);
float t3103 = sqrt(t3102);
float t3104 = (t3103*t3103);
float t3105 = (t3104/float(3.0));
bool t3106 = (t3105<=1);
float t3107;
if(t3106){
t3107 = t3105;
} else {
t3107 = 1;
}
bool t3108 = (t3107>=0);
float t3109;
if(t3108){
t3109 = t3107;
} else {
t3109 = 0;
}
float t3110 = (t3097*t3109);
t3068 = t3110;
} else {
t3065 = 0;
t3066 = 0;
t3067 = 0;
t3068 = 0;
}
float t3111 = (1-t3049);
float t3112 = (t3046*t3111);
float t3113 = (t3049+t3112);
float t3114 = (1-t3113);
float t3115 = (t3068*t3114);
float t3116 = (t3065*t3115);
float t3117 = (t3053+t3116);
float t3118 = (-float(1.5));
float t3119 = (t3118*t180);
float t3120 = (t3119*t3013);
float t3121 = pow(t3032,float(2.5));
float t3122 = (t3120/t3121);
float t3123 = (t3122*float(0.16));
float t3124 = (t3011+t3123);
float t3125 = (t3124*float(0.16));
float t3126 = (t3013+t3125);
float t3127 = (t3126*t3126);
float t3128 = (t3119*t3020);
float t3129 = (t3128/t3121);
float t3130 = (t3129*float(0.16));
float t3131 = (t3018+t3130);
float t3132 = (t3131*float(0.16));
float t3133 = (t3020+t3132);
float t3134 = (t3133*t3133);
float t3135 = (t3127+t3134);
float t3136 = (t3119*t3028);
float t3137 = (t3136/t3121);
float t3138 = (t3137*float(0.16));
float t3139 = (t3026+t3138);
float t3140 = (t3139*float(0.16));
float t3141 = (t3028+t3140);
float t3142 = (t3141*t3141);
float t3143 = (t3135+t3142);
float t3144 = sqrt(t3143);
float t3145 = (t3144*t3144);
bool t3146 = (t3145<1);
float t3147 = (t3013*t3013);
float t3148 = (t3020*t3020);
float t3149 = (t3147+t3148);
float t3150 = (t3028*t3028);
float t3151 = (t3149+t3150);
float t3152 = sqrt(t3151);
float t3153 = (t3152*t3152);
bool t3154 = (t3153>1);
bool t3155 = (t3146&&t3154);
float t3156;
float t3157;
float t3158;
float t3159;
if(t3155){
t3156 = 0;
t3157 = 0;
t3158 = 0;
t3159 = 1;
} else {
t3156 = 0;
t3157 = 0;
t3158 = 0;
t3159 = 0;
}
float t3160 = (1-t3113);
float t3161 = (t3068*t3160);
float t3162 = (t3113+t3161);
float t3163 = (1-t3162);
float t3164 = (t3159*t3163);
float t3165 = (t3156*t3164);
float t3166 = (t3117+t3165);
bool t3167 = (t3020>0);
bool t3168 = (t3133>0);
bool t3169 = (!t3168);
bool t3170 = (t3167&&t3169);
bool t3171 = (!t3167);
bool t3172 = (t3168&&t3171);
bool t3173 = (t3170||t3172);
bool t3174 = (t3145<196);
bool t3175 = (t3145>float(6.76));
bool t3176 = (t3174&&t3175);
bool t3177 = (t3173&&t3176);
float t3178;
float t3179;
float t3180;
float t3181;
if(t3177){
float t3182 = (t3133/t3131);
float t3183 = (-t3182);
float t3184 = (t3124*t3183);
float t3185 = (t3126+t3184);
float t3186 = atan(t3185,t3141);
float t3187 = (u1.u0/30);
float t3188 = (t3186+t3187);
float t3189 = (2*3.1415927);
float t3190 = (t3188+t3189);
float t3191 = mod(t3190,2);
float t3192 = (t3191*3.1415927);
float t3193 = (2*3.1415927);
float t3194 = (t3192/t3193);
float t3195 = (t3185*t3185);
float t3196 = (t3131*t3183);
float t3197 = (t3133+t3196);
float t3198 = (t3197*t3197);
float t3199 = (t3195+t3198);
float t3200 = (t3139*t3183);
float t3201 = (t3141+t3200);
float t3202 = (t3201*t3201);
float t3203 = (t3199+t3202);
float t3204 = sqrt(t3203);
float t3205 = (t3204*t3204);
float t3206 = sqrt(t3205);
float t3207 = (t3206-float(2.6));
float t3208 = (t3207/float(11.4));
vec4 t3209 = texture(s4,vec2(t3194,t3208));
t3178 = t3209.x;
t3179 = t3209.y;
t3180 = t3209.z;
float t3210;
if(t3177){
t3210 = 1;
} else {
t3210 = 0;
}
float t3211 = (t3209.x*t3209.x);
float t3212 = (t3209.y*t3209.y);
float t3213 = (t3211+t3212);
float t3214 = (t3209.z*t3209.z);
float t3215 = (t3213+t3214);
float t3216 = sqrt(t3215);
float t3217 = (t3216*t3216);
float t3218 = (t3217/float(3.0));
bool t3219 = (t3218<=1);
float t3220;
if(t3219){
t3220 = t3218;
} else {
t3220 = 1;
}
bool t3221 = (t3220>=0);
float t3222;
if(t3221){
t3222 = t3220;
} else {
t3222 = 0;
}
float t3223 = (t3210*t3222);
t3181 = t3223;
} else {
t3178 = 0;
t3179 = 0;
t3180 = 0;
t3181 = 0;
}
float t3224 = (1-t3162);
float t3225 = (t3159*t3224);
float t3226 = (t3162+t3225);
float t3227 = (1-t3226);
float t3228 = (t3181*t3227);
float t3229 = (t3178*t3228);
float t3230 = (t3166+t3229);
float t3231 = (-float(1.5));
float t3232 = (t3231*t180);
float t3233 = (t3232*t3126);
float t3234 = pow(t3145,float(2.5));
float t3235 = (t3233/t3234);
float t3236 = (t3235*float(0.16));
float t3237 = (t3124+t3236);
float t3238 = (t3237*float(0.16));
float t3239 = (t3126+t3238);
float t3240 = (t3239*t3239);
float t3241 = (t3232*t3133);
float t3242 = (t3241/t3234);
float t3243 = (t3242*float(0.16));
float t3244 = (t3131+t3243);
float t3245 = (t3244*float(0.16));
float t3246 = (t3133+t3245);
float t3247 = (t3246*t3246);
float t3248 = (t3240+t3247);
float t3249 = (t3232*t3141);
float t3250 = (t3249/t3234);
float t3251 = (t3250*float(0.16));
float t3252 = (t3139+t3251);
float t3253 = (t3252*float(0.16));
float t3254 = (t3141+t3253);
float t3255 = (t3254*t3254);
float t3256 = (t3248+t3255);
float t3257 = sqrt(t3256);
float t3258 = (t3257*t3257);
bool t3259 = (t3258<1);
float t3260 = (t3126*t3126);
float t3261 = (t3133*t3133);
float t3262 = (t3260+t3261);
float t3263 = (t3141*t3141);
float t3264 = (t3262+t3263);
float t3265 = sqrt(t3264);
float t3266 = (t3265*t3265);
bool t3267 = (t3266>1);
bool t3268 = (t3259&&t3267);
float t3269;
float t3270;
float t3271;
float t3272;
if(t3268){
t3269 = 0;
t3270 = 0;
t3271 = 0;
t3272 = 1;
} else {
t3269 = 0;
t3270 = 0;
t3271 = 0;
t3272 = 0;
}
float t3273 = (1-t3226);
float t3274 = (t3181*t3273);
float t3275 = (t3226+t3274);
float t3276 = (1-t3275);
float t3277 = (t3272*t3276);
float t3278 = (t3269*t3277);
float t3279 = (t3230+t3278);
bool t3280 = (t3133>0);
bool t3281 = (t3246>0);
bool t3282 = (!t3281);
bool t3283 = (t3280&&t3282);
bool t3284 = (!t3280);
bool t3285 = (t3281&&t3284);
bool t3286 = (t3283||t3285);
bool t3287 = (t3258<196);
bool t3288 = (t3258>float(6.76));
bool t3289 = (t3287&&t3288);
bool t3290 = (t3286&&t3289);
float t3291;
float t3292;
float t3293;
float t3294;
if(t3290){
float t3295 = (t3246/t3244);
float t3296 = (-t3295);
float t3297 = (t3237*t3296);
float t3298 = (t3239+t3297);
float t3299 = atan(t3298,t3254);
float t3300 = (u1.u0/30);
float t3301 = (t3299+t3300);
float t3302 = (2*3.1415927);
float t3303 = (t3301+t3302);
float t3304 = mod(t3303,2);
float t3305 = (t3304*3.1415927);
float t3306 = (2*3.1415927);
float t3307 = (t3305/t3306);
float t3308 = (t3298*t3298);
float t3309 = (t3244*t3296);
float t3310 = (t3246+t3309);
float t3311 = (t3310*t3310);
float t3312 = (t3308+t3311);
float t3313 = (t3252*t3296);
float t3314 = (t3254+t3313);
float t3315 = (t3314*t3314);
float t3316 = (t3312+t3315);
float t3317 = sqrt(t3316);
float t3318 = (t3317*t3317);
float t3319 = sqrt(t3318);
float t3320 = (t3319-float(2.6));
float t3321 = (t3320/float(11.4));
vec4 t3322 = texture(s4,vec2(t3307,t3321));
t3291 = t3322.x;
t3292 = t3322.y;
t3293 = t3322.z;
float t3323;
if(t3290){
t3323 = 1;
} else {
t3323 = 0;
}
float t3324 = (t3322.x*t3322.x);
float t3325 = (t3322.y*t3322.y);
float t3326 = (t3324+t3325);
float t3327 = (t3322.z*t3322.z);
float t3328 = (t3326+t3327);
float t3329 = sqrt(t3328);
float t3330 = (t3329*t3329);
float t3331 = (t3330/float(3.0));
bool t3332 = (t3331<=1);
float t3333;
if(t3332){
t3333 = t3331;
} else {
t3333 = 1;
}
bool t3334 = (t3333>=0);
float t3335;
if(t3334){
t3335 = t3333;
} else {
t3335 = 0;
}
float t3336 = (t3323*t3335);
t3294 = t3336;
} else {
t3291 = 0;
t3292 = 0;
t3293 = 0;
t3294 = 0;
}
float t3337 = (1-t3275);
float t3338 = (t3272*t3337);
float t3339 = (t3275+t3338);
float t3340 = (1-t3339);
float t3341 = (t3294*t3340);
float t3342 = (t3291*t3341);
float t3343 = (t3279+t3342);
float t3344 = (-float(1.5));
float t3345 = (t3344*t180);
float t3346 = (t3345*t3239);
float t3347 = pow(t3258,float(2.5));
float t3348 = (t3346/t3347);
float t3349 = (t3348*float(0.16));
float t3350 = (t3237+t3349);
float t3351 = (t3350*float(0.16));
float t3352 = (t3239+t3351);
float t3353 = (t3352*t3352);
float t3354 = (t3345*t3246);
float t3355 = (t3354/t3347);
float t3356 = (t3355*float(0.16));
float t3357 = (t3244+t3356);
float t3358 = (t3357*float(0.16));
float t3359 = (t3246+t3358);
float t3360 = (t3359*t3359);
float t3361 = (t3353+t3360);
float t3362 = (t3345*t3254);
float t3363 = (t3362/t3347);
float t3364 = (t3363*float(0.16));
float t3365 = (t3252+t3364);
float t3366 = (t3365*float(0.16));
float t3367 = (t3254+t3366);
float t3368 = (t3367*t3367);
float t3369 = (t3361+t3368);
float t3370 = sqrt(t3369);
float t3371 = (t3370*t3370);
bool t3372 = (t3371<1);
float t3373 = (t3239*t3239);
float t3374 = (t3246*t3246);
float t3375 = (t3373+t3374);
float t3376 = (t3254*t3254);
float t3377 = (t3375+t3376);
float t3378 = sqrt(t3377);
float t3379 = (t3378*t3378);
bool t3380 = (t3379>1);
bool t3381 = (t3372&&t3380);
float t3382;
float t3383;
float t3384;
float t3385;
if(t3381){
t3382 = 0;
t3383 = 0;
t3384 = 0;
t3385 = 1;
} else {
t3382 = 0;
t3383 = 0;
t3384 = 0;
t3385 = 0;
}
float t3386 = (1-t3339);
float t3387 = (t3294*t3386);
float t3388 = (t3339+t3387);
float t3389 = (1-t3388);
float t3390 = (t3385*t3389);
float t3391 = (t3382*t3390);
float t3392 = (t3343+t3391);
bool t3393 = (t3246>0);
bool t3394 = (t3359>0);
bool t3395 = (!t3394);
bool t3396 = (t3393&&t3395);
bool t3397 = (!t3393);
bool t3398 = (t3394&&t3397);
bool t3399 = (t3396||t3398);
bool t3400 = (t3371<196);
bool t3401 = (t3371>float(6.76));
bool t3402 = (t3400&&t3401);
bool t3403 = (t3399&&t3402);
float t3404;
float t3405;
float t3406;
float t3407;
if(t3403){
float t3408 = (t3359/t3357);
float t3409 = (-t3408);
float t3410 = (t3350*t3409);
float t3411 = (t3352+t3410);
float t3412 = atan(t3411,t3367);
float t3413 = (u1.u0/30);
float t3414 = (t3412+t3413);
float t3415 = (2*3.1415927);
float t3416 = (t3414+t3415);
float t3417 = mod(t3416,2);
float t3418 = (t3417*3.1415927);
float t3419 = (2*3.1415927);
float t3420 = (t3418/t3419);
float t3421 = (t3411*t3411);
float t3422 = (t3357*t3409);
float t3423 = (t3359+t3422);
float t3424 = (t3423*t3423);
float t3425 = (t3421+t3424);
float t3426 = (t3365*t3409);
float t3427 = (t3367+t3426);
float t3428 = (t3427*t3427);
float t3429 = (t3425+t3428);
float t3430 = sqrt(t3429);
float t3431 = (t3430*t3430);
float t3432 = sqrt(t3431);
float t3433 = (t3432-float(2.6));
float t3434 = (t3433/float(11.4));
vec4 t3435 = texture(s4,vec2(t3420,t3434));
t3404 = t3435.x;
t3405 = t3435.y;
t3406 = t3435.z;
float t3436;
if(t3403){
t3436 = 1;
} else {
t3436 = 0;
}
float t3437 = (t3435.x*t3435.x);
float t3438 = (t3435.y*t3435.y);
float t3439 = (t3437+t3438);
float t3440 = (t3435.z*t3435.z);
float t3441 = (t3439+t3440);
float t3442 = sqrt(t3441);
float t3443 = (t3442*t3442);
float t3444 = (t3443/float(3.0));
bool t3445 = (t3444<=1);
float t3446;
if(t3445){
t3446 = t3444;
} else {
t3446 = 1;
}
bool t3447 = (t3446>=0);
float t3448;
if(t3447){
t3448 = t3446;
} else {
t3448 = 0;
}
float t3449 = (t3436*t3448);
t3407 = t3449;
} else {
t3404 = 0;
t3405 = 0;
t3406 = 0;
t3407 = 0;
}
float t3450 = (1-t3388);
float t3451 = (t3385*t3450);
float t3452 = (t3388+t3451);
float t3453 = (1-t3452);
float t3454 = (t3407*t3453);
float t3455 = (t3404*t3454);
float t3456 = (t3392+t3455);
float t3457 = (-float(1.5));
float t3458 = (t3457*t180);
float t3459 = (t3458*t3352);
float t3460 = pow(t3371,float(2.5));
float t3461 = (t3459/t3460);
float t3462 = (t3461*float(0.16));
float t3463 = (t3350+t3462);
float t3464 = (t3463*float(0.16));
float t3465 = (t3352+t3464);
float t3466 = (t3465*t3465);
float t3467 = (t3458*t3359);
float t3468 = (t3467/t3460);
float t3469 = (t3468*float(0.16));
float t3470 = (t3357+t3469);
float t3471 = (t3470*float(0.16));
float t3472 = (t3359+t3471);
float t3473 = (t3472*t3472);
float t3474 = (t3466+t3473);
float t3475 = (t3458*t3367);
float t3476 = (t3475/t3460);
float t3477 = (t3476*float(0.16));
float t3478 = (t3365+t3477);
float t3479 = (t3478*float(0.16));
float t3480 = (t3367+t3479);
float t3481 = (t3480*t3480);
float t3482 = (t3474+t3481);
float t3483 = sqrt(t3482);
float t3484 = (t3483*t3483);
bool t3485 = (t3484<1);
float t3486 = (t3352*t3352);
float t3487 = (t3359*t3359);
float t3488 = (t3486+t3487);
float t3489 = (t3367*t3367);
float t3490 = (t3488+t3489);
float t3491 = sqrt(t3490);
float t3492 = (t3491*t3491);
bool t3493 = (t3492>1);
bool t3494 = (t3485&&t3493);
float t3495;
float t3496;
float t3497;
float t3498;
if(t3494){
t3495 = 0;
t3496 = 0;
t3497 = 0;
t3498 = 1;
} else {
t3495 = 0;
t3496 = 0;
t3497 = 0;
t3498 = 0;
}
float t3499 = (1-t3452);
float t3500 = (t3407*t3499);
float t3501 = (t3452+t3500);
float t3502 = (1-t3501);
float t3503 = (t3498*t3502);
float t3504 = (t3495*t3503);
float t3505 = (t3456+t3504);
bool t3506 = (t3359>0);
bool t3507 = (t3472>0);
bool t3508 = (!t3507);
bool t3509 = (t3506&&t3508);
bool t3510 = (!t3506);
bool t3511 = (t3507&&t3510);
bool t3512 = (t3509||t3511);
bool t3513 = (t3484<196);
bool t3514 = (t3484>float(6.76));
bool t3515 = (t3513&&t3514);
bool t3516 = (t3512&&t3515);
float t3517;
float t3518;
float t3519;
float t3520;
if(t3516){
float t3521 = (t3472/t3470);
float t3522 = (-t3521);
float t3523 = (t3463*t3522);
float t3524 = (t3465+t3523);
float t3525 = atan(t3524,t3480);
float t3526 = (u1.u0/30);
float t3527 = (t3525+t3526);
float t3528 = (2*3.1415927);
float t3529 = (t3527+t3528);
float t3530 = mod(t3529,2);
float t3531 = (t3530*3.1415927);
float t3532 = (2*3.1415927);
float t3533 = (t3531/t3532);
float t3534 = (t3524*t3524);
float t3535 = (t3470*t3522);
float t3536 = (t3472+t3535);
float t3537 = (t3536*t3536);
float t3538 = (t3534+t3537);
float t3539 = (t3478*t3522);
float t3540 = (t3480+t3539);
float t3541 = (t3540*t3540);
float t3542 = (t3538+t3541);
float t3543 = sqrt(t3542);
float t3544 = (t3543*t3543);
float t3545 = sqrt(t3544);
float t3546 = (t3545-float(2.6));
float t3547 = (t3546/float(11.4));
vec4 t3548 = texture(s4,vec2(t3533,t3547));
t3517 = t3548.x;
t3518 = t3548.y;
t3519 = t3548.z;
float t3549;
if(t3516){
t3549 = 1;
} else {
t3549 = 0;
}
float t3550 = (t3548.x*t3548.x);
float t3551 = (t3548.y*t3548.y);
float t3552 = (t3550+t3551);
float t3553 = (t3548.z*t3548.z);
float t3554 = (t3552+t3553);
float t3555 = sqrt(t3554);
float t3556 = (t3555*t3555);
float t3557 = (t3556/float(3.0));
bool t3558 = (t3557<=1);
float t3559;
if(t3558){
t3559 = t3557;
} else {
t3559 = 1;
}
bool t3560 = (t3559>=0);
float t3561;
if(t3560){
t3561 = t3559;
} else {
t3561 = 0;
}
float t3562 = (t3549*t3561);
t3520 = t3562;
} else {
t3517 = 0;
t3518 = 0;
t3519 = 0;
t3520 = 0;
}
float t3563 = (1-t3501);
float t3564 = (t3498*t3563);
float t3565 = (t3501+t3564);
float t3566 = (1-t3565);
float t3567 = (t3520*t3566);
float t3568 = (t3517*t3567);
float t3569 = (t3505+t3568);
float t3570 = (-float(1.5));
float t3571 = (t3570*t180);
float t3572 = (t3571*t3465);
float t3573 = pow(t3484,float(2.5));
float t3574 = (t3572/t3573);
float t3575 = (t3574*float(0.16));
float t3576 = (t3463+t3575);
float t3577 = (t3576*float(0.16));
float t3578 = (t3465+t3577);
float t3579 = (t3578*t3578);
float t3580 = (t3571*t3472);
float t3581 = (t3580/t3573);
float t3582 = (t3581*float(0.16));
float t3583 = (t3470+t3582);
float t3584 = (t3583*float(0.16));
float t3585 = (t3472+t3584);
float t3586 = (t3585*t3585);
float t3587 = (t3579+t3586);
float t3588 = (t3571*t3480);
float t3589 = (t3588/t3573);
float t3590 = (t3589*float(0.16));
float t3591 = (t3478+t3590);
float t3592 = (t3591*float(0.16));
float t3593 = (t3480+t3592);
float t3594 = (t3593*t3593);
float t3595 = (t3587+t3594);
float t3596 = sqrt(t3595);
float t3597 = (t3596*t3596);
bool t3598 = (t3597<1);
float t3599 = (t3465*t3465);
float t3600 = (t3472*t3472);
float t3601 = (t3599+t3600);
float t3602 = (t3480*t3480);
float t3603 = (t3601+t3602);
float t3604 = sqrt(t3603);
float t3605 = (t3604*t3604);
bool t3606 = (t3605>1);
bool t3607 = (t3598&&t3606);
float t3608;
float t3609;
float t3610;
float t3611;
if(t3607){
t3608 = 0;
t3609 = 0;
t3610 = 0;
t3611 = 1;
} else {
t3608 = 0;
t3609 = 0;
t3610 = 0;
t3611 = 0;
}
float t3612 = (1-t3565);
float t3613 = (t3520*t3612);
float t3614 = (t3565+t3613);
float t3615 = (1-t3614);
float t3616 = (t3611*t3615);
float t3617 = (t3608*t3616);
float t3618 = (t3569+t3617);
bool t3619 = (t3472>0);
bool t3620 = (t3585>0);
bool t3621 = (!t3620);
bool t3622 = (t3619&&t3621);
bool t3623 = (!t3619);
bool t3624 = (t3620&&t3623);
bool t3625 = (t3622||t3624);
bool t3626 = (t3597<196);
bool t3627 = (t3597>float(6.76));
bool t3628 = (t3626&&t3627);
bool t3629 = (t3625&&t3628);
float t3630;
float t3631;
float t3632;
float t3633;
if(t3629){
float t3634 = (t3585/t3583);
float t3635 = (-t3634);
float t3636 = (t3576*t3635);
float t3637 = (t3578+t3636);
float t3638 = atan(t3637,t3593);
float t3639 = (u1.u0/30);
float t3640 = (t3638+t3639);
float t3641 = (2*3.1415927);
float t3642 = (t3640+t3641);
float t3643 = mod(t3642,2);
float t3644 = (t3643*3.1415927);
float t3645 = (2*3.1415927);
float t3646 = (t3644/t3645);
float t3647 = (t3637*t3637);
float t3648 = (t3583*t3635);
float t3649 = (t3585+t3648);
float t3650 = (t3649*t3649);
float t3651 = (t3647+t3650);
float t3652 = (t3591*t3635);
float t3653 = (t3593+t3652);
float t3654 = (t3653*t3653);
float t3655 = (t3651+t3654);
float t3656 = sqrt(t3655);
float t3657 = (t3656*t3656);
float t3658 = sqrt(t3657);
float t3659 = (t3658-float(2.6));
float t3660 = (t3659/float(11.4));
vec4 t3661 = texture(s4,vec2(t3646,t3660));
t3630 = t3661.x;
t3631 = t3661.y;
t3632 = t3661.z;
float t3662;
if(t3629){
t3662 = 1;
} else {
t3662 = 0;
}
float t3663 = (t3661.x*t3661.x);
float t3664 = (t3661.y*t3661.y);
float t3665 = (t3663+t3664);
float t3666 = (t3661.z*t3661.z);
float t3667 = (t3665+t3666);
float t3668 = sqrt(t3667);
float t3669 = (t3668*t3668);
float t3670 = (t3669/float(3.0));
bool t3671 = (t3670<=1);
float t3672;
if(t3671){
t3672 = t3670;
} else {
t3672 = 1;
}
bool t3673 = (t3672>=0);
float t3674;
if(t3673){
t3674 = t3672;
} else {
t3674 = 0;
}
float t3675 = (t3662*t3674);
t3633 = t3675;
} else {
t3630 = 0;
t3631 = 0;
t3632 = 0;
t3633 = 0;
}
float t3676 = (1-t3614);
float t3677 = (t3611*t3676);
float t3678 = (t3614+t3677);
float t3679 = (1-t3678);
float t3680 = (t3633*t3679);
float t3681 = (t3630*t3680);
float t3682 = (t3618+t3681);
float t3683 = (-float(1.5));
float t3684 = (t3683*t180);
float t3685 = (t3684*t3578);
float t3686 = pow(t3597,float(2.5));
float t3687 = (t3685/t3686);
float t3688 = (t3687*float(0.16));
float t3689 = (t3576+t3688);
float t3690 = (t3689*float(0.16));
float t3691 = (t3578+t3690);
float t3692 = (t3691*t3691);
float t3693 = (t3684*t3585);
float t3694 = (t3693/t3686);
float t3695 = (t3694*float(0.16));
float t3696 = (t3583+t3695);
float t3697 = (t3696*float(0.16));
float t3698 = (t3585+t3697);
float t3699 = (t3698*t3698);
float t3700 = (t3692+t3699);
float t3701 = (t3684*t3593);
float t3702 = (t3701/t3686);
float t3703 = (t3702*float(0.16));
float t3704 = (t3591+t3703);
float t3705 = (t3704*float(0.16));
float t3706 = (t3593+t3705);
float t3707 = (t3706*t3706);
float t3708 = (t3700+t3707);
float t3709 = sqrt(t3708);
float t3710 = (t3709*t3709);
bool t3711 = (t3710<1);
float t3712 = (t3578*t3578);
float t3713 = (t3585*t3585);
float t3714 = (t3712+t3713);
float t3715 = (t3593*t3593);
float t3716 = (t3714+t3715);
float t3717 = sqrt(t3716);
float t3718 = (t3717*t3717);
bool t3719 = (t3718>1);
bool t3720 = (t3711&&t3719);
float t3721;
float t3722;
float t3723;
float t3724;
if(t3720){
t3721 = 0;
t3722 = 0;
t3723 = 0;
t3724 = 1;
} else {
t3721 = 0;
t3722 = 0;
t3723 = 0;
t3724 = 0;
}
float t3725 = (1-t3678);
float t3726 = (t3633*t3725);
float t3727 = (t3678+t3726);
float t3728 = (1-t3727);
float t3729 = (t3724*t3728);
float t3730 = (t3721*t3729);
float t3731 = (t3682+t3730);
bool t3732 = (t3585>0);
bool t3733 = (t3698>0);
bool t3734 = (!t3733);
bool t3735 = (t3732&&t3734);
bool t3736 = (!t3732);
bool t3737 = (t3733&&t3736);
bool t3738 = (t3735||t3737);
bool t3739 = (t3710<196);
bool t3740 = (t3710>float(6.76));
bool t3741 = (t3739&&t3740);
bool t3742 = (t3738&&t3741);
float t3743;
float t3744;
float t3745;
float t3746;
if(t3742){
float t3747 = (t3698/t3696);
float t3748 = (-t3747);
float t3749 = (t3689*t3748);
float t3750 = (t3691+t3749);
float t3751 = atan(t3750,t3706);
float t3752 = (u1.u0/30);
float t3753 = (t3751+t3752);
float t3754 = (2*3.1415927);
float t3755 = (t3753+t3754);
float t3756 = mod(t3755,2);
float t3757 = (t3756*3.1415927);
float t3758 = (2*3.1415927);
float t3759 = (t3757/t3758);
float t3760 = (t3750*t3750);
float t3761 = (t3696*t3748);
float t3762 = (t3698+t3761);
float t3763 = (t3762*t3762);
float t3764 = (t3760+t3763);
float t3765 = (t3704*t3748);
float t3766 = (t3706+t3765);
float t3767 = (t3766*t3766);
float t3768 = (t3764+t3767);
float t3769 = sqrt(t3768);
float t3770 = (t3769*t3769);
float t3771 = sqrt(t3770);
float t3772 = (t3771-float(2.6));
float t3773 = (t3772/float(11.4));
vec4 t3774 = texture(s4,vec2(t3759,t3773));
t3743 = t3774.x;
t3744 = t3774.y;
t3745 = t3774.z;
float t3775;
if(t3742){
t3775 = 1;
} else {
t3775 = 0;
}
float t3776 = (t3774.x*t3774.x);
float t3777 = (t3774.y*t3774.y);
float t3778 = (t3776+t3777);
float t3779 = (t3774.z*t3774.z);
float t3780 = (t3778+t3779);
float t3781 = sqrt(t3780);
float t3782 = (t3781*t3781);
float t3783 = (t3782/float(3.0));
bool t3784 = (t3783<=1);
float t3785;
if(t3784){
t3785 = t3783;
} else {
t3785 = 1;
}
bool t3786 = (t3785>=0);
float t3787;
if(t3786){
t3787 = t3785;
} else {
t3787 = 0;
}
float t3788 = (t3775*t3787);
t3746 = t3788;
} else {
t3743 = 0;
t3744 = 0;
t3745 = 0;
t3746 = 0;
}
float t3789 = (1-t3727);
float t3790 = (t3724*t3789);
float t3791 = (t3727+t3790);
float t3792 = (1-t3791);
float t3793 = (t3746*t3792);
float t3794 = (t3743*t3793);
float t3795 = (t3731+t3794);
float t3796 = (-float(1.5));
float t3797 = (t3796*t180);
float t3798 = (t3797*t3691);
float t3799 = pow(t3710,float(2.5));
float t3800 = (t3798/t3799);
float t3801 = (t3800*float(0.16));
float t3802 = (t3689+t3801);
float t3803 = (t3802*float(0.16));
float t3804 = (t3691+t3803);
float t3805 = (t3804*t3804);
float t3806 = (t3797*t3698);
float t3807 = (t3806/t3799);
float t3808 = (t3807*float(0.16));
float t3809 = (t3696+t3808);
float t3810 = (t3809*float(0.16));
float t3811 = (t3698+t3810);
float t3812 = (t3811*t3811);
float t3813 = (t3805+t3812);
float t3814 = (t3797*t3706);
float t3815 = (t3814/t3799);
float t3816 = (t3815*float(0.16));
float t3817 = (t3704+t3816);
float t3818 = (t3817*float(0.16));
float t3819 = (t3706+t3818);
float t3820 = (t3819*t3819);
float t3821 = (t3813+t3820);
float t3822 = sqrt(t3821);
float t3823 = (t3822*t3822);
bool t3824 = (t3823<1);
float t3825 = (t3691*t3691);
float t3826 = (t3698*t3698);
float t3827 = (t3825+t3826);
float t3828 = (t3706*t3706);
float t3829 = (t3827+t3828);
float t3830 = sqrt(t3829);
float t3831 = (t3830*t3830);
bool t3832 = (t3831>1);
bool t3833 = (t3824&&t3832);
float t3834;
float t3835;
float t3836;
float t3837;
if(t3833){
t3834 = 0;
t3835 = 0;
t3836 = 0;
t3837 = 1;
} else {
t3834 = 0;
t3835 = 0;
t3836 = 0;
t3837 = 0;
}
float t3838 = (1-t3791);
float t3839 = (t3746*t3838);
float t3840 = (t3791+t3839);
float t3841 = (1-t3840);
float t3842 = (t3837*t3841);
float t3843 = (t3834*t3842);
float t3844 = (t3795+t3843);
bool t3845 = (t3698>0);
bool t3846 = (t3811>0);
bool t3847 = (!t3846);
bool t3848 = (t3845&&t3847);
bool t3849 = (!t3845);
bool t3850 = (t3846&&t3849);
bool t3851 = (t3848||t3850);
bool t3852 = (t3823<196);
bool t3853 = (t3823>float(6.76));
bool t3854 = (t3852&&t3853);
bool t3855 = (t3851&&t3854);
float t3856;
float t3857;
float t3858;
float t3859;
if(t3855){
float t3860 = (t3811/t3809);
float t3861 = (-t3860);
float t3862 = (t3802*t3861);
float t3863 = (t3804+t3862);
float t3864 = atan(t3863,t3819);
float t3865 = (u1.u0/30);
float t3866 = (t3864+t3865);
float t3867 = (2*3.1415927);
float t3868 = (t3866+t3867);
float t3869 = mod(t3868,2);
float t3870 = (t3869*3.1415927);
float t3871 = (2*3.1415927);
float t3872 = (t3870/t3871);
float t3873 = (t3863*t3863);
float t3874 = (t3809*t3861);
float t3875 = (t3811+t3874);
float t3876 = (t3875*t3875);
float t3877 = (t3873+t3876);
float t3878 = (t3817*t3861);
float t3879 = (t3819+t3878);
float t3880 = (t3879*t3879);
float t3881 = (t3877+t3880);
float t3882 = sqrt(t3881);
float t3883 = (t3882*t3882);
float t3884 = sqrt(t3883);
float t3885 = (t3884-float(2.6));
float t3886 = (t3885/float(11.4));
vec4 t3887 = texture(s4,vec2(t3872,t3886));
t3856 = t3887.x;
t3857 = t3887.y;
t3858 = t3887.z;
float t3888;
if(t3855){
t3888 = 1;
} else {
t3888 = 0;
}
float t3889 = (t3887.x*t3887.x);
float t3890 = (t3887.y*t3887.y);
float t3891 = (t3889+t3890);
float t3892 = (t3887.z*t3887.z);
float t3893 = (t3891+t3892);
float t3894 = sqrt(t3893);
float t3895 = (t3894*t3894);
float t3896 = (t3895/float(3.0));
bool t3897 = (t3896<=1);
float t3898;
if(t3897){
t3898 = t3896;
} else {
t3898 = 1;
}
bool t3899 = (t3898>=0);
float t3900;
if(t3899){
t3900 = t3898;
} else {
t3900 = 0;
}
float t3901 = (t3888*t3900);
t3859 = t3901;
} else {
t3856 = 0;
t3857 = 0;
t3858 = 0;
t3859 = 0;
}
float t3902 = (1-t3840);
float t3903 = (t3837*t3902);
float t3904 = (t3840+t3903);
float t3905 = (1-t3904);
float t3906 = (t3859*t3905);
float t3907 = (t3856*t3906);
float t3908 = (t3844+t3907);
float t3909 = (-float(1.5));
float t3910 = (t3909*t180);
float t3911 = (t3910*t3804);
float t3912 = pow(t3823,float(2.5));
float t3913 = (t3911/t3912);
float t3914 = (t3913*float(0.16));
float t3915 = (t3802+t3914);
float t3916 = (t3915*float(0.16));
float t3917 = (t3804+t3916);
float t3918 = (t3917*t3917);
float t3919 = (t3910*t3811);
float t3920 = (t3919/t3912);
float t3921 = (t3920*float(0.16));
float t3922 = (t3809+t3921);
float t3923 = (t3922*float(0.16));
float t3924 = (t3811+t3923);
float t3925 = (t3924*t3924);
float t3926 = (t3918+t3925);
float t3927 = (t3910*t3819);
float t3928 = (t3927/t3912);
float t3929 = (t3928*float(0.16));
float t3930 = (t3817+t3929);
float t3931 = (t3930*float(0.16));
float t3932 = (t3819+t3931);
float t3933 = (t3932*t3932);
float t3934 = (t3926+t3933);
float t3935 = sqrt(t3934);
float t3936 = (t3935*t3935);
bool t3937 = (t3936<1);
float t3938 = (t3804*t3804);
float t3939 = (t3811*t3811);
float t3940 = (t3938+t3939);
float t3941 = (t3819*t3819);
float t3942 = (t3940+t3941);
float t3943 = sqrt(t3942);
float t3944 = (t3943*t3943);
bool t3945 = (t3944>1);
bool t3946 = (t3937&&t3945);
float t3947;
float t3948;
float t3949;
float t3950;
if(t3946){
t3947 = 0;
t3948 = 0;
t3949 = 0;
t3950 = 1;
} else {
t3947 = 0;
t3948 = 0;
t3949 = 0;
t3950 = 0;
}
float t3951 = (1-t3904);
float t3952 = (t3859*t3951);
float t3953 = (t3904+t3952);
float t3954 = (1-t3953);
float t3955 = (t3950*t3954);
float t3956 = (t3947*t3955);
float t3957 = (t3908+t3956);
bool t3958 = (t3811>0);
bool t3959 = (t3924>0);
bool t3960 = (!t3959);
bool t3961 = (t3958&&t3960);
bool t3962 = (!t3958);
bool t3963 = (t3959&&t3962);
bool t3964 = (t3961||t3963);
bool t3965 = (t3936<196);
bool t3966 = (t3936>float(6.76));
bool t3967 = (t3965&&t3966);
bool t3968 = (t3964&&t3967);
float t3969;
float t3970;
float t3971;
float t3972;
if(t3968){
float t3973 = (t3924/t3922);
float t3974 = (-t3973);
float t3975 = (t3915*t3974);
float t3976 = (t3917+t3975);
float t3977 = atan(t3976,t3932);
float t3978 = (u1.u0/30);
float t3979 = (t3977+t3978);
float t3980 = (2*3.1415927);
float t3981 = (t3979+t3980);
float t3982 = mod(t3981,2);
float t3983 = (t3982*3.1415927);
float t3984 = (2*3.1415927);
float t3985 = (t3983/t3984);
float t3986 = (t3976*t3976);
float t3987 = (t3922*t3974);
float t3988 = (t3924+t3987);
float t3989 = (t3988*t3988);
float t3990 = (t3986+t3989);
float t3991 = (t3930*t3974);
float t3992 = (t3932+t3991);
float t3993 = (t3992*t3992);
float t3994 = (t3990+t3993);
float t3995 = sqrt(t3994);
float t3996 = (t3995*t3995);
float t3997 = sqrt(t3996);
float t3998 = (t3997-float(2.6));
float t3999 = (t3998/float(11.4));
vec4 t4000 = texture(s4,vec2(t3985,t3999));
t3969 = t4000.x;
t3970 = t4000.y;
t3971 = t4000.z;
float t4001;
if(t3968){
t4001 = 1;
} else {
t4001 = 0;
}
float t4002 = (t4000.x*t4000.x);
float t4003 = (t4000.y*t4000.y);
float t4004 = (t4002+t4003);
float t4005 = (t4000.z*t4000.z);
float t4006 = (t4004+t4005);
float t4007 = sqrt(t4006);
float t4008 = (t4007*t4007);
float t4009 = (t4008/float(3.0));
bool t4010 = (t4009<=1);
float t4011;
if(t4010){
t4011 = t4009;
} else {
t4011 = 1;
}
bool t4012 = (t4011>=0);
float t4013;
if(t4012){
t4013 = t4011;
} else {
t4013 = 0;
}
float t4014 = (t4001*t4013);
t3972 = t4014;
} else {
t3969 = 0;
t3970 = 0;
t3971 = 0;
t3972 = 0;
}
float t4015 = (1-t3953);
float t4016 = (t3950*t4015);
float t4017 = (t3953+t4016);
float t4018 = (1-t4017);
float t4019 = (t3972*t4018);
float t4020 = (t3969*t4019);
float t4021 = (t3957+t4020);
float t4022 = (-float(1.5));
float t4023 = (t4022*t180);
float t4024 = (t4023*t3917);
float t4025 = pow(t3936,float(2.5));
float t4026 = (t4024/t4025);
float t4027 = (t4026*float(0.16));
float t4028 = (t3915+t4027);
float t4029 = (t4028*float(0.16));
float t4030 = (t3917+t4029);
float t4031 = (t4030*t4030);
float t4032 = (t4023*t3924);
float t4033 = (t4032/t4025);
float t4034 = (t4033*float(0.16));
float t4035 = (t3922+t4034);
float t4036 = (t4035*float(0.16));
float t4037 = (t3924+t4036);
float t4038 = (t4037*t4037);
float t4039 = (t4031+t4038);
float t4040 = (t4023*t3932);
float t4041 = (t4040/t4025);
float t4042 = (t4041*float(0.16));
float t4043 = (t3930+t4042);
float t4044 = (t4043*float(0.16));
float t4045 = (t3932+t4044);
float t4046 = (t4045*t4045);
float t4047 = (t4039+t4046);
float t4048 = sqrt(t4047);
float t4049 = (t4048*t4048);
bool t4050 = (t4049<1);
float t4051 = (t3917*t3917);
float t4052 = (t3924*t3924);
float t4053 = (t4051+t4052);
float t4054 = (t3932*t3932);
float t4055 = (t4053+t4054);
float t4056 = sqrt(t4055);
float t4057 = (t4056*t4056);
bool t4058 = (t4057>1);
bool t4059 = (t4050&&t4058);
float t4060;
float t4061;
float t4062;
float t4063;
if(t4059){
t4060 = 0;
t4061 = 0;
t4062 = 0;
t4063 = 1;
} else {
t4060 = 0;
t4061 = 0;
t4062 = 0;
t4063 = 0;
}
float t4064 = (1-t4017);
float t4065 = (t3972*t4064);
float t4066 = (t4017+t4065);
float t4067 = (1-t4066);
float t4068 = (t4063*t4067);
float t4069 = (t4060*t4068);
float t4070 = (t4021+t4069);
bool t4071 = (t3924>0);
bool t4072 = (t4037>0);
bool t4073 = (!t4072);
bool t4074 = (t4071&&t4073);
bool t4075 = (!t4071);
bool t4076 = (t4072&&t4075);
bool t4077 = (t4074||t4076);
bool t4078 = (t4049<196);
bool t4079 = (t4049>float(6.76));
bool t4080 = (t4078&&t4079);
bool t4081 = (t4077&&t4080);
float t4082;
float t4083;
float t4084;
float t4085;
if(t4081){
float t4086 = (t4037/t4035);
float t4087 = (-t4086);
float t4088 = (t4028*t4087);
float t4089 = (t4030+t4088);
float t4090 = atan(t4089,t4045);
float t4091 = (u1.u0/30);
float t4092 = (t4090+t4091);
float t4093 = (2*3.1415927);
float t4094 = (t4092+t4093);
float t4095 = mod(t4094,2);
float t4096 = (t4095*3.1415927);
float t4097 = (2*3.1415927);
float t4098 = (t4096/t4097);
float t4099 = (t4089*t4089);
float t4100 = (t4035*t4087);
float t4101 = (t4037+t4100);
float t4102 = (t4101*t4101);
float t4103 = (t4099+t4102);
float t4104 = (t4043*t4087);
float t4105 = (t4045+t4104);
float t4106 = (t4105*t4105);
float t4107 = (t4103+t4106);
float t4108 = sqrt(t4107);
float t4109 = (t4108*t4108);
float t4110 = sqrt(t4109);
float t4111 = (t4110-float(2.6));
float t4112 = (t4111/float(11.4));
vec4 t4113 = texture(s4,vec2(t4098,t4112));
t4082 = t4113.x;
t4083 = t4113.y;
t4084 = t4113.z;
float t4114;
if(t4081){
t4114 = 1;
} else {
t4114 = 0;
}
float t4115 = (t4113.x*t4113.x);
float t4116 = (t4113.y*t4113.y);
float t4117 = (t4115+t4116);
float t4118 = (t4113.z*t4113.z);
float t4119 = (t4117+t4118);
float t4120 = sqrt(t4119);
float t4121 = (t4120*t4120);
float t4122 = (t4121/float(3.0));
bool t4123 = (t4122<=1);
float t4124;
if(t4123){
t4124 = t4122;
} else {
t4124 = 1;
}
bool t4125 = (t4124>=0);
float t4126;
if(t4125){
t4126 = t4124;
} else {
t4126 = 0;
}
float t4127 = (t4114*t4126);
t4085 = t4127;
} else {
t4082 = 0;
t4083 = 0;
t4084 = 0;
t4085 = 0;
}
float t4128 = (1-t4066);
float t4129 = (t4063*t4128);
float t4130 = (t4066+t4129);
float t4131 = (1-t4130);
float t4132 = (t4085*t4131);
float t4133 = (t4082*t4132);
float t4134 = (t4070+t4133);
float t4135 = (-float(1.5));
float t4136 = (t4135*t180);
float t4137 = (t4136*t4030);
float t4138 = pow(t4049,float(2.5));
float t4139 = (t4137/t4138);
float t4140 = (t4139*float(0.16));
float t4141 = (t4028+t4140);
float t4142 = (t4141*float(0.16));
float t4143 = (t4030+t4142);
float t4144 = (t4143*t4143);
float t4145 = (t4136*t4037);
float t4146 = (t4145/t4138);
float t4147 = (t4146*float(0.16));
float t4148 = (t4035+t4147);
float t4149 = (t4148*float(0.16));
float t4150 = (t4037+t4149);
float t4151 = (t4150*t4150);
float t4152 = (t4144+t4151);
float t4153 = (t4136*t4045);
float t4154 = (t4153/t4138);
float t4155 = (t4154*float(0.16));
float t4156 = (t4043+t4155);
float t4157 = (t4156*float(0.16));
float t4158 = (t4045+t4157);
float t4159 = (t4158*t4158);
float t4160 = (t4152+t4159);
float t4161 = sqrt(t4160);
float t4162 = (t4161*t4161);
bool t4163 = (t4162<1);
float t4164 = (t4030*t4030);
float t4165 = (t4037*t4037);
float t4166 = (t4164+t4165);
float t4167 = (t4045*t4045);
float t4168 = (t4166+t4167);
float t4169 = sqrt(t4168);
float t4170 = (t4169*t4169);
bool t4171 = (t4170>1);
bool t4172 = (t4163&&t4171);
float t4173;
float t4174;
float t4175;
float t4176;
if(t4172){
t4173 = 0;
t4174 = 0;
t4175 = 0;
t4176 = 1;
} else {
t4173 = 0;
t4174 = 0;
t4175 = 0;
t4176 = 0;
}
float t4177 = (1-t4130);
float t4178 = (t4085*t4177);
float t4179 = (t4130+t4178);
float t4180 = (1-t4179);
float t4181 = (t4176*t4180);
float t4182 = (t4173*t4181);
float t4183 = (t4134+t4182);
bool t4184 = (t4037>0);
bool t4185 = (t4150>0);
bool t4186 = (!t4185);
bool t4187 = (t4184&&t4186);
bool t4188 = (!t4184);
bool t4189 = (t4185&&t4188);
bool t4190 = (t4187||t4189);
bool t4191 = (t4162<196);
bool t4192 = (t4162>float(6.76));
bool t4193 = (t4191&&t4192);
bool t4194 = (t4190&&t4193);
float t4195;
float t4196;
float t4197;
float t4198;
if(t4194){
float t4199 = (t4150/t4148);
float t4200 = (-t4199);
float t4201 = (t4141*t4200);
float t4202 = (t4143+t4201);
float t4203 = atan(t4202,t4158);
float t4204 = (u1.u0/30);
float t4205 = (t4203+t4204);
float t4206 = (2*3.1415927);
float t4207 = (t4205+t4206);
float t4208 = mod(t4207,2);
float t4209 = (t4208*3.1415927);
float t4210 = (2*3.1415927);
float t4211 = (t4209/t4210);
float t4212 = (t4202*t4202);
float t4213 = (t4148*t4200);
float t4214 = (t4150+t4213);
float t4215 = (t4214*t4214);
float t4216 = (t4212+t4215);
float t4217 = (t4156*t4200);
float t4218 = (t4158+t4217);
float t4219 = (t4218*t4218);
float t4220 = (t4216+t4219);
float t4221 = sqrt(t4220);
float t4222 = (t4221*t4221);
float t4223 = sqrt(t4222);
float t4224 = (t4223-float(2.6));
float t4225 = (t4224/float(11.4));
vec4 t4226 = texture(s4,vec2(t4211,t4225));
t4195 = t4226.x;
t4196 = t4226.y;
t4197 = t4226.z;
float t4227;
if(t4194){
t4227 = 1;
} else {
t4227 = 0;
}
float t4228 = (t4226.x*t4226.x);
float t4229 = (t4226.y*t4226.y);
float t4230 = (t4228+t4229);
float t4231 = (t4226.z*t4226.z);
float t4232 = (t4230+t4231);
float t4233 = sqrt(t4232);
float t4234 = (t4233*t4233);
float t4235 = (t4234/float(3.0));
bool t4236 = (t4235<=1);
float t4237;
if(t4236){
t4237 = t4235;
} else {
t4237 = 1;
}
bool t4238 = (t4237>=0);
float t4239;
if(t4238){
t4239 = t4237;
} else {
t4239 = 0;
}
float t4240 = (t4227*t4239);
t4198 = t4240;
} else {
t4195 = 0;
t4196 = 0;
t4197 = 0;
t4198 = 0;
}
float t4241 = (1-t4179);
float t4242 = (t4176*t4241);
float t4243 = (t4179+t4242);
float t4244 = (1-t4243);
float t4245 = (t4198*t4244);
float t4246 = (t4195*t4245);
float t4247 = (t4183+t4246);
float t4248 = (-float(1.5));
float t4249 = (t4248*t180);
float t4250 = (t4249*t4143);
float t4251 = pow(t4162,float(2.5));
float t4252 = (t4250/t4251);
float t4253 = (t4252*float(0.16));
float t4254 = (t4141+t4253);
float t4255 = (t4254*float(0.16));
float t4256 = (t4143+t4255);
float t4257 = (t4256*t4256);
float t4258 = (t4249*t4150);
float t4259 = (t4258/t4251);
float t4260 = (t4259*float(0.16));
float t4261 = (t4148+t4260);
float t4262 = (t4261*float(0.16));
float t4263 = (t4150+t4262);
float t4264 = (t4263*t4263);
float t4265 = (t4257+t4264);
float t4266 = (t4249*t4158);
float t4267 = (t4266/t4251);
float t4268 = (t4267*float(0.16));
float t4269 = (t4156+t4268);
float t4270 = (t4269*float(0.16));
float t4271 = (t4158+t4270);
float t4272 = (t4271*t4271);
float t4273 = (t4265+t4272);
float t4274 = sqrt(t4273);
float t4275 = (t4274*t4274);
bool t4276 = (t4275<1);
float t4277 = (t4143*t4143);
float t4278 = (t4150*t4150);
float t4279 = (t4277+t4278);
float t4280 = (t4158*t4158);
float t4281 = (t4279+t4280);
float t4282 = sqrt(t4281);
float t4283 = (t4282*t4282);
bool t4284 = (t4283>1);
bool t4285 = (t4276&&t4284);
float t4286;
float t4287;
float t4288;
float t4289;
if(t4285){
t4286 = 0;
t4287 = 0;
t4288 = 0;
t4289 = 1;
} else {
t4286 = 0;
t4287 = 0;
t4288 = 0;
t4289 = 0;
}
float t4290 = (1-t4243);
float t4291 = (t4198*t4290);
float t4292 = (t4243+t4291);
float t4293 = (1-t4292);
float t4294 = (t4289*t4293);
float t4295 = (t4286*t4294);
float t4296 = (t4247+t4295);
bool t4297 = (t4150>0);
bool t4298 = (t4263>0);
bool t4299 = (!t4298);
bool t4300 = (t4297&&t4299);
bool t4301 = (!t4297);
bool t4302 = (t4298&&t4301);
bool t4303 = (t4300||t4302);
bool t4304 = (t4275<196);
bool t4305 = (t4275>float(6.76));
bool t4306 = (t4304&&t4305);
bool t4307 = (t4303&&t4306);
float t4308;
float t4309;
float t4310;
float t4311;
if(t4307){
float t4312 = (t4263/t4261);
float t4313 = (-t4312);
float t4314 = (t4254*t4313);
float t4315 = (t4256+t4314);
float t4316 = atan(t4315,t4271);
float t4317 = (u1.u0/30);
float t4318 = (t4316+t4317);
float t4319 = (2*3.1415927);
float t4320 = (t4318+t4319);
float t4321 = mod(t4320,2);
float t4322 = (t4321*3.1415927);
float t4323 = (2*3.1415927);
float t4324 = (t4322/t4323);
float t4325 = (t4315*t4315);
float t4326 = (t4261*t4313);
float t4327 = (t4263+t4326);
float t4328 = (t4327*t4327);
float t4329 = (t4325+t4328);
float t4330 = (t4269*t4313);
float t4331 = (t4271+t4330);
float t4332 = (t4331*t4331);
float t4333 = (t4329+t4332);
float t4334 = sqrt(t4333);
float t4335 = (t4334*t4334);
float t4336 = sqrt(t4335);
float t4337 = (t4336-float(2.6));
float t4338 = (t4337/float(11.4));
vec4 t4339 = texture(s4,vec2(t4324,t4338));
t4308 = t4339.x;
t4309 = t4339.y;
t4310 = t4339.z;
float t4340;
if(t4307){
t4340 = 1;
} else {
t4340 = 0;
}
float t4341 = (t4339.x*t4339.x);
float t4342 = (t4339.y*t4339.y);
float t4343 = (t4341+t4342);
float t4344 = (t4339.z*t4339.z);
float t4345 = (t4343+t4344);
float t4346 = sqrt(t4345);
float t4347 = (t4346*t4346);
float t4348 = (t4347/float(3.0));
bool t4349 = (t4348<=1);
float t4350;
if(t4349){
t4350 = t4348;
} else {
t4350 = 1;
}
bool t4351 = (t4350>=0);
float t4352;
if(t4351){
t4352 = t4350;
} else {
t4352 = 0;
}
float t4353 = (t4340*t4352);
t4311 = t4353;
} else {
t4308 = 0;
t4309 = 0;
t4310 = 0;
t4311 = 0;
}
float t4354 = (1-t4292);
float t4355 = (t4289*t4354);
float t4356 = (t4292+t4355);
float t4357 = (1-t4356);
float t4358 = (t4311*t4357);
float t4359 = (t4308*t4358);
float t4360 = (t4296+t4359);
float t4361 = (-float(1.5));
float t4362 = (t4361*t180);
float t4363 = (t4362*t4256);
float t4364 = pow(t4275,float(2.5));
float t4365 = (t4363/t4364);
float t4366 = (t4365*float(0.16));
float t4367 = (t4254+t4366);
float t4368 = (t4367*float(0.16));
float t4369 = (t4256+t4368);
float t4370 = (t4369*t4369);
float t4371 = (t4362*t4263);
float t4372 = (t4371/t4364);
float t4373 = (t4372*float(0.16));
float t4374 = (t4261+t4373);
float t4375 = (t4374*float(0.16));
float t4376 = (t4263+t4375);
float t4377 = (t4376*t4376);
float t4378 = (t4370+t4377);
float t4379 = (t4362*t4271);
float t4380 = (t4379/t4364);
float t4381 = (t4380*float(0.16));
float t4382 = (t4269+t4381);
float t4383 = (t4382*float(0.16));
float t4384 = (t4271+t4383);
float t4385 = (t4384*t4384);
float t4386 = (t4378+t4385);
float t4387 = sqrt(t4386);
float t4388 = (t4387*t4387);
bool t4389 = (t4388<1);
float t4390 = (t4256*t4256);
float t4391 = (t4263*t4263);
float t4392 = (t4390+t4391);
float t4393 = (t4271*t4271);
float t4394 = (t4392+t4393);
float t4395 = sqrt(t4394);
float t4396 = (t4395*t4395);
bool t4397 = (t4396>1);
bool t4398 = (t4389&&t4397);
float t4399;
float t4400;
float t4401;
float t4402;
if(t4398){
t4399 = 0;
t4400 = 0;
t4401 = 0;
t4402 = 1;
} else {
t4399 = 0;
t4400 = 0;
t4401 = 0;
t4402 = 0;
}
float t4403 = (1-t4356);
float t4404 = (t4311*t4403);
float t4405 = (t4356+t4404);
float t4406 = (1-t4405);
float t4407 = (t4402*t4406);
float t4408 = (t4399*t4407);
float t4409 = (t4360+t4408);
bool t4410 = (t4263>0);
bool t4411 = (t4376>0);
bool t4412 = (!t4411);
bool t4413 = (t4410&&t4412);
bool t4414 = (!t4410);
bool t4415 = (t4411&&t4414);
bool t4416 = (t4413||t4415);
bool t4417 = (t4388<196);
bool t4418 = (t4388>float(6.76));
bool t4419 = (t4417&&t4418);
bool t4420 = (t4416&&t4419);
float t4421;
float t4422;
float t4423;
float t4424;
if(t4420){
float t4425 = (t4376/t4374);
float t4426 = (-t4425);
float t4427 = (t4367*t4426);
float t4428 = (t4369+t4427);
float t4429 = atan(t4428,t4384);
float t4430 = (u1.u0/30);
float t4431 = (t4429+t4430);
float t4432 = (2*3.1415927);
float t4433 = (t4431+t4432);
float t4434 = mod(t4433,2);
float t4435 = (t4434*3.1415927);
float t4436 = (2*3.1415927);
float t4437 = (t4435/t4436);
float t4438 = (t4428*t4428);
float t4439 = (t4374*t4426);
float t4440 = (t4376+t4439);
float t4441 = (t4440*t4440);
float t4442 = (t4438+t4441);
float t4443 = (t4382*t4426);
float t4444 = (t4384+t4443);
float t4445 = (t4444*t4444);
float t4446 = (t4442+t4445);
float t4447 = sqrt(t4446);
float t4448 = (t4447*t4447);
float t4449 = sqrt(t4448);
float t4450 = (t4449-float(2.6));
float t4451 = (t4450/float(11.4));
vec4 t4452 = texture(s4,vec2(t4437,t4451));
t4421 = t4452.x;
t4422 = t4452.y;
t4423 = t4452.z;
float t4453;
if(t4420){
t4453 = 1;
} else {
t4453 = 0;
}
float t4454 = (t4452.x*t4452.x);
float t4455 = (t4452.y*t4452.y);
float t4456 = (t4454+t4455);
float t4457 = (t4452.z*t4452.z);
float t4458 = (t4456+t4457);
float t4459 = sqrt(t4458);
float t4460 = (t4459*t4459);
float t4461 = (t4460/float(3.0));
bool t4462 = (t4461<=1);
float t4463;
if(t4462){
t4463 = t4461;
} else {
t4463 = 1;
}
bool t4464 = (t4463>=0);
float t4465;
if(t4464){
t4465 = t4463;
} else {
t4465 = 0;
}
float t4466 = (t4453*t4465);
t4424 = t4466;
} else {
t4421 = 0;
t4422 = 0;
t4423 = 0;
t4424 = 0;
}
float t4467 = (1-t4405);
float t4468 = (t4402*t4467);
float t4469 = (t4405+t4468);
float t4470 = (1-t4469);
float t4471 = (t4424*t4470);
float t4472 = (t4421*t4471);
float t4473 = (t4409+t4472);
float t4474 = (-float(1.5));
float t4475 = (t4474*t180);
float t4476 = (t4475*t4369);
float t4477 = pow(t4388,float(2.5));
float t4478 = (t4476/t4477);
float t4479 = (t4478*float(0.16));
float t4480 = (t4367+t4479);
float t4481 = (t4480*float(0.16));
float t4482 = (t4369+t4481);
float t4483 = (t4482*t4482);
float t4484 = (t4475*t4376);
float t4485 = (t4484/t4477);
float t4486 = (t4485*float(0.16));
float t4487 = (t4374+t4486);
float t4488 = (t4487*float(0.16));
float t4489 = (t4376+t4488);
float t4490 = (t4489*t4489);
float t4491 = (t4483+t4490);
float t4492 = (t4475*t4384);
float t4493 = (t4492/t4477);
float t4494 = (t4493*float(0.16));
float t4495 = (t4382+t4494);
float t4496 = (t4495*float(0.16));
float t4497 = (t4384+t4496);
float t4498 = (t4497*t4497);
float t4499 = (t4491+t4498);
float t4500 = sqrt(t4499);
float t4501 = (t4500*t4500);
bool t4502 = (t4501<1);
float t4503 = (t4369*t4369);
float t4504 = (t4376*t4376);
float t4505 = (t4503+t4504);
float t4506 = (t4384*t4384);
float t4507 = (t4505+t4506);
float t4508 = sqrt(t4507);
float t4509 = (t4508*t4508);
bool t4510 = (t4509>1);
bool t4511 = (t4502&&t4510);
float t4512;
float t4513;
float t4514;
float t4515;
if(t4511){
t4512 = 0;
t4513 = 0;
t4514 = 0;
t4515 = 1;
} else {
t4512 = 0;
t4513 = 0;
t4514 = 0;
t4515 = 0;
}
float t4516 = (1-t4469);
float t4517 = (t4424*t4516);
float t4518 = (t4469+t4517);
float t4519 = (1-t4518);
float t4520 = (t4515*t4519);
float t4521 = (t4512*t4520);
float t4522 = (t4473+t4521);
bool t4523 = (t4376>0);
bool t4524 = (t4489>0);
bool t4525 = (!t4524);
bool t4526 = (t4523&&t4525);
bool t4527 = (!t4523);
bool t4528 = (t4524&&t4527);
bool t4529 = (t4526||t4528);
bool t4530 = (t4501<196);
bool t4531 = (t4501>float(6.76));
bool t4532 = (t4530&&t4531);
bool t4533 = (t4529&&t4532);
float t4534;
float t4535;
float t4536;
float t4537;
if(t4533){
float t4538 = (t4489/t4487);
float t4539 = (-t4538);
float t4540 = (t4480*t4539);
float t4541 = (t4482+t4540);
float t4542 = atan(t4541,t4497);
float t4543 = (u1.u0/30);
float t4544 = (t4542+t4543);
float t4545 = (2*3.1415927);
float t4546 = (t4544+t4545);
float t4547 = mod(t4546,2);
float t4548 = (t4547*3.1415927);
float t4549 = (2*3.1415927);
float t4550 = (t4548/t4549);
float t4551 = (t4541*t4541);
float t4552 = (t4487*t4539);
float t4553 = (t4489+t4552);
float t4554 = (t4553*t4553);
float t4555 = (t4551+t4554);
float t4556 = (t4495*t4539);
float t4557 = (t4497+t4556);
float t4558 = (t4557*t4557);
float t4559 = (t4555+t4558);
float t4560 = sqrt(t4559);
float t4561 = (t4560*t4560);
float t4562 = sqrt(t4561);
float t4563 = (t4562-float(2.6));
float t4564 = (t4563/float(11.4));
vec4 t4565 = texture(s4,vec2(t4550,t4564));
t4534 = t4565.x;
t4535 = t4565.y;
t4536 = t4565.z;
float t4566;
if(t4533){
t4566 = 1;
} else {
t4566 = 0;
}
float t4567 = (t4565.x*t4565.x);
float t4568 = (t4565.y*t4565.y);
float t4569 = (t4567+t4568);
float t4570 = (t4565.z*t4565.z);
float t4571 = (t4569+t4570);
float t4572 = sqrt(t4571);
float t4573 = (t4572*t4572);
float t4574 = (t4573/float(3.0));
bool t4575 = (t4574<=1);
float t4576;
if(t4575){
t4576 = t4574;
} else {
t4576 = 1;
}
bool t4577 = (t4576>=0);
float t4578;
if(t4577){
t4578 = t4576;
} else {
t4578 = 0;
}
float t4579 = (t4566*t4578);
t4537 = t4579;
} else {
t4534 = 0;
t4535 = 0;
t4536 = 0;
t4537 = 0;
}
float t4580 = (1-t4518);
float t4581 = (t4515*t4580);
float t4582 = (t4518+t4581);
float t4583 = (1-t4582);
float t4584 = (t4537*t4583);
float t4585 = (t4534*t4584);
float t4586 = (t4522+t4585);
float t4587 = (-float(1.5));
float t4588 = (t4587*t180);
float t4589 = (t4588*t4482);
float t4590 = pow(t4501,float(2.5));
float t4591 = (t4589/t4590);
float t4592 = (t4591*float(0.16));
float t4593 = (t4480+t4592);
float t4594 = (t4593*float(0.16));
float t4595 = (t4482+t4594);
float t4596 = (t4595*t4595);
float t4597 = (t4588*t4489);
float t4598 = (t4597/t4590);
float t4599 = (t4598*float(0.16));
float t4600 = (t4487+t4599);
float t4601 = (t4600*float(0.16));
float t4602 = (t4489+t4601);
float t4603 = (t4602*t4602);
float t4604 = (t4596+t4603);
float t4605 = (t4588*t4497);
float t4606 = (t4605/t4590);
float t4607 = (t4606*float(0.16));
float t4608 = (t4495+t4607);
float t4609 = (t4608*float(0.16));
float t4610 = (t4497+t4609);
float t4611 = (t4610*t4610);
float t4612 = (t4604+t4611);
float t4613 = sqrt(t4612);
float t4614 = (t4613*t4613);
bool t4615 = (t4614<1);
float t4616 = (t4482*t4482);
float t4617 = (t4489*t4489);
float t4618 = (t4616+t4617);
float t4619 = (t4497*t4497);
float t4620 = (t4618+t4619);
float t4621 = sqrt(t4620);
float t4622 = (t4621*t4621);
bool t4623 = (t4622>1);
bool t4624 = (t4615&&t4623);
float t4625;
float t4626;
float t4627;
float t4628;
if(t4624){
t4625 = 0;
t4626 = 0;
t4627 = 0;
t4628 = 1;
} else {
t4625 = 0;
t4626 = 0;
t4627 = 0;
t4628 = 0;
}
float t4629 = (1-t4582);
float t4630 = (t4537*t4629);
float t4631 = (t4582+t4630);
float t4632 = (1-t4631);
float t4633 = (t4628*t4632);
float t4634 = (t4625*t4633);
float t4635 = (t4586+t4634);
bool t4636 = (t4489>0);
bool t4637 = (t4602>0);
bool t4638 = (!t4637);
bool t4639 = (t4636&&t4638);
bool t4640 = (!t4636);
bool t4641 = (t4637&&t4640);
bool t4642 = (t4639||t4641);
bool t4643 = (t4614<196);
bool t4644 = (t4614>float(6.76));
bool t4645 = (t4643&&t4644);
bool t4646 = (t4642&&t4645);
float t4647;
float t4648;
float t4649;
float t4650;
if(t4646){
float t4651 = (t4602/t4600);
float t4652 = (-t4651);
float t4653 = (t4593*t4652);
float t4654 = (t4595+t4653);
float t4655 = atan(t4654,t4610);
float t4656 = (u1.u0/30);
float t4657 = (t4655+t4656);
float t4658 = (2*3.1415927);
float t4659 = (t4657+t4658);
float t4660 = mod(t4659,2);
float t4661 = (t4660*3.1415927);
float t4662 = (2*3.1415927);
float t4663 = (t4661/t4662);
float t4664 = (t4654*t4654);
float t4665 = (t4600*t4652);
float t4666 = (t4602+t4665);
float t4667 = (t4666*t4666);
float t4668 = (t4664+t4667);
float t4669 = (t4608*t4652);
float t4670 = (t4610+t4669);
float t4671 = (t4670*t4670);
float t4672 = (t4668+t4671);
float t4673 = sqrt(t4672);
float t4674 = (t4673*t4673);
float t4675 = sqrt(t4674);
float t4676 = (t4675-float(2.6));
float t4677 = (t4676/float(11.4));
vec4 t4678 = texture(s4,vec2(t4663,t4677));
t4647 = t4678.x;
t4648 = t4678.y;
t4649 = t4678.z;
float t4679;
if(t4646){
t4679 = 1;
} else {
t4679 = 0;
}
float t4680 = (t4678.x*t4678.x);
float t4681 = (t4678.y*t4678.y);
float t4682 = (t4680+t4681);
float t4683 = (t4678.z*t4678.z);
float t4684 = (t4682+t4683);
float t4685 = sqrt(t4684);
float t4686 = (t4685*t4685);
float t4687 = (t4686/float(3.0));
bool t4688 = (t4687<=1);
float t4689;
if(t4688){
t4689 = t4687;
} else {
t4689 = 1;
}
bool t4690 = (t4689>=0);
float t4691;
if(t4690){
t4691 = t4689;
} else {
t4691 = 0;
}
float t4692 = (t4679*t4691);
t4650 = t4692;
} else {
t4647 = 0;
t4648 = 0;
t4649 = 0;
t4650 = 0;
}
float t4693 = (1-t4631);
float t4694 = (t4628*t4693);
float t4695 = (t4631+t4694);
float t4696 = (1-t4695);
float t4697 = (t4650*t4696);
float t4698 = (t4647*t4697);
float t4699 = (t4635+t4698);
float t4700 = (-float(1.5));
float t4701 = (t4700*t180);
float t4702 = (t4701*t4595);
float t4703 = pow(t4614,float(2.5));
float t4704 = (t4702/t4703);
float t4705 = (t4704*float(0.16));
float t4706 = (t4593+t4705);
float t4707 = (t4706*float(0.16));
float t4708 = (t4595+t4707);
float t4709 = (t4708*t4708);
float t4710 = (t4701*t4602);
float t4711 = (t4710/t4703);
float t4712 = (t4711*float(0.16));
float t4713 = (t4600+t4712);
float t4714 = (t4713*float(0.16));
float t4715 = (t4602+t4714);
float t4716 = (t4715*t4715);
float t4717 = (t4709+t4716);
float t4718 = (t4701*t4610);
float t4719 = (t4718/t4703);
float t4720 = (t4719*float(0.16));
float t4721 = (t4608+t4720);
float t4722 = (t4721*float(0.16));
float t4723 = (t4610+t4722);
float t4724 = (t4723*t4723);
float t4725 = (t4717+t4724);
float t4726 = sqrt(t4725);
float t4727 = (t4726*t4726);
bool t4728 = (t4727<1);
float t4729 = (t4595*t4595);
float t4730 = (t4602*t4602);
float t4731 = (t4729+t4730);
float t4732 = (t4610*t4610);
float t4733 = (t4731+t4732);
float t4734 = sqrt(t4733);
float t4735 = (t4734*t4734);
bool t4736 = (t4735>1);
bool t4737 = (t4728&&t4736);
float t4738;
float t4739;
float t4740;
float t4741;
if(t4737){
t4738 = 0;
t4739 = 0;
t4740 = 0;
t4741 = 1;
} else {
t4738 = 0;
t4739 = 0;
t4740 = 0;
t4741 = 0;
}
float t4742 = (1-t4695);
float t4743 = (t4650*t4742);
float t4744 = (t4695+t4743);
float t4745 = (1-t4744);
float t4746 = (t4741*t4745);
float t4747 = (t4738*t4746);
float t4748 = (t4699+t4747);
bool t4749 = (t4602>0);
bool t4750 = (t4715>0);
bool t4751 = (!t4750);
bool t4752 = (t4749&&t4751);
bool t4753 = (!t4749);
bool t4754 = (t4750&&t4753);
bool t4755 = (t4752||t4754);
bool t4756 = (t4727<196);
bool t4757 = (t4727>float(6.76));
bool t4758 = (t4756&&t4757);
bool t4759 = (t4755&&t4758);
float t4760;
float t4761;
float t4762;
float t4763;
if(t4759){
float t4764 = (t4715/t4713);
float t4765 = (-t4764);
float t4766 = (t4706*t4765);
float t4767 = (t4708+t4766);
float t4768 = atan(t4767,t4723);
float t4769 = (u1.u0/30);
float t4770 = (t4768+t4769);
float t4771 = (2*3.1415927);
float t4772 = (t4770+t4771);
float t4773 = mod(t4772,2);
float t4774 = (t4773*3.1415927);
float t4775 = (2*3.1415927);
float t4776 = (t4774/t4775);
float t4777 = (t4767*t4767);
float t4778 = (t4713*t4765);
float t4779 = (t4715+t4778);
float t4780 = (t4779*t4779);
float t4781 = (t4777+t4780);
float t4782 = (t4721*t4765);
float t4783 = (t4723+t4782);
float t4784 = (t4783*t4783);
float t4785 = (t4781+t4784);
float t4786 = sqrt(t4785);
float t4787 = (t4786*t4786);
float t4788 = sqrt(t4787);
float t4789 = (t4788-float(2.6));
float t4790 = (t4789/float(11.4));
vec4 t4791 = texture(s4,vec2(t4776,t4790));
t4760 = t4791.x;
t4761 = t4791.y;
t4762 = t4791.z;
float t4792;
if(t4759){
t4792 = 1;
} else {
t4792 = 0;
}
float t4793 = (t4791.x*t4791.x);
float t4794 = (t4791.y*t4791.y);
float t4795 = (t4793+t4794);
float t4796 = (t4791.z*t4791.z);
float t4797 = (t4795+t4796);
float t4798 = sqrt(t4797);
float t4799 = (t4798*t4798);
float t4800 = (t4799/float(3.0));
bool t4801 = (t4800<=1);
float t4802;
if(t4801){
t4802 = t4800;
} else {
t4802 = 1;
}
bool t4803 = (t4802>=0);
float t4804;
if(t4803){
t4804 = t4802;
} else {
t4804 = 0;
}
float t4805 = (t4792*t4804);
t4763 = t4805;
} else {
t4760 = 0;
t4761 = 0;
t4762 = 0;
t4763 = 0;
}
float t4806 = (1-t4744);
float t4807 = (t4741*t4806);
float t4808 = (t4744+t4807);
float t4809 = (1-t4808);
float t4810 = (t4763*t4809);
float t4811 = (t4760*t4810);
float t4812 = (t4748+t4811);
float t4813 = (-float(1.5));
float t4814 = (t4813*t180);
float t4815 = (t4814*t4708);
float t4816 = pow(t4727,float(2.5));
float t4817 = (t4815/t4816);
float t4818 = (t4817*float(0.16));
float t4819 = (t4706+t4818);
float t4820 = (t4819*float(0.16));
float t4821 = (t4708+t4820);
float t4822 = (t4821*t4821);
float t4823 = (t4814*t4715);
float t4824 = (t4823/t4816);
float t4825 = (t4824*float(0.16));
float t4826 = (t4713+t4825);
float t4827 = (t4826*float(0.16));
float t4828 = (t4715+t4827);
float t4829 = (t4828*t4828);
float t4830 = (t4822+t4829);
float t4831 = (t4814*t4723);
float t4832 = (t4831/t4816);
float t4833 = (t4832*float(0.16));
float t4834 = (t4721+t4833);
float t4835 = (t4834*float(0.16));
float t4836 = (t4723+t4835);
float t4837 = (t4836*t4836);
float t4838 = (t4830+t4837);
float t4839 = sqrt(t4838);
float t4840 = (t4839*t4839);
bool t4841 = (t4840<1);
float t4842 = (t4708*t4708);
float t4843 = (t4715*t4715);
float t4844 = (t4842+t4843);
float t4845 = (t4723*t4723);
float t4846 = (t4844+t4845);
float t4847 = sqrt(t4846);
float t4848 = (t4847*t4847);
bool t4849 = (t4848>1);
bool t4850 = (t4841&&t4849);
float t4851;
float t4852;
float t4853;
float t4854;
if(t4850){
t4851 = 0;
t4852 = 0;
t4853 = 0;
t4854 = 1;
} else {
t4851 = 0;
t4852 = 0;
t4853 = 0;
t4854 = 0;
}
float t4855 = (1-t4808);
float t4856 = (t4763*t4855);
float t4857 = (t4808+t4856);
float t4858 = (1-t4857);
float t4859 = (t4854*t4858);
float t4860 = (t4851*t4859);
float t4861 = (t4812+t4860);
bool t4862 = (t4715>0);
bool t4863 = (t4828>0);
bool t4864 = (!t4863);
bool t4865 = (t4862&&t4864);
bool t4866 = (!t4862);
bool t4867 = (t4863&&t4866);
bool t4868 = (t4865||t4867);
bool t4869 = (t4840<196);
bool t4870 = (t4840>float(6.76));
bool t4871 = (t4869&&t4870);
bool t4872 = (t4868&&t4871);
float t4873;
float t4874;
float t4875;
float t4876;
if(t4872){
float t4877 = (t4828/t4826);
float t4878 = (-t4877);
float t4879 = (t4819*t4878);
float t4880 = (t4821+t4879);
float t4881 = atan(t4880,t4836);
float t4882 = (u1.u0/30);
float t4883 = (t4881+t4882);
float t4884 = (2*3.1415927);
float t4885 = (t4883+t4884);
float t4886 = mod(t4885,2);
float t4887 = (t4886*3.1415927);
float t4888 = (2*3.1415927);
float t4889 = (t4887/t4888);
float t4890 = (t4880*t4880);
float t4891 = (t4826*t4878);
float t4892 = (t4828+t4891);
float t4893 = (t4892*t4892);
float t4894 = (t4890+t4893);
float t4895 = (t4834*t4878);
float t4896 = (t4836+t4895);
float t4897 = (t4896*t4896);
float t4898 = (t4894+t4897);
float t4899 = sqrt(t4898);
float t4900 = (t4899*t4899);
float t4901 = sqrt(t4900);
float t4902 = (t4901-float(2.6));
float t4903 = (t4902/float(11.4));
vec4 t4904 = texture(s4,vec2(t4889,t4903));
t4873 = t4904.x;
t4874 = t4904.y;
t4875 = t4904.z;
float t4905;
if(t4872){
t4905 = 1;
} else {
t4905 = 0;
}
float t4906 = (t4904.x*t4904.x);
float t4907 = (t4904.y*t4904.y);
float t4908 = (t4906+t4907);
float t4909 = (t4904.z*t4904.z);
float t4910 = (t4908+t4909);
float t4911 = sqrt(t4910);
float t4912 = (t4911*t4911);
float t4913 = (t4912/float(3.0));
bool t4914 = (t4913<=1);
float t4915;
if(t4914){
t4915 = t4913;
} else {
t4915 = 1;
}
bool t4916 = (t4915>=0);
float t4917;
if(t4916){
t4917 = t4915;
} else {
t4917 = 0;
}
float t4918 = (t4905*t4917);
t4876 = t4918;
} else {
t4873 = 0;
t4874 = 0;
t4875 = 0;
t4876 = 0;
}
float t4919 = (1-t4857);
float t4920 = (t4854*t4919);
float t4921 = (t4857+t4920);
float t4922 = (1-t4921);
float t4923 = (t4876*t4922);
float t4924 = (t4873*t4923);
float t4925 = (t4861+t4924);
float t4926 = (-float(1.5));
float t4927 = (t4926*t180);
float t4928 = (t4927*t4821);
float t4929 = pow(t4840,float(2.5));
float t4930 = (t4928/t4929);
float t4931 = (t4930*float(0.16));
float t4932 = (t4819+t4931);
float t4933 = (t4932*float(0.16));
float t4934 = (t4821+t4933);
float t4935 = (t4934*t4934);
float t4936 = (t4927*t4828);
float t4937 = (t4936/t4929);
float t4938 = (t4937*float(0.16));
float t4939 = (t4826+t4938);
float t4940 = (t4939*float(0.16));
float t4941 = (t4828+t4940);
float t4942 = (t4941*t4941);
float t4943 = (t4935+t4942);
float t4944 = (t4927*t4836);
float t4945 = (t4944/t4929);
float t4946 = (t4945*float(0.16));
float t4947 = (t4834+t4946);
float t4948 = (t4947*float(0.16));
float t4949 = (t4836+t4948);
float t4950 = (t4949*t4949);
float t4951 = (t4943+t4950);
float t4952 = sqrt(t4951);
float t4953 = (t4952*t4952);
bool t4954 = (t4953<1);
float t4955 = (t4821*t4821);
float t4956 = (t4828*t4828);
float t4957 = (t4955+t4956);
float t4958 = (t4836*t4836);
float t4959 = (t4957+t4958);
float t4960 = sqrt(t4959);
float t4961 = (t4960*t4960);
bool t4962 = (t4961>1);
bool t4963 = (t4954&&t4962);
float t4964;
float t4965;
float t4966;
float t4967;
if(t4963){
t4964 = 0;
t4965 = 0;
t4966 = 0;
t4967 = 1;
} else {
t4964 = 0;
t4965 = 0;
t4966 = 0;
t4967 = 0;
}
float t4968 = (1-t4921);
float t4969 = (t4876*t4968);
float t4970 = (t4921+t4969);
float t4971 = (1-t4970);
float t4972 = (t4967*t4971);
float t4973 = (t4964*t4972);
float t4974 = (t4925+t4973);
bool t4975 = (t4828>0);
bool t4976 = (t4941>0);
bool t4977 = (!t4976);
bool t4978 = (t4975&&t4977);
bool t4979 = (!t4975);
bool t4980 = (t4976&&t4979);
bool t4981 = (t4978||t4980);
bool t4982 = (t4953<196);
bool t4983 = (t4953>float(6.76));
bool t4984 = (t4982&&t4983);
bool t4985 = (t4981&&t4984);
float t4986;
float t4987;
float t4988;
float t4989;
if(t4985){
float t4990 = (t4941/t4939);
float t4991 = (-t4990);
float t4992 = (t4932*t4991);
float t4993 = (t4934+t4992);
float t4994 = atan(t4993,t4949);
float t4995 = (u1.u0/30);
float t4996 = (t4994+t4995);
float t4997 = (2*3.1415927);
float t4998 = (t4996+t4997);
float t4999 = mod(t4998,2);
float t5000 = (t4999*3.1415927);
float t5001 = (2*3.1415927);
float t5002 = (t5000/t5001);
float t5003 = (t4993*t4993);
float t5004 = (t4939*t4991);
float t5005 = (t4941+t5004);
float t5006 = (t5005*t5005);
float t5007 = (t5003+t5006);
float t5008 = (t4947*t4991);
float t5009 = (t4949+t5008);
float t5010 = (t5009*t5009);
float t5011 = (t5007+t5010);
float t5012 = sqrt(t5011);
float t5013 = (t5012*t5012);
float t5014 = sqrt(t5013);
float t5015 = (t5014-float(2.6));
float t5016 = (t5015/float(11.4));
vec4 t5017 = texture(s4,vec2(t5002,t5016));
t4986 = t5017.x;
t4987 = t5017.y;
t4988 = t5017.z;
float t5018;
if(t4985){
t5018 = 1;
} else {
t5018 = 0;
}
float t5019 = (t5017.x*t5017.x);
float t5020 = (t5017.y*t5017.y);
float t5021 = (t5019+t5020);
float t5022 = (t5017.z*t5017.z);
float t5023 = (t5021+t5022);
float t5024 = sqrt(t5023);
float t5025 = (t5024*t5024);
float t5026 = (t5025/float(3.0));
bool t5027 = (t5026<=1);
float t5028;
if(t5027){
t5028 = t5026;
} else {
t5028 = 1;
}
bool t5029 = (t5028>=0);
float t5030;
if(t5029){
t5030 = t5028;
} else {
t5030 = 0;
}
float t5031 = (t5018*t5030);
t4989 = t5031;
} else {
t4986 = 0;
t4987 = 0;
t4988 = 0;
t4989 = 0;
}
float t5032 = (1-t4970);
float t5033 = (t4967*t5032);
float t5034 = (t4970+t5033);
float t5035 = (1-t5034);
float t5036 = (t4989*t5035);
float t5037 = (t4986*t5036);
float t5038 = (t4974+t5037);
float t5039 = (-float(1.5));
float t5040 = (t5039*t180);
float t5041 = (t5040*t4934);
float t5042 = pow(t4953,float(2.5));
float t5043 = (t5041/t5042);
float t5044 = (t5043*float(0.16));
float t5045 = (t4932+t5044);
float t5046 = (t5045*float(0.16));
float t5047 = (t4934+t5046);
float t5048 = (t5047*t5047);
float t5049 = (t5040*t4941);
float t5050 = (t5049/t5042);
float t5051 = (t5050*float(0.16));
float t5052 = (t4939+t5051);
float t5053 = (t5052*float(0.16));
float t5054 = (t4941+t5053);
float t5055 = (t5054*t5054);
float t5056 = (t5048+t5055);
float t5057 = (t5040*t4949);
float t5058 = (t5057/t5042);
float t5059 = (t5058*float(0.16));
float t5060 = (t4947+t5059);
float t5061 = (t5060*float(0.16));
float t5062 = (t4949+t5061);
float t5063 = (t5062*t5062);
float t5064 = (t5056+t5063);
float t5065 = sqrt(t5064);
float t5066 = (t5065*t5065);
bool t5067 = (t5066<1);
float t5068 = (t4934*t4934);
float t5069 = (t4941*t4941);
float t5070 = (t5068+t5069);
float t5071 = (t4949*t4949);
float t5072 = (t5070+t5071);
float t5073 = sqrt(t5072);
float t5074 = (t5073*t5073);
bool t5075 = (t5074>1);
bool t5076 = (t5067&&t5075);
float t5077;
float t5078;
float t5079;
float t5080;
if(t5076){
t5077 = 0;
t5078 = 0;
t5079 = 0;
t5080 = 1;
} else {
t5077 = 0;
t5078 = 0;
t5079 = 0;
t5080 = 0;
}
float t5081 = (1-t5034);
float t5082 = (t4989*t5081);
float t5083 = (t5034+t5082);
float t5084 = (1-t5083);
float t5085 = (t5080*t5084);
float t5086 = (t5077*t5085);
float t5087 = (t5038+t5086);
bool t5088 = (t4941>0);
bool t5089 = (t5054>0);
bool t5090 = (!t5089);
bool t5091 = (t5088&&t5090);
bool t5092 = (!t5088);
bool t5093 = (t5089&&t5092);
bool t5094 = (t5091||t5093);
bool t5095 = (t5066<196);
bool t5096 = (t5066>float(6.76));
bool t5097 = (t5095&&t5096);
bool t5098 = (t5094&&t5097);
float t5099;
float t5100;
float t5101;
float t5102;
if(t5098){
float t5103 = (t5054/t5052);
float t5104 = (-t5103);
float t5105 = (t5045*t5104);
float t5106 = (t5047+t5105);
float t5107 = atan(t5106,t5062);
float t5108 = (u1.u0/30);
float t5109 = (t5107+t5108);
float t5110 = (2*3.1415927);
float t5111 = (t5109+t5110);
float t5112 = mod(t5111,2);
float t5113 = (t5112*3.1415927);
float t5114 = (2*3.1415927);
float t5115 = (t5113/t5114);
float t5116 = (t5106*t5106);
float t5117 = (t5052*t5104);
float t5118 = (t5054+t5117);
float t5119 = (t5118*t5118);
float t5120 = (t5116+t5119);
float t5121 = (t5060*t5104);
float t5122 = (t5062+t5121);
float t5123 = (t5122*t5122);
float t5124 = (t5120+t5123);
float t5125 = sqrt(t5124);
float t5126 = (t5125*t5125);
float t5127 = sqrt(t5126);
float t5128 = (t5127-float(2.6));
float t5129 = (t5128/float(11.4));
vec4 t5130 = texture(s4,vec2(t5115,t5129));
t5099 = t5130.x;
t5100 = t5130.y;
t5101 = t5130.z;
float t5131;
if(t5098){
t5131 = 1;
} else {
t5131 = 0;
}
float t5132 = (t5130.x*t5130.x);
float t5133 = (t5130.y*t5130.y);
float t5134 = (t5132+t5133);
float t5135 = (t5130.z*t5130.z);
float t5136 = (t5134+t5135);
float t5137 = sqrt(t5136);
float t5138 = (t5137*t5137);
float t5139 = (t5138/float(3.0));
bool t5140 = (t5139<=1);
float t5141;
if(t5140){
t5141 = t5139;
} else {
t5141 = 1;
}
bool t5142 = (t5141>=0);
float t5143;
if(t5142){
t5143 = t5141;
} else {
t5143 = 0;
}
float t5144 = (t5131*t5143);
t5102 = t5144;
} else {
t5099 = 0;
t5100 = 0;
t5101 = 0;
t5102 = 0;
}
float t5145 = (1-t5083);
float t5146 = (t5080*t5145);
float t5147 = (t5083+t5146);
float t5148 = (1-t5147);
float t5149 = (t5102*t5148);
float t5150 = (t5099*t5149);
float t5151 = (t5087+t5150);
float t5152 = (-float(1.5));
float t5153 = (t5152*t180);
float t5154 = (t5153*t5047);
float t5155 = pow(t5066,float(2.5));
float t5156 = (t5154/t5155);
float t5157 = (t5156*float(0.16));
float t5158 = (t5045+t5157);
float t5159 = (t5158*float(0.16));
float t5160 = (t5047+t5159);
float t5161 = (t5160*t5160);
float t5162 = (t5153*t5054);
float t5163 = (t5162/t5155);
float t5164 = (t5163*float(0.16));
float t5165 = (t5052+t5164);
float t5166 = (t5165*float(0.16));
float t5167 = (t5054+t5166);
float t5168 = (t5167*t5167);
float t5169 = (t5161+t5168);
float t5170 = (t5153*t5062);
float t5171 = (t5170/t5155);
float t5172 = (t5171*float(0.16));
float t5173 = (t5060+t5172);
float t5174 = (t5173*float(0.16));
float t5175 = (t5062+t5174);
float t5176 = (t5175*t5175);
float t5177 = (t5169+t5176);
float t5178 = sqrt(t5177);
float t5179 = (t5178*t5178);
bool t5180 = (t5179<1);
float t5181 = (t5047*t5047);
float t5182 = (t5054*t5054);
float t5183 = (t5181+t5182);
float t5184 = (t5062*t5062);
float t5185 = (t5183+t5184);
float t5186 = sqrt(t5185);
float t5187 = (t5186*t5186);
bool t5188 = (t5187>1);
bool t5189 = (t5180&&t5188);
float t5190;
float t5191;
float t5192;
float t5193;
if(t5189){
t5190 = 0;
t5191 = 0;
t5192 = 0;
t5193 = 1;
} else {
t5190 = 0;
t5191 = 0;
t5192 = 0;
t5193 = 0;
}
float t5194 = (1-t5147);
float t5195 = (t5102*t5194);
float t5196 = (t5147+t5195);
float t5197 = (1-t5196);
float t5198 = (t5193*t5197);
float t5199 = (t5190*t5198);
float t5200 = (t5151+t5199);
bool t5201 = (t5054>0);
bool t5202 = (t5167>0);
bool t5203 = (!t5202);
bool t5204 = (t5201&&t5203);
bool t5205 = (!t5201);
bool t5206 = (t5202&&t5205);
bool t5207 = (t5204||t5206);
bool t5208 = (t5179<196);
bool t5209 = (t5179>float(6.76));
bool t5210 = (t5208&&t5209);
bool t5211 = (t5207&&t5210);
float t5212;
float t5213;
float t5214;
float t5215;
if(t5211){
float t5216 = (t5167/t5165);
float t5217 = (-t5216);
float t5218 = (t5158*t5217);
float t5219 = (t5160+t5218);
float t5220 = atan(t5219,t5175);
float t5221 = (u1.u0/30);
float t5222 = (t5220+t5221);
float t5223 = (2*3.1415927);
float t5224 = (t5222+t5223);
float t5225 = mod(t5224,2);
float t5226 = (t5225*3.1415927);
float t5227 = (2*3.1415927);
float t5228 = (t5226/t5227);
float t5229 = (t5219*t5219);
float t5230 = (t5165*t5217);
float t5231 = (t5167+t5230);
float t5232 = (t5231*t5231);
float t5233 = (t5229+t5232);
float t5234 = (t5173*t5217);
float t5235 = (t5175+t5234);
float t5236 = (t5235*t5235);
float t5237 = (t5233+t5236);
float t5238 = sqrt(t5237);
float t5239 = (t5238*t5238);
float t5240 = sqrt(t5239);
float t5241 = (t5240-float(2.6));
float t5242 = (t5241/float(11.4));
vec4 t5243 = texture(s4,vec2(t5228,t5242));
t5212 = t5243.x;
t5213 = t5243.y;
t5214 = t5243.z;
float t5244;
if(t5211){
t5244 = 1;
} else {
t5244 = 0;
}
float t5245 = (t5243.x*t5243.x);
float t5246 = (t5243.y*t5243.y);
float t5247 = (t5245+t5246);
float t5248 = (t5243.z*t5243.z);
float t5249 = (t5247+t5248);
float t5250 = sqrt(t5249);
float t5251 = (t5250*t5250);
float t5252 = (t5251/float(3.0));
bool t5253 = (t5252<=1);
float t5254;
if(t5253){
t5254 = t5252;
} else {
t5254 = 1;
}
bool t5255 = (t5254>=0);
float t5256;
if(t5255){
t5256 = t5254;
} else {
t5256 = 0;
}
float t5257 = (t5244*t5256);
t5215 = t5257;
} else {
t5212 = 0;
t5213 = 0;
t5214 = 0;
t5215 = 0;
}
float t5258 = (1-t5196);
float t5259 = (t5193*t5258);
float t5260 = (t5196+t5259);
float t5261 = (1-t5260);
float t5262 = (t5215*t5261);
float t5263 = (t5212*t5262);
float t5264 = (t5200+t5263);
float t5265 = (-float(1.5));
float t5266 = (t5265*t180);
float t5267 = (t5266*t5160);
float t5268 = pow(t5179,float(2.5));
float t5269 = (t5267/t5268);
float t5270 = (t5269*float(0.16));
float t5271 = (t5158+t5270);
float t5272 = (t5271*float(0.16));
float t5273 = (t5160+t5272);
float t5274 = (t5273*t5273);
float t5275 = (t5266*t5167);
float t5276 = (t5275/t5268);
float t5277 = (t5276*float(0.16));
float t5278 = (t5165+t5277);
float t5279 = (t5278*float(0.16));
float t5280 = (t5167+t5279);
float t5281 = (t5280*t5280);
float t5282 = (t5274+t5281);
float t5283 = (t5266*t5175);
float t5284 = (t5283/t5268);
float t5285 = (t5284*float(0.16));
float t5286 = (t5173+t5285);
float t5287 = (t5286*float(0.16));
float t5288 = (t5175+t5287);
float t5289 = (t5288*t5288);
float t5290 = (t5282+t5289);
float t5291 = sqrt(t5290);
float t5292 = (t5291*t5291);
bool t5293 = (t5292<1);
float t5294 = (t5160*t5160);
float t5295 = (t5167*t5167);
float t5296 = (t5294+t5295);
float t5297 = (t5175*t5175);
float t5298 = (t5296+t5297);
float t5299 = sqrt(t5298);
float t5300 = (t5299*t5299);
bool t5301 = (t5300>1);
bool t5302 = (t5293&&t5301);
float t5303;
float t5304;
float t5305;
float t5306;
if(t5302){
t5303 = 0;
t5304 = 0;
t5305 = 0;
t5306 = 1;
} else {
t5303 = 0;
t5304 = 0;
t5305 = 0;
t5306 = 0;
}
float t5307 = (1-t5260);
float t5308 = (t5215*t5307);
float t5309 = (t5260+t5308);
float t5310 = (1-t5309);
float t5311 = (t5306*t5310);
float t5312 = (t5303*t5311);
float t5313 = (t5264+t5312);
bool t5314 = (t5167>0);
bool t5315 = (t5280>0);
bool t5316 = (!t5315);
bool t5317 = (t5314&&t5316);
bool t5318 = (!t5314);
bool t5319 = (t5315&&t5318);
bool t5320 = (t5317||t5319);
bool t5321 = (t5292<196);
bool t5322 = (t5292>float(6.76));
bool t5323 = (t5321&&t5322);
bool t5324 = (t5320&&t5323);
float t5325;
float t5326;
float t5327;
float t5328;
if(t5324){
float t5329 = (t5280/t5278);
float t5330 = (-t5329);
float t5331 = (t5271*t5330);
float t5332 = (t5273+t5331);
float t5333 = atan(t5332,t5288);
float t5334 = (u1.u0/30);
float t5335 = (t5333+t5334);
float t5336 = (2*3.1415927);
float t5337 = (t5335+t5336);
float t5338 = mod(t5337,2);
float t5339 = (t5338*3.1415927);
float t5340 = (2*3.1415927);
float t5341 = (t5339/t5340);
float t5342 = (t5332*t5332);
float t5343 = (t5278*t5330);
float t5344 = (t5280+t5343);
float t5345 = (t5344*t5344);
float t5346 = (t5342+t5345);
float t5347 = (t5286*t5330);
float t5348 = (t5288+t5347);
float t5349 = (t5348*t5348);
float t5350 = (t5346+t5349);
float t5351 = sqrt(t5350);
float t5352 = (t5351*t5351);
float t5353 = sqrt(t5352);
float t5354 = (t5353-float(2.6));
float t5355 = (t5354/float(11.4));
vec4 t5356 = texture(s4,vec2(t5341,t5355));
t5325 = t5356.x;
t5326 = t5356.y;
t5327 = t5356.z;
float t5357;
if(t5324){
t5357 = 1;
} else {
t5357 = 0;
}
float t5358 = (t5356.x*t5356.x);
float t5359 = (t5356.y*t5356.y);
float t5360 = (t5358+t5359);
float t5361 = (t5356.z*t5356.z);
float t5362 = (t5360+t5361);
float t5363 = sqrt(t5362);
float t5364 = (t5363*t5363);
float t5365 = (t5364/float(3.0));
bool t5366 = (t5365<=1);
float t5367;
if(t5366){
t5367 = t5365;
} else {
t5367 = 1;
}
bool t5368 = (t5367>=0);
float t5369;
if(t5368){
t5369 = t5367;
} else {
t5369 = 0;
}
float t5370 = (t5357*t5369);
t5328 = t5370;
} else {
t5325 = 0;
t5326 = 0;
t5327 = 0;
t5328 = 0;
}
float t5371 = (1-t5309);
float t5372 = (t5306*t5371);
float t5373 = (t5309+t5372);
float t5374 = (1-t5373);
float t5375 = (t5328*t5374);
float t5376 = (t5325*t5375);
float t5377 = (t5313+t5376);
float t5378 = (-float(1.5));
float t5379 = (t5378*t180);
float t5380 = (t5379*t5273);
float t5381 = pow(t5292,float(2.5));
float t5382 = (t5380/t5381);
float t5383 = (t5382*float(0.16));
float t5384 = (t5271+t5383);
float t5385 = (t5384*float(0.16));
float t5386 = (t5273+t5385);
float t5387 = (t5386*t5386);
float t5388 = (t5379*t5280);
float t5389 = (t5388/t5381);
float t5390 = (t5389*float(0.16));
float t5391 = (t5278+t5390);
float t5392 = (t5391*float(0.16));
float t5393 = (t5280+t5392);
float t5394 = (t5393*t5393);
float t5395 = (t5387+t5394);
float t5396 = (t5379*t5288);
float t5397 = (t5396/t5381);
float t5398 = (t5397*float(0.16));
float t5399 = (t5286+t5398);
float t5400 = (t5399*float(0.16));
float t5401 = (t5288+t5400);
float t5402 = (t5401*t5401);
float t5403 = (t5395+t5402);
float t5404 = sqrt(t5403);
float t5405 = (t5404*t5404);
bool t5406 = (t5405<1);
float t5407 = (t5273*t5273);
float t5408 = (t5280*t5280);
float t5409 = (t5407+t5408);
float t5410 = (t5288*t5288);
float t5411 = (t5409+t5410);
float t5412 = sqrt(t5411);
float t5413 = (t5412*t5412);
bool t5414 = (t5413>1);
bool t5415 = (t5406&&t5414);
float t5416;
float t5417;
float t5418;
float t5419;
if(t5415){
t5416 = 0;
t5417 = 0;
t5418 = 0;
t5419 = 1;
} else {
t5416 = 0;
t5417 = 0;
t5418 = 0;
t5419 = 0;
}
float t5420 = (1-t5373);
float t5421 = (t5328*t5420);
float t5422 = (t5373+t5421);
float t5423 = (1-t5422);
float t5424 = (t5419*t5423);
float t5425 = (t5416*t5424);
float t5426 = (t5377+t5425);
bool t5427 = (t5280>0);
bool t5428 = (t5393>0);
bool t5429 = (!t5428);
bool t5430 = (t5427&&t5429);
bool t5431 = (!t5427);
bool t5432 = (t5428&&t5431);
bool t5433 = (t5430||t5432);
bool t5434 = (t5405<196);
bool t5435 = (t5405>float(6.76));
bool t5436 = (t5434&&t5435);
bool t5437 = (t5433&&t5436);
float t5438;
float t5439;
float t5440;
float t5441;
if(t5437){
float t5442 = (t5393/t5391);
float t5443 = (-t5442);
float t5444 = (t5384*t5443);
float t5445 = (t5386+t5444);
float t5446 = atan(t5445,t5401);
float t5447 = (u1.u0/30);
float t5448 = (t5446+t5447);
float t5449 = (2*3.1415927);
float t5450 = (t5448+t5449);
float t5451 = mod(t5450,2);
float t5452 = (t5451*3.1415927);
float t5453 = (2*3.1415927);
float t5454 = (t5452/t5453);
float t5455 = (t5445*t5445);
float t5456 = (t5391*t5443);
float t5457 = (t5393+t5456);
float t5458 = (t5457*t5457);
float t5459 = (t5455+t5458);
float t5460 = (t5399*t5443);
float t5461 = (t5401+t5460);
float t5462 = (t5461*t5461);
float t5463 = (t5459+t5462);
float t5464 = sqrt(t5463);
float t5465 = (t5464*t5464);
float t5466 = sqrt(t5465);
float t5467 = (t5466-float(2.6));
float t5468 = (t5467/float(11.4));
vec4 t5469 = texture(s4,vec2(t5454,t5468));
t5438 = t5469.x;
t5439 = t5469.y;
t5440 = t5469.z;
float t5470;
if(t5437){
t5470 = 1;
} else {
t5470 = 0;
}
float t5471 = (t5469.x*t5469.x);
float t5472 = (t5469.y*t5469.y);
float t5473 = (t5471+t5472);
float t5474 = (t5469.z*t5469.z);
float t5475 = (t5473+t5474);
float t5476 = sqrt(t5475);
float t5477 = (t5476*t5476);
float t5478 = (t5477/float(3.0));
bool t5479 = (t5478<=1);
float t5480;
if(t5479){
t5480 = t5478;
} else {
t5480 = 1;
}
bool t5481 = (t5480>=0);
float t5482;
if(t5481){
t5482 = t5480;
} else {
t5482 = 0;
}
float t5483 = (t5470*t5482);
t5441 = t5483;
} else {
t5438 = 0;
t5439 = 0;
t5440 = 0;
t5441 = 0;
}
float t5484 = (1-t5422);
float t5485 = (t5419*t5484);
float t5486 = (t5422+t5485);
float t5487 = (1-t5486);
float t5488 = (t5441*t5487);
float t5489 = (t5438*t5488);
float t5490 = (t5426+t5489);
float t5491 = (-float(1.5));
float t5492 = (t5491*t180);
float t5493 = (t5492*t5386);
float t5494 = pow(t5405,float(2.5));
float t5495 = (t5493/t5494);
float t5496 = (t5495*float(0.16));
float t5497 = (t5384+t5496);
float t5498 = (t5497*float(0.16));
float t5499 = (t5386+t5498);
float t5500 = (t5499*t5499);
float t5501 = (t5492*t5393);
float t5502 = (t5501/t5494);
float t5503 = (t5502*float(0.16));
float t5504 = (t5391+t5503);
float t5505 = (t5504*float(0.16));
float t5506 = (t5393+t5505);
float t5507 = (t5506*t5506);
float t5508 = (t5500+t5507);
float t5509 = (t5492*t5401);
float t5510 = (t5509/t5494);
float t5511 = (t5510*float(0.16));
float t5512 = (t5399+t5511);
float t5513 = (t5512*float(0.16));
float t5514 = (t5401+t5513);
float t5515 = (t5514*t5514);
float t5516 = (t5508+t5515);
float t5517 = sqrt(t5516);
float t5518 = (t5517*t5517);
bool t5519 = (t5518<1);
float t5520 = (t5386*t5386);
float t5521 = (t5393*t5393);
float t5522 = (t5520+t5521);
float t5523 = (t5401*t5401);
float t5524 = (t5522+t5523);
float t5525 = sqrt(t5524);
float t5526 = (t5525*t5525);
bool t5527 = (t5526>1);
bool t5528 = (t5519&&t5527);
float t5529;
float t5530;
float t5531;
float t5532;
if(t5528){
t5529 = 0;
t5530 = 0;
t5531 = 0;
t5532 = 1;
} else {
t5529 = 0;
t5530 = 0;
t5531 = 0;
t5532 = 0;
}
float t5533 = (1-t5486);
float t5534 = (t5441*t5533);
float t5535 = (t5486+t5534);
float t5536 = (1-t5535);
float t5537 = (t5532*t5536);
float t5538 = (t5529*t5537);
float t5539 = (t5490+t5538);
bool t5540 = (t5393>0);
bool t5541 = (t5506>0);
bool t5542 = (!t5541);
bool t5543 = (t5540&&t5542);
bool t5544 = (!t5540);
bool t5545 = (t5541&&t5544);
bool t5546 = (t5543||t5545);
bool t5547 = (t5518<196);
bool t5548 = (t5518>float(6.76));
bool t5549 = (t5547&&t5548);
bool t5550 = (t5546&&t5549);
float t5551;
float t5552;
float t5553;
float t5554;
if(t5550){
float t5555 = (t5506/t5504);
float t5556 = (-t5555);
float t5557 = (t5497*t5556);
float t5558 = (t5499+t5557);
float t5559 = atan(t5558,t5514);
float t5560 = (u1.u0/30);
float t5561 = (t5559+t5560);
float t5562 = (2*3.1415927);
float t5563 = (t5561+t5562);
float t5564 = mod(t5563,2);
float t5565 = (t5564*3.1415927);
float t5566 = (2*3.1415927);
float t5567 = (t5565/t5566);
float t5568 = (t5558*t5558);
float t5569 = (t5504*t5556);
float t5570 = (t5506+t5569);
float t5571 = (t5570*t5570);
float t5572 = (t5568+t5571);
float t5573 = (t5512*t5556);
float t5574 = (t5514+t5573);
float t5575 = (t5574*t5574);
float t5576 = (t5572+t5575);
float t5577 = sqrt(t5576);
float t5578 = (t5577*t5577);
float t5579 = sqrt(t5578);
float t5580 = (t5579-float(2.6));
float t5581 = (t5580/float(11.4));
vec4 t5582 = texture(s4,vec2(t5567,t5581));
t5551 = t5582.x;
t5552 = t5582.y;
t5553 = t5582.z;
float t5583;
if(t5550){
t5583 = 1;
} else {
t5583 = 0;
}
float t5584 = (t5582.x*t5582.x);
float t5585 = (t5582.y*t5582.y);
float t5586 = (t5584+t5585);
float t5587 = (t5582.z*t5582.z);
float t5588 = (t5586+t5587);
float t5589 = sqrt(t5588);
float t5590 = (t5589*t5589);
float t5591 = (t5590/float(3.0));
bool t5592 = (t5591<=1);
float t5593;
if(t5592){
t5593 = t5591;
} else {
t5593 = 1;
}
bool t5594 = (t5593>=0);
float t5595;
if(t5594){
t5595 = t5593;
} else {
t5595 = 0;
}
float t5596 = (t5583*t5595);
t5554 = t5596;
} else {
t5551 = 0;
t5552 = 0;
t5553 = 0;
t5554 = 0;
}
float t5597 = (1-t5535);
float t5598 = (t5532*t5597);
float t5599 = (t5535+t5598);
float t5600 = (1-t5599);
float t5601 = (t5554*t5600);
float t5602 = (t5551*t5601);
float t5603 = (t5539+t5602);
float t5604 = (-float(1.5));
float t5605 = (t5604*t180);
float t5606 = (t5605*t5499);
float t5607 = pow(t5518,float(2.5));
float t5608 = (t5606/t5607);
float t5609 = (t5608*float(0.16));
float t5610 = (t5497+t5609);
float t5611 = (t5610*float(0.16));
float t5612 = (t5499+t5611);
float t5613 = (t5612*t5612);
float t5614 = (t5605*t5506);
float t5615 = (t5614/t5607);
float t5616 = (t5615*float(0.16));
float t5617 = (t5504+t5616);
float t5618 = (t5617*float(0.16));
float t5619 = (t5506+t5618);
float t5620 = (t5619*t5619);
float t5621 = (t5613+t5620);
float t5622 = (t5605*t5514);
float t5623 = (t5622/t5607);
float t5624 = (t5623*float(0.16));
float t5625 = (t5512+t5624);
float t5626 = (t5625*float(0.16));
float t5627 = (t5514+t5626);
float t5628 = (t5627*t5627);
float t5629 = (t5621+t5628);
float t5630 = sqrt(t5629);
float t5631 = (t5630*t5630);
bool t5632 = (t5631<1);
float t5633 = (t5499*t5499);
float t5634 = (t5506*t5506);
float t5635 = (t5633+t5634);
float t5636 = (t5514*t5514);
float t5637 = (t5635+t5636);
float t5638 = sqrt(t5637);
float t5639 = (t5638*t5638);
bool t5640 = (t5639>1);
bool t5641 = (t5632&&t5640);
float t5642;
float t5643;
float t5644;
float t5645;
if(t5641){
t5642 = 0;
t5643 = 0;
t5644 = 0;
t5645 = 1;
} else {
t5642 = 0;
t5643 = 0;
t5644 = 0;
t5645 = 0;
}
float t5646 = (1-t5599);
float t5647 = (t5554*t5646);
float t5648 = (t5599+t5647);
float t5649 = (1-t5648);
float t5650 = (t5645*t5649);
float t5651 = (t5642*t5650);
float t5652 = (t5603+t5651);
bool t5653 = (t5506>0);
bool t5654 = (t5619>0);
bool t5655 = (!t5654);
bool t5656 = (t5653&&t5655);
bool t5657 = (!t5653);
bool t5658 = (t5654&&t5657);
bool t5659 = (t5656||t5658);
bool t5660 = (t5631<196);
bool t5661 = (t5631>float(6.76));
bool t5662 = (t5660&&t5661);
bool t5663 = (t5659&&t5662);
float t5664;
float t5665;
float t5666;
float t5667;
if(t5663){
float t5668 = (t5619/t5617);
float t5669 = (-t5668);
float t5670 = (t5610*t5669);
float t5671 = (t5612+t5670);
float t5672 = atan(t5671,t5627);
float t5673 = (u1.u0/30);
float t5674 = (t5672+t5673);
float t5675 = (2*3.1415927);
float t5676 = (t5674+t5675);
float t5677 = mod(t5676,2);
float t5678 = (t5677*3.1415927);
float t5679 = (2*3.1415927);
float t5680 = (t5678/t5679);
float t5681 = (t5671*t5671);
float t5682 = (t5617*t5669);
float t5683 = (t5619+t5682);
float t5684 = (t5683*t5683);
float t5685 = (t5681+t5684);
float t5686 = (t5625*t5669);
float t5687 = (t5627+t5686);
float t5688 = (t5687*t5687);
float t5689 = (t5685+t5688);
float t5690 = sqrt(t5689);
float t5691 = (t5690*t5690);
float t5692 = sqrt(t5691);
float t5693 = (t5692-float(2.6));
float t5694 = (t5693/float(11.4));
vec4 t5695 = texture(s4,vec2(t5680,t5694));
t5664 = t5695.x;
t5665 = t5695.y;
t5666 = t5695.z;
float t5696;
if(t5663){
t5696 = 1;
} else {
t5696 = 0;
}
float t5697 = (t5695.x*t5695.x);
float t5698 = (t5695.y*t5695.y);
float t5699 = (t5697+t5698);
float t5700 = (t5695.z*t5695.z);
float t5701 = (t5699+t5700);
float t5702 = sqrt(t5701);
float t5703 = (t5702*t5702);
float t5704 = (t5703/float(3.0));
bool t5705 = (t5704<=1);
float t5706;
if(t5705){
t5706 = t5704;
} else {
t5706 = 1;
}
bool t5707 = (t5706>=0);
float t5708;
if(t5707){
t5708 = t5706;
} else {
t5708 = 0;
}
float t5709 = (t5696*t5708);
t5667 = t5709;
} else {
t5664 = 0;
t5665 = 0;
t5666 = 0;
t5667 = 0;
}
float t5710 = (1-t5648);
float t5711 = (t5645*t5710);
float t5712 = (t5648+t5711);
float t5713 = (1-t5712);
float t5714 = (t5667*t5713);
float t5715 = (t5664*t5714);
float t5716 = (t5652+t5715);
float t5717 = (-float(1.5));
float t5718 = (t5717*t180);
float t5719 = (t5718*t5612);
float t5720 = pow(t5631,float(2.5));
float t5721 = (t5719/t5720);
float t5722 = (t5721*float(0.16));
float t5723 = (t5610+t5722);
float t5724 = (t5723*float(0.16));
float t5725 = (t5612+t5724);
float t5726 = (t5725*t5725);
float t5727 = (t5718*t5619);
float t5728 = (t5727/t5720);
float t5729 = (t5728*float(0.16));
float t5730 = (t5617+t5729);
float t5731 = (t5730*float(0.16));
float t5732 = (t5619+t5731);
float t5733 = (t5732*t5732);
float t5734 = (t5726+t5733);
float t5735 = (t5718*t5627);
float t5736 = (t5735/t5720);
float t5737 = (t5736*float(0.16));
float t5738 = (t5625+t5737);
float t5739 = (t5738*float(0.16));
float t5740 = (t5627+t5739);
float t5741 = (t5740*t5740);
float t5742 = (t5734+t5741);
float t5743 = sqrt(t5742);
float t5744 = (t5743*t5743);
bool t5745 = (t5744<1);
float t5746 = (t5612*t5612);
float t5747 = (t5619*t5619);
float t5748 = (t5746+t5747);
float t5749 = (t5627*t5627);
float t5750 = (t5748+t5749);
float t5751 = sqrt(t5750);
float t5752 = (t5751*t5751);
bool t5753 = (t5752>1);
bool t5754 = (t5745&&t5753);
float t5755;
float t5756;
float t5757;
float t5758;
if(t5754){
t5755 = 0;
t5756 = 0;
t5757 = 0;
t5758 = 1;
} else {
t5755 = 0;
t5756 = 0;
t5757 = 0;
t5758 = 0;
}
float t5759 = (1-t5712);
float t5760 = (t5667*t5759);
float t5761 = (t5712+t5760);
float t5762 = (1-t5761);
float t5763 = (t5758*t5762);
float t5764 = (t5755*t5763);
float t5765 = (t5716+t5764);
bool t5766 = (t5619>0);
bool t5767 = (t5732>0);
bool t5768 = (!t5767);
bool t5769 = (t5766&&t5768);
bool t5770 = (!t5766);
bool t5771 = (t5767&&t5770);
bool t5772 = (t5769||t5771);
bool t5773 = (t5744<196);
bool t5774 = (t5744>float(6.76));
bool t5775 = (t5773&&t5774);
bool t5776 = (t5772&&t5775);
float t5777;
float t5778;
float t5779;
float t5780;
if(t5776){
float t5781 = (t5732/t5730);
float t5782 = (-t5781);
float t5783 = (t5723*t5782);
float t5784 = (t5725+t5783);
float t5785 = atan(t5784,t5740);
float t5786 = (u1.u0/30);
float t5787 = (t5785+t5786);
float t5788 = (2*3.1415927);
float t5789 = (t5787+t5788);
float t5790 = mod(t5789,2);
float t5791 = (t5790*3.1415927);
float t5792 = (2*3.1415927);
float t5793 = (t5791/t5792);
float t5794 = (t5784*t5784);
float t5795 = (t5730*t5782);
float t5796 = (t5732+t5795);
float t5797 = (t5796*t5796);
float t5798 = (t5794+t5797);
float t5799 = (t5738*t5782);
float t5800 = (t5740+t5799);
float t5801 = (t5800*t5800);
float t5802 = (t5798+t5801);
float t5803 = sqrt(t5802);
float t5804 = (t5803*t5803);
float t5805 = sqrt(t5804);
float t5806 = (t5805-float(2.6));
float t5807 = (t5806/float(11.4));
vec4 t5808 = texture(s4,vec2(t5793,t5807));
t5777 = t5808.x;
t5778 = t5808.y;
t5779 = t5808.z;
float t5809;
if(t5776){
t5809 = 1;
} else {
t5809 = 0;
}
float t5810 = (t5808.x*t5808.x);
float t5811 = (t5808.y*t5808.y);
float t5812 = (t5810+t5811);
float t5813 = (t5808.z*t5808.z);
float t5814 = (t5812+t5813);
float t5815 = sqrt(t5814);
float t5816 = (t5815*t5815);
float t5817 = (t5816/float(3.0));
bool t5818 = (t5817<=1);
float t5819;
if(t5818){
t5819 = t5817;
} else {
t5819 = 1;
}
bool t5820 = (t5819>=0);
float t5821;
if(t5820){
t5821 = t5819;
} else {
t5821 = 0;
}
float t5822 = (t5809*t5821);
t5780 = t5822;
} else {
t5777 = 0;
t5778 = 0;
t5779 = 0;
t5780 = 0;
}
float t5823 = (1-t5761);
float t5824 = (t5758*t5823);
float t5825 = (t5761+t5824);
float t5826 = (1-t5825);
float t5827 = (t5780*t5826);
float t5828 = (t5777*t5827);
float t5829 = (t5765+t5828);
float t5830 = (-float(1.5));
float t5831 = (t5830*t180);
float t5832 = (t5831*t5725);
float t5833 = pow(t5744,float(2.5));
float t5834 = (t5832/t5833);
float t5835 = (t5834*float(0.16));
float t5836 = (t5723+t5835);
float t5837 = (t5836*float(0.16));
float t5838 = (t5725+t5837);
float t5839 = (t5838*t5838);
float t5840 = (t5831*t5732);
float t5841 = (t5840/t5833);
float t5842 = (t5841*float(0.16));
float t5843 = (t5730+t5842);
float t5844 = (t5843*float(0.16));
float t5845 = (t5732+t5844);
float t5846 = (t5845*t5845);
float t5847 = (t5839+t5846);
float t5848 = (t5831*t5740);
float t5849 = (t5848/t5833);
float t5850 = (t5849*float(0.16));
float t5851 = (t5738+t5850);
float t5852 = (t5851*float(0.16));
float t5853 = (t5740+t5852);
float t5854 = (t5853*t5853);
float t5855 = (t5847+t5854);
float t5856 = sqrt(t5855);
float t5857 = (t5856*t5856);
bool t5858 = (t5857<1);
float t5859 = (t5725*t5725);
float t5860 = (t5732*t5732);
float t5861 = (t5859+t5860);
float t5862 = (t5740*t5740);
float t5863 = (t5861+t5862);
float t5864 = sqrt(t5863);
float t5865 = (t5864*t5864);
bool t5866 = (t5865>1);
bool t5867 = (t5858&&t5866);
float t5868;
float t5869;
float t5870;
float t5871;
if(t5867){
t5868 = 0;
t5869 = 0;
t5870 = 0;
t5871 = 1;
} else {
t5868 = 0;
t5869 = 0;
t5870 = 0;
t5871 = 0;
}
float t5872 = (1-t5825);
float t5873 = (t5780*t5872);
float t5874 = (t5825+t5873);
float t5875 = (1-t5874);
float t5876 = (t5871*t5875);
float t5877 = (t5868*t5876);
float t5878 = (t5829+t5877);
bool t5879 = (t5732>0);
bool t5880 = (t5845>0);
bool t5881 = (!t5880);
bool t5882 = (t5879&&t5881);
bool t5883 = (!t5879);
bool t5884 = (t5880&&t5883);
bool t5885 = (t5882||t5884);
bool t5886 = (t5857<196);
bool t5887 = (t5857>float(6.76));
bool t5888 = (t5886&&t5887);
bool t5889 = (t5885&&t5888);
float t5890;
float t5891;
float t5892;
float t5893;
if(t5889){
float t5894 = (t5845/t5843);
float t5895 = (-t5894);
float t5896 = (t5836*t5895);
float t5897 = (t5838+t5896);
float t5898 = atan(t5897,t5853);
float t5899 = (u1.u0/30);
float t5900 = (t5898+t5899);
float t5901 = (2*3.1415927);
float t5902 = (t5900+t5901);
float t5903 = mod(t5902,2);
float t5904 = (t5903*3.1415927);
float t5905 = (2*3.1415927);
float t5906 = (t5904/t5905);
float t5907 = (t5897*t5897);
float t5908 = (t5843*t5895);
float t5909 = (t5845+t5908);
float t5910 = (t5909*t5909);
float t5911 = (t5907+t5910);
float t5912 = (t5851*t5895);
float t5913 = (t5853+t5912);
float t5914 = (t5913*t5913);
float t5915 = (t5911+t5914);
float t5916 = sqrt(t5915);
float t5917 = (t5916*t5916);
float t5918 = sqrt(t5917);
float t5919 = (t5918-float(2.6));
float t5920 = (t5919/float(11.4));
vec4 t5921 = texture(s4,vec2(t5906,t5920));
t5890 = t5921.x;
t5891 = t5921.y;
t5892 = t5921.z;
float t5922;
if(t5889){
t5922 = 1;
} else {
t5922 = 0;
}
float t5923 = (t5921.x*t5921.x);
float t5924 = (t5921.y*t5921.y);
float t5925 = (t5923+t5924);
float t5926 = (t5921.z*t5921.z);
float t5927 = (t5925+t5926);
float t5928 = sqrt(t5927);
float t5929 = (t5928*t5928);
float t5930 = (t5929/float(3.0));
bool t5931 = (t5930<=1);
float t5932;
if(t5931){
t5932 = t5930;
} else {
t5932 = 1;
}
bool t5933 = (t5932>=0);
float t5934;
if(t5933){
t5934 = t5932;
} else {
t5934 = 0;
}
float t5935 = (t5922*t5934);
t5893 = t5935;
} else {
t5890 = 0;
t5891 = 0;
t5892 = 0;
t5893 = 0;
}
float t5936 = (1-t5874);
float t5937 = (t5871*t5936);
float t5938 = (t5874+t5937);
float t5939 = (1-t5938);
float t5940 = (t5893*t5939);
float t5941 = (t5890*t5940);
float t5942 = (t5878+t5941);
float t5943 = (-float(1.5));
float t5944 = (t5943*t180);
float t5945 = (t5944*t5838);
float t5946 = pow(t5857,float(2.5));
float t5947 = (t5945/t5946);
float t5948 = (t5947*float(0.16));
float t5949 = (t5836+t5948);
float t5950 = (t5949*float(0.16));
float t5951 = (t5838+t5950);
float t5952 = (t5951*t5951);
float t5953 = (t5944*t5845);
float t5954 = (t5953/t5946);
float t5955 = (t5954*float(0.16));
float t5956 = (t5843+t5955);
float t5957 = (t5956*float(0.16));
float t5958 = (t5845+t5957);
float t5959 = (t5958*t5958);
float t5960 = (t5952+t5959);
float t5961 = (t5944*t5853);
float t5962 = (t5961/t5946);
float t5963 = (t5962*float(0.16));
float t5964 = (t5851+t5963);
float t5965 = (t5964*float(0.16));
float t5966 = (t5853+t5965);
float t5967 = (t5966*t5966);
float t5968 = (t5960+t5967);
float t5969 = sqrt(t5968);
float t5970 = (t5969*t5969);
bool t5971 = (t5970<1);
float t5972 = (t5838*t5838);
float t5973 = (t5845*t5845);
float t5974 = (t5972+t5973);
float t5975 = (t5853*t5853);
float t5976 = (t5974+t5975);
float t5977 = sqrt(t5976);
float t5978 = (t5977*t5977);
bool t5979 = (t5978>1);
bool t5980 = (t5971&&t5979);
float t5981;
float t5982;
float t5983;
float t5984;
if(t5980){
t5981 = 0;
t5982 = 0;
t5983 = 0;
t5984 = 1;
} else {
t5981 = 0;
t5982 = 0;
t5983 = 0;
t5984 = 0;
}
float t5985 = (1-t5938);
float t5986 = (t5893*t5985);
float t5987 = (t5938+t5986);
float t5988 = (1-t5987);
float t5989 = (t5984*t5988);
float t5990 = (t5981*t5989);
float t5991 = (t5942+t5990);
bool t5992 = (t5845>0);
bool t5993 = (t5958>0);
bool t5994 = (!t5993);
bool t5995 = (t5992&&t5994);
bool t5996 = (!t5992);
bool t5997 = (t5993&&t5996);
bool t5998 = (t5995||t5997);
bool t5999 = (t5970<196);
bool t6000 = (t5970>float(6.76));
bool t6001 = (t5999&&t6000);
bool t6002 = (t5998&&t6001);
float t6003;
float t6004;
float t6005;
float t6006;
if(t6002){
float t6007 = (t5958/t5956);
float t6008 = (-t6007);
float t6009 = (t5949*t6008);
float t6010 = (t5951+t6009);
float t6011 = atan(t6010,t5966);
float t6012 = (u1.u0/30);
float t6013 = (t6011+t6012);
float t6014 = (2*3.1415927);
float t6015 = (t6013+t6014);
float t6016 = mod(t6015,2);
float t6017 = (t6016*3.1415927);
float t6018 = (2*3.1415927);
float t6019 = (t6017/t6018);
float t6020 = (t6010*t6010);
float t6021 = (t5956*t6008);
float t6022 = (t5958+t6021);
float t6023 = (t6022*t6022);
float t6024 = (t6020+t6023);
float t6025 = (t5964*t6008);
float t6026 = (t5966+t6025);
float t6027 = (t6026*t6026);
float t6028 = (t6024+t6027);
float t6029 = sqrt(t6028);
float t6030 = (t6029*t6029);
float t6031 = sqrt(t6030);
float t6032 = (t6031-float(2.6));
float t6033 = (t6032/float(11.4));
vec4 t6034 = texture(s4,vec2(t6019,t6033));
t6003 = t6034.x;
t6004 = t6034.y;
t6005 = t6034.z;
float t6035;
if(t6002){
t6035 = 1;
} else {
t6035 = 0;
}
float t6036 = (t6034.x*t6034.x);
float t6037 = (t6034.y*t6034.y);
float t6038 = (t6036+t6037);
float t6039 = (t6034.z*t6034.z);
float t6040 = (t6038+t6039);
float t6041 = sqrt(t6040);
float t6042 = (t6041*t6041);
float t6043 = (t6042/float(3.0));
bool t6044 = (t6043<=1);
float t6045;
if(t6044){
t6045 = t6043;
} else {
t6045 = 1;
}
bool t6046 = (t6045>=0);
float t6047;
if(t6046){
t6047 = t6045;
} else {
t6047 = 0;
}
float t6048 = (t6035*t6047);
t6006 = t6048;
} else {
t6003 = 0;
t6004 = 0;
t6005 = 0;
t6006 = 0;
}
float t6049 = (1-t5987);
float t6050 = (t5984*t6049);
float t6051 = (t5987+t6050);
float t6052 = (1-t6051);
float t6053 = (t6006*t6052);
float t6054 = (t6003*t6053);
float t6055 = (t5991+t6054);
float t6056 = (-float(1.5));
float t6057 = (t6056*t180);
float t6058 = (t6057*t5951);
float t6059 = pow(t5970,float(2.5));
float t6060 = (t6058/t6059);
float t6061 = (t6060*float(0.16));
float t6062 = (t5949+t6061);
float t6063 = (t6062*float(0.16));
float t6064 = (t5951+t6063);
float t6065 = (t6064*t6064);
float t6066 = (t6057*t5958);
float t6067 = (t6066/t6059);
float t6068 = (t6067*float(0.16));
float t6069 = (t5956+t6068);
float t6070 = (t6069*float(0.16));
float t6071 = (t5958+t6070);
float t6072 = (t6071*t6071);
float t6073 = (t6065+t6072);
float t6074 = (t6057*t5966);
float t6075 = (t6074/t6059);
float t6076 = (t6075*float(0.16));
float t6077 = (t5964+t6076);
float t6078 = (t6077*float(0.16));
float t6079 = (t5966+t6078);
float t6080 = (t6079*t6079);
float t6081 = (t6073+t6080);
float t6082 = sqrt(t6081);
float t6083 = (t6082*t6082);
bool t6084 = (t6083<1);
float t6085 = (t5951*t5951);
float t6086 = (t5958*t5958);
float t6087 = (t6085+t6086);
float t6088 = (t5966*t5966);
float t6089 = (t6087+t6088);
float t6090 = sqrt(t6089);
float t6091 = (t6090*t6090);
bool t6092 = (t6091>1);
bool t6093 = (t6084&&t6092);
float t6094;
float t6095;
float t6096;
float t6097;
if(t6093){
t6094 = 0;
t6095 = 0;
t6096 = 0;
t6097 = 1;
} else {
t6094 = 0;
t6095 = 0;
t6096 = 0;
t6097 = 0;
}
float t6098 = (1-t6051);
float t6099 = (t6006*t6098);
float t6100 = (t6051+t6099);
float t6101 = (1-t6100);
float t6102 = (t6097*t6101);
float t6103 = (t6094*t6102);
float t6104 = (t6055+t6103);
bool t6105 = (t5958>0);
bool t6106 = (t6071>0);
bool t6107 = (!t6106);
bool t6108 = (t6105&&t6107);
bool t6109 = (!t6105);
bool t6110 = (t6106&&t6109);
bool t6111 = (t6108||t6110);
bool t6112 = (t6083<196);
bool t6113 = (t6083>float(6.76));
bool t6114 = (t6112&&t6113);
bool t6115 = (t6111&&t6114);
float t6116;
float t6117;
float t6118;
float t6119;
if(t6115){
float t6120 = (t6071/t6069);
float t6121 = (-t6120);
float t6122 = (t6062*t6121);
float t6123 = (t6064+t6122);
float t6124 = atan(t6123,t6079);
float t6125 = (u1.u0/30);
float t6126 = (t6124+t6125);
float t6127 = (2*3.1415927);
float t6128 = (t6126+t6127);
float t6129 = mod(t6128,2);
float t6130 = (t6129*3.1415927);
float t6131 = (2*3.1415927);
float t6132 = (t6130/t6131);
float t6133 = (t6123*t6123);
float t6134 = (t6069*t6121);
float t6135 = (t6071+t6134);
float t6136 = (t6135*t6135);
float t6137 = (t6133+t6136);
float t6138 = (t6077*t6121);
float t6139 = (t6079+t6138);
float t6140 = (t6139*t6139);
float t6141 = (t6137+t6140);
float t6142 = sqrt(t6141);
float t6143 = (t6142*t6142);
float t6144 = sqrt(t6143);
float t6145 = (t6144-float(2.6));
float t6146 = (t6145/float(11.4));
vec4 t6147 = texture(s4,vec2(t6132,t6146));
t6116 = t6147.x;
t6117 = t6147.y;
t6118 = t6147.z;
float t6148;
if(t6115){
t6148 = 1;
} else {
t6148 = 0;
}
float t6149 = (t6147.x*t6147.x);
float t6150 = (t6147.y*t6147.y);
float t6151 = (t6149+t6150);
float t6152 = (t6147.z*t6147.z);
float t6153 = (t6151+t6152);
float t6154 = sqrt(t6153);
float t6155 = (t6154*t6154);
float t6156 = (t6155/float(3.0));
bool t6157 = (t6156<=1);
float t6158;
if(t6157){
t6158 = t6156;
} else {
t6158 = 1;
}
bool t6159 = (t6158>=0);
float t6160;
if(t6159){
t6160 = t6158;
} else {
t6160 = 0;
}
float t6161 = (t6148*t6160);
t6119 = t6161;
} else {
t6116 = 0;
t6117 = 0;
t6118 = 0;
t6119 = 0;
}
float t6162 = (1-t6100);
float t6163 = (t6097*t6162);
float t6164 = (t6100+t6163);
float t6165 = (1-t6164);
float t6166 = (t6119*t6165);
float t6167 = (t6116*t6166);
float t6168 = (t6104+t6167);
float t6169 = (-float(1.5));
float t6170 = (t6169*t180);
float t6171 = (t6170*t6064);
float t6172 = pow(t6083,float(2.5));
float t6173 = (t6171/t6172);
float t6174 = (t6173*float(0.16));
float t6175 = (t6062+t6174);
float t6176 = (t6175*float(0.16));
float t6177 = (t6064+t6176);
float t6178 = (t6177*t6177);
float t6179 = (t6170*t6071);
float t6180 = (t6179/t6172);
float t6181 = (t6180*float(0.16));
float t6182 = (t6069+t6181);
float t6183 = (t6182*float(0.16));
float t6184 = (t6071+t6183);
float t6185 = (t6184*t6184);
float t6186 = (t6178+t6185);
float t6187 = (t6170*t6079);
float t6188 = (t6187/t6172);
float t6189 = (t6188*float(0.16));
float t6190 = (t6077+t6189);
float t6191 = (t6190*float(0.16));
float t6192 = (t6079+t6191);
float t6193 = (t6192*t6192);
float t6194 = (t6186+t6193);
float t6195 = sqrt(t6194);
float t6196 = (t6195*t6195);
bool t6197 = (t6196<1);
float t6198 = (t6064*t6064);
float t6199 = (t6071*t6071);
float t6200 = (t6198+t6199);
float t6201 = (t6079*t6079);
float t6202 = (t6200+t6201);
float t6203 = sqrt(t6202);
float t6204 = (t6203*t6203);
bool t6205 = (t6204>1);
bool t6206 = (t6197&&t6205);
float t6207;
float t6208;
float t6209;
float t6210;
if(t6206){
t6207 = 0;
t6208 = 0;
t6209 = 0;
t6210 = 1;
} else {
t6207 = 0;
t6208 = 0;
t6209 = 0;
t6210 = 0;
}
float t6211 = (1-t6164);
float t6212 = (t6119*t6211);
float t6213 = (t6164+t6212);
float t6214 = (1-t6213);
float t6215 = (t6210*t6214);
float t6216 = (t6207*t6215);
float t6217 = (t6168+t6216);
bool t6218 = (t6071>0);
bool t6219 = (t6184>0);
bool t6220 = (!t6219);
bool t6221 = (t6218&&t6220);
bool t6222 = (!t6218);
bool t6223 = (t6219&&t6222);
bool t6224 = (t6221||t6223);
bool t6225 = (t6196<196);
bool t6226 = (t6196>float(6.76));
bool t6227 = (t6225&&t6226);
bool t6228 = (t6224&&t6227);
float t6229;
float t6230;
float t6231;
float t6232;
if(t6228){
float t6233 = (t6184/t6182);
float t6234 = (-t6233);
float t6235 = (t6175*t6234);
float t6236 = (t6177+t6235);
float t6237 = atan(t6236,t6192);
float t6238 = (u1.u0/30);
float t6239 = (t6237+t6238);
float t6240 = (2*3.1415927);
float t6241 = (t6239+t6240);
float t6242 = mod(t6241,2);
float t6243 = (t6242*3.1415927);
float t6244 = (2*3.1415927);
float t6245 = (t6243/t6244);
float t6246 = (t6236*t6236);
float t6247 = (t6182*t6234);
float t6248 = (t6184+t6247);
float t6249 = (t6248*t6248);
float t6250 = (t6246+t6249);
float t6251 = (t6190*t6234);
float t6252 = (t6192+t6251);
float t6253 = (t6252*t6252);
float t6254 = (t6250+t6253);
float t6255 = sqrt(t6254);
float t6256 = (t6255*t6255);
float t6257 = sqrt(t6256);
float t6258 = (t6257-float(2.6));
float t6259 = (t6258/float(11.4));
vec4 t6260 = texture(s4,vec2(t6245,t6259));
t6229 = t6260.x;
t6230 = t6260.y;
t6231 = t6260.z;
float t6261;
if(t6228){
t6261 = 1;
} else {
t6261 = 0;
}
float t6262 = (t6260.x*t6260.x);
float t6263 = (t6260.y*t6260.y);
float t6264 = (t6262+t6263);
float t6265 = (t6260.z*t6260.z);
float t6266 = (t6264+t6265);
float t6267 = sqrt(t6266);
float t6268 = (t6267*t6267);
float t6269 = (t6268/float(3.0));
bool t6270 = (t6269<=1);
float t6271;
if(t6270){
t6271 = t6269;
} else {
t6271 = 1;
}
bool t6272 = (t6271>=0);
float t6273;
if(t6272){
t6273 = t6271;
} else {
t6273 = 0;
}
float t6274 = (t6261*t6273);
t6232 = t6274;
} else {
t6229 = 0;
t6230 = 0;
t6231 = 0;
t6232 = 0;
}
float t6275 = (1-t6213);
float t6276 = (t6210*t6275);
float t6277 = (t6213+t6276);
float t6278 = (1-t6277);
float t6279 = (t6232*t6278);
float t6280 = (t6229*t6279);
float t6281 = (t6217+t6280);
float t6282 = (-float(1.5));
float t6283 = (t6282*t180);
float t6284 = (t6283*t6177);
float t6285 = pow(t6196,float(2.5));
float t6286 = (t6284/t6285);
float t6287 = (t6286*float(0.16));
float t6288 = (t6175+t6287);
float t6289 = (t6288*float(0.16));
float t6290 = (t6177+t6289);
float t6291 = (t6290*t6290);
float t6292 = (t6283*t6184);
float t6293 = (t6292/t6285);
float t6294 = (t6293*float(0.16));
float t6295 = (t6182+t6294);
float t6296 = (t6295*float(0.16));
float t6297 = (t6184+t6296);
float t6298 = (t6297*t6297);
float t6299 = (t6291+t6298);
float t6300 = (t6283*t6192);
float t6301 = (t6300/t6285);
float t6302 = (t6301*float(0.16));
float t6303 = (t6190+t6302);
float t6304 = (t6303*float(0.16));
float t6305 = (t6192+t6304);
float t6306 = (t6305*t6305);
float t6307 = (t6299+t6306);
float t6308 = sqrt(t6307);
float t6309 = (t6308*t6308);
bool t6310 = (t6309<1);
float t6311 = (t6177*t6177);
float t6312 = (t6184*t6184);
float t6313 = (t6311+t6312);
float t6314 = (t6192*t6192);
float t6315 = (t6313+t6314);
float t6316 = sqrt(t6315);
float t6317 = (t6316*t6316);
bool t6318 = (t6317>1);
bool t6319 = (t6310&&t6318);
float t6320;
float t6321;
float t6322;
float t6323;
if(t6319){
t6320 = 0;
t6321 = 0;
t6322 = 0;
t6323 = 1;
} else {
t6320 = 0;
t6321 = 0;
t6322 = 0;
t6323 = 0;
}
float t6324 = (1-t6277);
float t6325 = (t6232*t6324);
float t6326 = (t6277+t6325);
float t6327 = (1-t6326);
float t6328 = (t6323*t6327);
float t6329 = (t6320*t6328);
float t6330 = (t6281+t6329);
bool t6331 = (t6184>0);
bool t6332 = (t6297>0);
bool t6333 = (!t6332);
bool t6334 = (t6331&&t6333);
bool t6335 = (!t6331);
bool t6336 = (t6332&&t6335);
bool t6337 = (t6334||t6336);
bool t6338 = (t6309<196);
bool t6339 = (t6309>float(6.76));
bool t6340 = (t6338&&t6339);
bool t6341 = (t6337&&t6340);
float t6342;
float t6343;
float t6344;
float t6345;
if(t6341){
float t6346 = (t6297/t6295);
float t6347 = (-t6346);
float t6348 = (t6288*t6347);
float t6349 = (t6290+t6348);
float t6350 = atan(t6349,t6305);
float t6351 = (u1.u0/30);
float t6352 = (t6350+t6351);
float t6353 = (2*3.1415927);
float t6354 = (t6352+t6353);
float t6355 = mod(t6354,2);
float t6356 = (t6355*3.1415927);
float t6357 = (2*3.1415927);
float t6358 = (t6356/t6357);
float t6359 = (t6349*t6349);
float t6360 = (t6295*t6347);
float t6361 = (t6297+t6360);
float t6362 = (t6361*t6361);
float t6363 = (t6359+t6362);
float t6364 = (t6303*t6347);
float t6365 = (t6305+t6364);
float t6366 = (t6365*t6365);
float t6367 = (t6363+t6366);
float t6368 = sqrt(t6367);
float t6369 = (t6368*t6368);
float t6370 = sqrt(t6369);
float t6371 = (t6370-float(2.6));
float t6372 = (t6371/float(11.4));
vec4 t6373 = texture(s4,vec2(t6358,t6372));
t6342 = t6373.x;
t6343 = t6373.y;
t6344 = t6373.z;
float t6374;
if(t6341){
t6374 = 1;
} else {
t6374 = 0;
}
float t6375 = (t6373.x*t6373.x);
float t6376 = (t6373.y*t6373.y);
float t6377 = (t6375+t6376);
float t6378 = (t6373.z*t6373.z);
float t6379 = (t6377+t6378);
float t6380 = sqrt(t6379);
float t6381 = (t6380*t6380);
float t6382 = (t6381/float(3.0));
bool t6383 = (t6382<=1);
float t6384;
if(t6383){
t6384 = t6382;
} else {
t6384 = 1;
}
bool t6385 = (t6384>=0);
float t6386;
if(t6385){
t6386 = t6384;
} else {
t6386 = 0;
}
float t6387 = (t6374*t6386);
t6345 = t6387;
} else {
t6342 = 0;
t6343 = 0;
t6344 = 0;
t6345 = 0;
}
float t6388 = (1-t6326);
float t6389 = (t6323*t6388);
float t6390 = (t6326+t6389);
float t6391 = (1-t6390);
float t6392 = (t6345*t6391);
float t6393 = (t6342*t6392);
float t6394 = (t6330+t6393);
float t6395 = (-float(1.5));
float t6396 = (t6395*t180);
float t6397 = (t6396*t6290);
float t6398 = pow(t6309,float(2.5));
float t6399 = (t6397/t6398);
float t6400 = (t6399*float(0.16));
float t6401 = (t6288+t6400);
float t6402 = (t6401*float(0.16));
float t6403 = (t6290+t6402);
float t6404 = (t6403*t6403);
float t6405 = (t6396*t6297);
float t6406 = (t6405/t6398);
float t6407 = (t6406*float(0.16));
float t6408 = (t6295+t6407);
float t6409 = (t6408*float(0.16));
float t6410 = (t6297+t6409);
float t6411 = (t6410*t6410);
float t6412 = (t6404+t6411);
float t6413 = (t6396*t6305);
float t6414 = (t6413/t6398);
float t6415 = (t6414*float(0.16));
float t6416 = (t6303+t6415);
float t6417 = (t6416*float(0.16));
float t6418 = (t6305+t6417);
float t6419 = (t6418*t6418);
float t6420 = (t6412+t6419);
float t6421 = sqrt(t6420);
float t6422 = (t6421*t6421);
bool t6423 = (t6422<1);
float t6424 = (t6290*t6290);
float t6425 = (t6297*t6297);
float t6426 = (t6424+t6425);
float t6427 = (t6305*t6305);
float t6428 = (t6426+t6427);
float t6429 = sqrt(t6428);
float t6430 = (t6429*t6429);
bool t6431 = (t6430>1);
bool t6432 = (t6423&&t6431);
float t6433;
float t6434;
float t6435;
float t6436;
if(t6432){
t6433 = 0;
t6434 = 0;
t6435 = 0;
t6436 = 1;
} else {
t6433 = 0;
t6434 = 0;
t6435 = 0;
t6436 = 0;
}
float t6437 = (1-t6390);
float t6438 = (t6345*t6437);
float t6439 = (t6390+t6438);
float t6440 = (1-t6439);
float t6441 = (t6436*t6440);
float t6442 = (t6433*t6441);
float t6443 = (t6394+t6442);
bool t6444 = (t6297>0);
bool t6445 = (t6410>0);
bool t6446 = (!t6445);
bool t6447 = (t6444&&t6446);
bool t6448 = (!t6444);
bool t6449 = (t6445&&t6448);
bool t6450 = (t6447||t6449);
bool t6451 = (t6422<196);
bool t6452 = (t6422>float(6.76));
bool t6453 = (t6451&&t6452);
bool t6454 = (t6450&&t6453);
float t6455;
float t6456;
float t6457;
float t6458;
if(t6454){
float t6459 = (t6410/t6408);
float t6460 = (-t6459);
float t6461 = (t6401*t6460);
float t6462 = (t6403+t6461);
float t6463 = atan(t6462,t6418);
float t6464 = (u1.u0/30);
float t6465 = (t6463+t6464);
float t6466 = (2*3.1415927);
float t6467 = (t6465+t6466);
float t6468 = mod(t6467,2);
float t6469 = (t6468*3.1415927);
float t6470 = (2*3.1415927);
float t6471 = (t6469/t6470);
float t6472 = (t6462*t6462);
float t6473 = (t6408*t6460);
float t6474 = (t6410+t6473);
float t6475 = (t6474*t6474);
float t6476 = (t6472+t6475);
float t6477 = (t6416*t6460);
float t6478 = (t6418+t6477);
float t6479 = (t6478*t6478);
float t6480 = (t6476+t6479);
float t6481 = sqrt(t6480);
float t6482 = (t6481*t6481);
float t6483 = sqrt(t6482);
float t6484 = (t6483-float(2.6));
float t6485 = (t6484/float(11.4));
vec4 t6486 = texture(s4,vec2(t6471,t6485));
t6455 = t6486.x;
t6456 = t6486.y;
t6457 = t6486.z;
float t6487;
if(t6454){
t6487 = 1;
} else {
t6487 = 0;
}
float t6488 = (t6486.x*t6486.x);
float t6489 = (t6486.y*t6486.y);
float t6490 = (t6488+t6489);
float t6491 = (t6486.z*t6486.z);
float t6492 = (t6490+t6491);
float t6493 = sqrt(t6492);
float t6494 = (t6493*t6493);
float t6495 = (t6494/float(3.0));
bool t6496 = (t6495<=1);
float t6497;
if(t6496){
t6497 = t6495;
} else {
t6497 = 1;
}
bool t6498 = (t6497>=0);
float t6499;
if(t6498){
t6499 = t6497;
} else {
t6499 = 0;
}
float t6500 = (t6487*t6499);
t6458 = t6500;
} else {
t6455 = 0;
t6456 = 0;
t6457 = 0;
t6458 = 0;
}
float t6501 = (1-t6439);
float t6502 = (t6436*t6501);
float t6503 = (t6439+t6502);
float t6504 = (1-t6503);
float t6505 = (t6458*t6504);
float t6506 = (t6455*t6505);
float t6507 = (t6443+t6506);
float t6508 = (-float(1.5));
float t6509 = (t6508*t180);
float t6510 = (t6509*t6403);
float t6511 = pow(t6422,float(2.5));
float t6512 = (t6510/t6511);
float t6513 = (t6512*float(0.16));
float t6514 = (t6401+t6513);
float t6515 = (t6514*float(0.16));
float t6516 = (t6403+t6515);
float t6517 = (t6516*t6516);
float t6518 = (t6509*t6410);
float t6519 = (t6518/t6511);
float t6520 = (t6519*float(0.16));
float t6521 = (t6408+t6520);
float t6522 = (t6521*float(0.16));
float t6523 = (t6410+t6522);
float t6524 = (t6523*t6523);
float t6525 = (t6517+t6524);
float t6526 = (t6509*t6418);
float t6527 = (t6526/t6511);
float t6528 = (t6527*float(0.16));
float t6529 = (t6416+t6528);
float t6530 = (t6529*float(0.16));
float t6531 = (t6418+t6530);
float t6532 = (t6531*t6531);
float t6533 = (t6525+t6532);
float t6534 = sqrt(t6533);
float t6535 = (t6534*t6534);
bool t6536 = (t6535<1);
float t6537 = (t6403*t6403);
float t6538 = (t6410*t6410);
float t6539 = (t6537+t6538);
float t6540 = (t6418*t6418);
float t6541 = (t6539+t6540);
float t6542 = sqrt(t6541);
float t6543 = (t6542*t6542);
bool t6544 = (t6543>1);
bool t6545 = (t6536&&t6544);
float t6546;
float t6547;
float t6548;
float t6549;
if(t6545){
t6546 = 0;
t6547 = 0;
t6548 = 0;
t6549 = 1;
} else {
t6546 = 0;
t6547 = 0;
t6548 = 0;
t6549 = 0;
}
float t6550 = (1-t6503);
float t6551 = (t6458*t6550);
float t6552 = (t6503+t6551);
float t6553 = (1-t6552);
float t6554 = (t6549*t6553);
float t6555 = (t6546*t6554);
float t6556 = (t6507+t6555);
bool t6557 = (t6410>0);
bool t6558 = (t6523>0);
bool t6559 = (!t6558);
bool t6560 = (t6557&&t6559);
bool t6561 = (!t6557);
bool t6562 = (t6558&&t6561);
bool t6563 = (t6560||t6562);
bool t6564 = (t6535<196);
bool t6565 = (t6535>float(6.76));
bool t6566 = (t6564&&t6565);
bool t6567 = (t6563&&t6566);
float t6568;
float t6569;
float t6570;
float t6571;
if(t6567){
float t6572 = (t6523/t6521);
float t6573 = (-t6572);
float t6574 = (t6514*t6573);
float t6575 = (t6516+t6574);
float t6576 = atan(t6575,t6531);
float t6577 = (u1.u0/30);
float t6578 = (t6576+t6577);
float t6579 = (2*3.1415927);
float t6580 = (t6578+t6579);
float t6581 = mod(t6580,2);
float t6582 = (t6581*3.1415927);
float t6583 = (2*3.1415927);
float t6584 = (t6582/t6583);
float t6585 = (t6575*t6575);
float t6586 = (t6521*t6573);
float t6587 = (t6523+t6586);
float t6588 = (t6587*t6587);
float t6589 = (t6585+t6588);
float t6590 = (t6529*t6573);
float t6591 = (t6531+t6590);
float t6592 = (t6591*t6591);
float t6593 = (t6589+t6592);
float t6594 = sqrt(t6593);
float t6595 = (t6594*t6594);
float t6596 = sqrt(t6595);
float t6597 = (t6596-float(2.6));
float t6598 = (t6597/float(11.4));
vec4 t6599 = texture(s4,vec2(t6584,t6598));
t6568 = t6599.x;
t6569 = t6599.y;
t6570 = t6599.z;
float t6600;
if(t6567){
t6600 = 1;
} else {
t6600 = 0;
}
float t6601 = (t6599.x*t6599.x);
float t6602 = (t6599.y*t6599.y);
float t6603 = (t6601+t6602);
float t6604 = (t6599.z*t6599.z);
float t6605 = (t6603+t6604);
float t6606 = sqrt(t6605);
float t6607 = (t6606*t6606);
float t6608 = (t6607/float(3.0));
bool t6609 = (t6608<=1);
float t6610;
if(t6609){
t6610 = t6608;
} else {
t6610 = 1;
}
bool t6611 = (t6610>=0);
float t6612;
if(t6611){
t6612 = t6610;
} else {
t6612 = 0;
}
float t6613 = (t6600*t6612);
t6571 = t6613;
} else {
t6568 = 0;
t6569 = 0;
t6570 = 0;
t6571 = 0;
}
float t6614 = (1-t6552);
float t6615 = (t6549*t6614);
float t6616 = (t6552+t6615);
float t6617 = (1-t6616);
float t6618 = (t6571*t6617);
float t6619 = (t6568*t6618);
float t6620 = (t6556+t6619);
float t6621 = (-float(1.5));
float t6622 = (t6621*t180);
float t6623 = (t6622*t6516);
float t6624 = pow(t6535,float(2.5));
float t6625 = (t6623/t6624);
float t6626 = (t6625*float(0.16));
float t6627 = (t6514+t6626);
float t6628 = (t6627*float(0.16));
float t6629 = (t6516+t6628);
float t6630 = (t6629*t6629);
float t6631 = (t6622*t6523);
float t6632 = (t6631/t6624);
float t6633 = (t6632*float(0.16));
float t6634 = (t6521+t6633);
float t6635 = (t6634*float(0.16));
float t6636 = (t6523+t6635);
float t6637 = (t6636*t6636);
float t6638 = (t6630+t6637);
float t6639 = (t6622*t6531);
float t6640 = (t6639/t6624);
float t6641 = (t6640*float(0.16));
float t6642 = (t6529+t6641);
float t6643 = (t6642*float(0.16));
float t6644 = (t6531+t6643);
float t6645 = (t6644*t6644);
float t6646 = (t6638+t6645);
float t6647 = sqrt(t6646);
float t6648 = (t6647*t6647);
bool t6649 = (t6648<1);
float t6650 = (t6516*t6516);
float t6651 = (t6523*t6523);
float t6652 = (t6650+t6651);
float t6653 = (t6531*t6531);
float t6654 = (t6652+t6653);
float t6655 = sqrt(t6654);
float t6656 = (t6655*t6655);
bool t6657 = (t6656>1);
bool t6658 = (t6649&&t6657);
float t6659;
float t6660;
float t6661;
float t6662;
if(t6658){
t6659 = 0;
t6660 = 0;
t6661 = 0;
t6662 = 1;
} else {
t6659 = 0;
t6660 = 0;
t6661 = 0;
t6662 = 0;
}
float t6663 = (1-t6616);
float t6664 = (t6571*t6663);
float t6665 = (t6616+t6664);
float t6666 = (1-t6665);
float t6667 = (t6662*t6666);
float t6668 = (t6659*t6667);
float t6669 = (t6620+t6668);
bool t6670 = (t6523>0);
bool t6671 = (t6636>0);
bool t6672 = (!t6671);
bool t6673 = (t6670&&t6672);
bool t6674 = (!t6670);
bool t6675 = (t6671&&t6674);
bool t6676 = (t6673||t6675);
bool t6677 = (t6648<196);
bool t6678 = (t6648>float(6.76));
bool t6679 = (t6677&&t6678);
bool t6680 = (t6676&&t6679);
float t6681;
float t6682;
float t6683;
float t6684;
if(t6680){
float t6685 = (t6636/t6634);
float t6686 = (-t6685);
float t6687 = (t6627*t6686);
float t6688 = (t6629+t6687);
float t6689 = atan(t6688,t6644);
float t6690 = (u1.u0/30);
float t6691 = (t6689+t6690);
float t6692 = (2*3.1415927);
float t6693 = (t6691+t6692);
float t6694 = mod(t6693,2);
float t6695 = (t6694*3.1415927);
float t6696 = (2*3.1415927);
float t6697 = (t6695/t6696);
float t6698 = (t6688*t6688);
float t6699 = (t6634*t6686);
float t6700 = (t6636+t6699);
float t6701 = (t6700*t6700);
float t6702 = (t6698+t6701);
float t6703 = (t6642*t6686);
float t6704 = (t6644+t6703);
float t6705 = (t6704*t6704);
float t6706 = (t6702+t6705);
float t6707 = sqrt(t6706);
float t6708 = (t6707*t6707);
float t6709 = sqrt(t6708);
float t6710 = (t6709-float(2.6));
float t6711 = (t6710/float(11.4));
vec4 t6712 = texture(s4,vec2(t6697,t6711));
t6681 = t6712.x;
t6682 = t6712.y;
t6683 = t6712.z;
float t6713;
if(t6680){
t6713 = 1;
} else {
t6713 = 0;
}
float t6714 = (t6712.x*t6712.x);
float t6715 = (t6712.y*t6712.y);
float t6716 = (t6714+t6715);
float t6717 = (t6712.z*t6712.z);
float t6718 = (t6716+t6717);
float t6719 = sqrt(t6718);
float t6720 = (t6719*t6719);
float t6721 = (t6720/float(3.0));
bool t6722 = (t6721<=1);
float t6723;
if(t6722){
t6723 = t6721;
} else {
t6723 = 1;
}
bool t6724 = (t6723>=0);
float t6725;
if(t6724){
t6725 = t6723;
} else {
t6725 = 0;
}
float t6726 = (t6713*t6725);
t6684 = t6726;
} else {
t6681 = 0;
t6682 = 0;
t6683 = 0;
t6684 = 0;
}
float t6727 = (1-t6665);
float t6728 = (t6662*t6727);
float t6729 = (t6665+t6728);
float t6730 = (1-t6729);
float t6731 = (t6684*t6730);
float t6732 = (t6681*t6731);
float t6733 = (t6669+t6732);
float t6734 = (-float(1.5));
float t6735 = (t6734*t180);
float t6736 = (t6735*t6629);
float t6737 = pow(t6648,float(2.5));
float t6738 = (t6736/t6737);
float t6739 = (t6738*float(0.16));
float t6740 = (t6627+t6739);
float t6741 = (t6740*float(0.16));
float t6742 = (t6629+t6741);
float t6743 = (t6742*t6742);
float t6744 = (t6735*t6636);
float t6745 = (t6744/t6737);
float t6746 = (t6745*float(0.16));
float t6747 = (t6634+t6746);
float t6748 = (t6747*float(0.16));
float t6749 = (t6636+t6748);
float t6750 = (t6749*t6749);
float t6751 = (t6743+t6750);
float t6752 = (t6735*t6644);
float t6753 = (t6752/t6737);
float t6754 = (t6753*float(0.16));
float t6755 = (t6642+t6754);
float t6756 = (t6755*float(0.16));
float t6757 = (t6644+t6756);
float t6758 = (t6757*t6757);
float t6759 = (t6751+t6758);
float t6760 = sqrt(t6759);
float t6761 = (t6760*t6760);
bool t6762 = (t6761<1);
float t6763 = (t6629*t6629);
float t6764 = (t6636*t6636);
float t6765 = (t6763+t6764);
float t6766 = (t6644*t6644);
float t6767 = (t6765+t6766);
float t6768 = sqrt(t6767);
float t6769 = (t6768*t6768);
bool t6770 = (t6769>1);
bool t6771 = (t6762&&t6770);
float t6772;
float t6773;
float t6774;
float t6775;
if(t6771){
t6772 = 0;
t6773 = 0;
t6774 = 0;
t6775 = 1;
} else {
t6772 = 0;
t6773 = 0;
t6774 = 0;
t6775 = 0;
}
float t6776 = (1-t6729);
float t6777 = (t6684*t6776);
float t6778 = (t6729+t6777);
float t6779 = (1-t6778);
float t6780 = (t6775*t6779);
float t6781 = (t6772*t6780);
float t6782 = (t6733+t6781);
bool t6783 = (t6636>0);
bool t6784 = (t6749>0);
bool t6785 = (!t6784);
bool t6786 = (t6783&&t6785);
bool t6787 = (!t6783);
bool t6788 = (t6784&&t6787);
bool t6789 = (t6786||t6788);
bool t6790 = (t6761<196);
bool t6791 = (t6761>float(6.76));
bool t6792 = (t6790&&t6791);
bool t6793 = (t6789&&t6792);
float t6794;
float t6795;
float t6796;
float t6797;
if(t6793){
float t6798 = (t6749/t6747);
float t6799 = (-t6798);
float t6800 = (t6740*t6799);
float t6801 = (t6742+t6800);
float t6802 = atan(t6801,t6757);
float t6803 = (u1.u0/30);
float t6804 = (t6802+t6803);
float t6805 = (2*3.1415927);
float t6806 = (t6804+t6805);
float t6807 = mod(t6806,2);
float t6808 = (t6807*3.1415927);
float t6809 = (2*3.1415927);
float t6810 = (t6808/t6809);
float t6811 = (t6801*t6801);
float t6812 = (t6747*t6799);
float t6813 = (t6749+t6812);
float t6814 = (t6813*t6813);
float t6815 = (t6811+t6814);
float t6816 = (t6755*t6799);
float t6817 = (t6757+t6816);
float t6818 = (t6817*t6817);
float t6819 = (t6815+t6818);
float t6820 = sqrt(t6819);
float t6821 = (t6820*t6820);
float t6822 = sqrt(t6821);
float t6823 = (t6822-float(2.6));
float t6824 = (t6823/float(11.4));
vec4 t6825 = texture(s4,vec2(t6810,t6824));
t6794 = t6825.x;
t6795 = t6825.y;
t6796 = t6825.z;
float t6826;
if(t6793){
t6826 = 1;
} else {
t6826 = 0;
}
float t6827 = (t6825.x*t6825.x);
float t6828 = (t6825.y*t6825.y);
float t6829 = (t6827+t6828);
float t6830 = (t6825.z*t6825.z);
float t6831 = (t6829+t6830);
float t6832 = sqrt(t6831);
float t6833 = (t6832*t6832);
float t6834 = (t6833/float(3.0));
bool t6835 = (t6834<=1);
float t6836;
if(t6835){
t6836 = t6834;
} else {
t6836 = 1;
}
bool t6837 = (t6836>=0);
float t6838;
if(t6837){
t6838 = t6836;
} else {
t6838 = 0;
}
float t6839 = (t6826*t6838);
t6797 = t6839;
} else {
t6794 = 0;
t6795 = 0;
t6796 = 0;
t6797 = 0;
}
float t6840 = (1-t6778);
float t6841 = (t6775*t6840);
float t6842 = (t6778+t6841);
float t6843 = (1-t6842);
float t6844 = (t6797*t6843);
float t6845 = (t6794*t6844);
float t6846 = (t6782+t6845);
float t6847 = (-float(1.5));
float t6848 = (t6847*t180);
float t6849 = (t6848*t6742);
float t6850 = pow(t6761,float(2.5));
float t6851 = (t6849/t6850);
float t6852 = (t6851*float(0.16));
float t6853 = (t6740+t6852);
float t6854 = (t6853*float(0.16));
float t6855 = (t6742+t6854);
float t6856 = (t6855*t6855);
float t6857 = (t6848*t6749);
float t6858 = (t6857/t6850);
float t6859 = (t6858*float(0.16));
float t6860 = (t6747+t6859);
float t6861 = (t6860*float(0.16));
float t6862 = (t6749+t6861);
float t6863 = (t6862*t6862);
float t6864 = (t6856+t6863);
float t6865 = (t6848*t6757);
float t6866 = (t6865/t6850);
float t6867 = (t6866*float(0.16));
float t6868 = (t6755+t6867);
float t6869 = (t6868*float(0.16));
float t6870 = (t6757+t6869);
float t6871 = (t6870*t6870);
float t6872 = (t6864+t6871);
float t6873 = sqrt(t6872);
float t6874 = (t6873*t6873);
bool t6875 = (t6874<1);
float t6876 = (t6742*t6742);
float t6877 = (t6749*t6749);
float t6878 = (t6876+t6877);
float t6879 = (t6757*t6757);
float t6880 = (t6878+t6879);
float t6881 = sqrt(t6880);
float t6882 = (t6881*t6881);
bool t6883 = (t6882>1);
bool t6884 = (t6875&&t6883);
float t6885;
float t6886;
float t6887;
float t6888;
if(t6884){
t6885 = 0;
t6886 = 0;
t6887 = 0;
t6888 = 1;
} else {
t6885 = 0;
t6886 = 0;
t6887 = 0;
t6888 = 0;
}
float t6889 = (1-t6842);
float t6890 = (t6797*t6889);
float t6891 = (t6842+t6890);
float t6892 = (1-t6891);
float t6893 = (t6888*t6892);
float t6894 = (t6885*t6893);
float t6895 = (t6846+t6894);
bool t6896 = (t6749>0);
bool t6897 = (t6862>0);
bool t6898 = (!t6897);
bool t6899 = (t6896&&t6898);
bool t6900 = (!t6896);
bool t6901 = (t6897&&t6900);
bool t6902 = (t6899||t6901);
bool t6903 = (t6874<196);
bool t6904 = (t6874>float(6.76));
bool t6905 = (t6903&&t6904);
bool t6906 = (t6902&&t6905);
float t6907;
float t6908;
float t6909;
float t6910;
if(t6906){
float t6911 = (t6862/t6860);
float t6912 = (-t6911);
float t6913 = (t6853*t6912);
float t6914 = (t6855+t6913);
float t6915 = atan(t6914,t6870);
float t6916 = (u1.u0/30);
float t6917 = (t6915+t6916);
float t6918 = (2*3.1415927);
float t6919 = (t6917+t6918);
float t6920 = mod(t6919,2);
float t6921 = (t6920*3.1415927);
float t6922 = (2*3.1415927);
float t6923 = (t6921/t6922);
float t6924 = (t6914*t6914);
float t6925 = (t6860*t6912);
float t6926 = (t6862+t6925);
float t6927 = (t6926*t6926);
float t6928 = (t6924+t6927);
float t6929 = (t6868*t6912);
float t6930 = (t6870+t6929);
float t6931 = (t6930*t6930);
float t6932 = (t6928+t6931);
float t6933 = sqrt(t6932);
float t6934 = (t6933*t6933);
float t6935 = sqrt(t6934);
float t6936 = (t6935-float(2.6));
float t6937 = (t6936/float(11.4));
vec4 t6938 = texture(s4,vec2(t6923,t6937));
t6907 = t6938.x;
t6908 = t6938.y;
t6909 = t6938.z;
float t6939;
if(t6906){
t6939 = 1;
} else {
t6939 = 0;
}
float t6940 = (t6938.x*t6938.x);
float t6941 = (t6938.y*t6938.y);
float t6942 = (t6940+t6941);
float t6943 = (t6938.z*t6938.z);
float t6944 = (t6942+t6943);
float t6945 = sqrt(t6944);
float t6946 = (t6945*t6945);
float t6947 = (t6946/float(3.0));
bool t6948 = (t6947<=1);
float t6949;
if(t6948){
t6949 = t6947;
} else {
t6949 = 1;
}
bool t6950 = (t6949>=0);
float t6951;
if(t6950){
t6951 = t6949;
} else {
t6951 = 0;
}
float t6952 = (t6939*t6951);
t6910 = t6952;
} else {
t6907 = 0;
t6908 = 0;
t6909 = 0;
t6910 = 0;
}
float t6953 = (1-t6891);
float t6954 = (t6888*t6953);
float t6955 = (t6891+t6954);
float t6956 = (1-t6955);
float t6957 = (t6910*t6956);
float t6958 = (t6907*t6957);
float t6959 = (t6895+t6958);
float t6960 = (-float(1.5));
float t6961 = (t6960*t180);
float t6962 = (t6961*t6855);
float t6963 = pow(t6874,float(2.5));
float t6964 = (t6962/t6963);
float t6965 = (t6964*float(0.16));
float t6966 = (t6853+t6965);
float t6967 = (t6966*float(0.16));
float t6968 = (t6855+t6967);
float t6969 = (t6968*t6968);
float t6970 = (t6961*t6862);
float t6971 = (t6970/t6963);
float t6972 = (t6971*float(0.16));
float t6973 = (t6860+t6972);
float t6974 = (t6973*float(0.16));
float t6975 = (t6862+t6974);
float t6976 = (t6975*t6975);
float t6977 = (t6969+t6976);
float t6978 = (t6961*t6870);
float t6979 = (t6978/t6963);
float t6980 = (t6979*float(0.16));
float t6981 = (t6868+t6980);
float t6982 = (t6981*float(0.16));
float t6983 = (t6870+t6982);
float t6984 = (t6983*t6983);
float t6985 = (t6977+t6984);
float t6986 = sqrt(t6985);
float t6987 = (t6986*t6986);
bool t6988 = (t6987<1);
float t6989 = (t6855*t6855);
float t6990 = (t6862*t6862);
float t6991 = (t6989+t6990);
float t6992 = (t6870*t6870);
float t6993 = (t6991+t6992);
float t6994 = sqrt(t6993);
float t6995 = (t6994*t6994);
bool t6996 = (t6995>1);
bool t6997 = (t6988&&t6996);
float t6998;
float t6999;
float t7000;
float t7001;
if(t6997){
t6998 = 0;
t6999 = 0;
t7000 = 0;
t7001 = 1;
} else {
t6998 = 0;
t6999 = 0;
t7000 = 0;
t7001 = 0;
}
float t7002 = (1-t6955);
float t7003 = (t6910*t7002);
float t7004 = (t6955+t7003);
float t7005 = (1-t7004);
float t7006 = (t7001*t7005);
float t7007 = (t6998*t7006);
float t7008 = (t6959+t7007);
bool t7009 = (t6862>0);
bool t7010 = (t6975>0);
bool t7011 = (!t7010);
bool t7012 = (t7009&&t7011);
bool t7013 = (!t7009);
bool t7014 = (t7010&&t7013);
bool t7015 = (t7012||t7014);
bool t7016 = (t6987<196);
bool t7017 = (t6987>float(6.76));
bool t7018 = (t7016&&t7017);
bool t7019 = (t7015&&t7018);
float t7020;
float t7021;
float t7022;
float t7023;
if(t7019){
float t7024 = (t6975/t6973);
float t7025 = (-t7024);
float t7026 = (t6966*t7025);
float t7027 = (t6968+t7026);
float t7028 = atan(t7027,t6983);
float t7029 = (u1.u0/30);
float t7030 = (t7028+t7029);
float t7031 = (2*3.1415927);
float t7032 = (t7030+t7031);
float t7033 = mod(t7032,2);
float t7034 = (t7033*3.1415927);
float t7035 = (2*3.1415927);
float t7036 = (t7034/t7035);
float t7037 = (t7027*t7027);
float t7038 = (t6973*t7025);
float t7039 = (t6975+t7038);
float t7040 = (t7039*t7039);
float t7041 = (t7037+t7040);
float t7042 = (t6981*t7025);
float t7043 = (t6983+t7042);
float t7044 = (t7043*t7043);
float t7045 = (t7041+t7044);
float t7046 = sqrt(t7045);
float t7047 = (t7046*t7046);
float t7048 = sqrt(t7047);
float t7049 = (t7048-float(2.6));
float t7050 = (t7049/float(11.4));
vec4 t7051 = texture(s4,vec2(t7036,t7050));
t7020 = t7051.x;
t7021 = t7051.y;
t7022 = t7051.z;
float t7052;
if(t7019){
t7052 = 1;
} else {
t7052 = 0;
}
float t7053 = (t7051.x*t7051.x);
float t7054 = (t7051.y*t7051.y);
float t7055 = (t7053+t7054);
float t7056 = (t7051.z*t7051.z);
float t7057 = (t7055+t7056);
float t7058 = sqrt(t7057);
float t7059 = (t7058*t7058);
float t7060 = (t7059/float(3.0));
bool t7061 = (t7060<=1);
float t7062;
if(t7061){
t7062 = t7060;
} else {
t7062 = 1;
}
bool t7063 = (t7062>=0);
float t7064;
if(t7063){
t7064 = t7062;
} else {
t7064 = 0;
}
float t7065 = (t7052*t7064);
t7023 = t7065;
} else {
t7020 = 0;
t7021 = 0;
t7022 = 0;
t7023 = 0;
}
float t7066 = (1-t7004);
float t7067 = (t7001*t7066);
float t7068 = (t7004+t7067);
float t7069 = (1-t7068);
float t7070 = (t7023*t7069);
float t7071 = (t7020*t7070);
float t7072 = (t7008+t7071);
float t7073 = (-float(1.5));
float t7074 = (t7073*t180);
float t7075 = (t7074*t6968);
float t7076 = pow(t6987,float(2.5));
float t7077 = (t7075/t7076);
float t7078 = (t7077*float(0.16));
float t7079 = (t6966+t7078);
float t7080 = (t7079*float(0.16));
float t7081 = (t6968+t7080);
float t7082 = (t7081*t7081);
float t7083 = (t7074*t6975);
float t7084 = (t7083/t7076);
float t7085 = (t7084*float(0.16));
float t7086 = (t6973+t7085);
float t7087 = (t7086*float(0.16));
float t7088 = (t6975+t7087);
float t7089 = (t7088*t7088);
float t7090 = (t7082+t7089);
float t7091 = (t7074*t6983);
float t7092 = (t7091/t7076);
float t7093 = (t7092*float(0.16));
float t7094 = (t6981+t7093);
float t7095 = (t7094*float(0.16));
float t7096 = (t6983+t7095);
float t7097 = (t7096*t7096);
float t7098 = (t7090+t7097);
float t7099 = sqrt(t7098);
float t7100 = (t7099*t7099);
bool t7101 = (t7100<1);
float t7102 = (t6968*t6968);
float t7103 = (t6975*t6975);
float t7104 = (t7102+t7103);
float t7105 = (t6983*t6983);
float t7106 = (t7104+t7105);
float t7107 = sqrt(t7106);
float t7108 = (t7107*t7107);
bool t7109 = (t7108>1);
bool t7110 = (t7101&&t7109);
float t7111;
float t7112;
float t7113;
float t7114;
if(t7110){
t7111 = 0;
t7112 = 0;
t7113 = 0;
t7114 = 1;
} else {
t7111 = 0;
t7112 = 0;
t7113 = 0;
t7114 = 0;
}
float t7115 = (1-t7068);
float t7116 = (t7023*t7115);
float t7117 = (t7068+t7116);
float t7118 = (1-t7117);
float t7119 = (t7114*t7118);
float t7120 = (t7111*t7119);
float t7121 = (t7072+t7120);
bool t7122 = (t6975>0);
bool t7123 = (t7088>0);
bool t7124 = (!t7123);
bool t7125 = (t7122&&t7124);
bool t7126 = (!t7122);
bool t7127 = (t7123&&t7126);
bool t7128 = (t7125||t7127);
bool t7129 = (t7100<196);
bool t7130 = (t7100>float(6.76));
bool t7131 = (t7129&&t7130);
bool t7132 = (t7128&&t7131);
float t7133;
float t7134;
float t7135;
float t7136;
if(t7132){
float t7137 = (t7088/t7086);
float t7138 = (-t7137);
float t7139 = (t7079*t7138);
float t7140 = (t7081+t7139);
float t7141 = atan(t7140,t7096);
float t7142 = (u1.u0/30);
float t7143 = (t7141+t7142);
float t7144 = (2*3.1415927);
float t7145 = (t7143+t7144);
float t7146 = mod(t7145,2);
float t7147 = (t7146*3.1415927);
float t7148 = (2*3.1415927);
float t7149 = (t7147/t7148);
float t7150 = (t7140*t7140);
float t7151 = (t7086*t7138);
float t7152 = (t7088+t7151);
float t7153 = (t7152*t7152);
float t7154 = (t7150+t7153);
float t7155 = (t7094*t7138);
float t7156 = (t7096+t7155);
float t7157 = (t7156*t7156);
float t7158 = (t7154+t7157);
float t7159 = sqrt(t7158);
float t7160 = (t7159*t7159);
float t7161 = sqrt(t7160);
float t7162 = (t7161-float(2.6));
float t7163 = (t7162/float(11.4));
vec4 t7164 = texture(s4,vec2(t7149,t7163));
t7133 = t7164.x;
t7134 = t7164.y;
t7135 = t7164.z;
float t7165;
if(t7132){
t7165 = 1;
} else {
t7165 = 0;
}
float t7166 = (t7164.x*t7164.x);
float t7167 = (t7164.y*t7164.y);
float t7168 = (t7166+t7167);
float t7169 = (t7164.z*t7164.z);
float t7170 = (t7168+t7169);
float t7171 = sqrt(t7170);
float t7172 = (t7171*t7171);
float t7173 = (t7172/float(3.0));
bool t7174 = (t7173<=1);
float t7175;
if(t7174){
t7175 = t7173;
} else {
t7175 = 1;
}
bool t7176 = (t7175>=0);
float t7177;
if(t7176){
t7177 = t7175;
} else {
t7177 = 0;
}
float t7178 = (t7165*t7177);
t7136 = t7178;
} else {
t7133 = 0;
t7134 = 0;
t7135 = 0;
t7136 = 0;
}
float t7179 = (1-t7117);
float t7180 = (t7114*t7179);
float t7181 = (t7117+t7180);
float t7182 = (1-t7181);
float t7183 = (t7136*t7182);
float t7184 = (t7133*t7183);
float t7185 = (t7121+t7184);
float t7186 = (-float(1.5));
float t7187 = (t7186*t180);
float t7188 = (t7187*t7081);
float t7189 = pow(t7100,float(2.5));
float t7190 = (t7188/t7189);
float t7191 = (t7190*float(0.16));
float t7192 = (t7079+t7191);
float t7193 = (t7192*float(0.16));
float t7194 = (t7081+t7193);
float t7195 = (t7194*t7194);
float t7196 = (t7187*t7088);
float t7197 = (t7196/t7189);
float t7198 = (t7197*float(0.16));
float t7199 = (t7086+t7198);
float t7200 = (t7199*float(0.16));
float t7201 = (t7088+t7200);
float t7202 = (t7201*t7201);
float t7203 = (t7195+t7202);
float t7204 = (t7187*t7096);
float t7205 = (t7204/t7189);
float t7206 = (t7205*float(0.16));
float t7207 = (t7094+t7206);
float t7208 = (t7207*float(0.16));
float t7209 = (t7096+t7208);
float t7210 = (t7209*t7209);
float t7211 = (t7203+t7210);
float t7212 = sqrt(t7211);
float t7213 = (t7212*t7212);
bool t7214 = (t7213<1);
float t7215 = (t7081*t7081);
float t7216 = (t7088*t7088);
float t7217 = (t7215+t7216);
float t7218 = (t7096*t7096);
float t7219 = (t7217+t7218);
float t7220 = sqrt(t7219);
float t7221 = (t7220*t7220);
bool t7222 = (t7221>1);
bool t7223 = (t7214&&t7222);
float t7224;
float t7225;
float t7226;
float t7227;
if(t7223){
t7224 = 0;
t7225 = 0;
t7226 = 0;
t7227 = 1;
} else {
t7224 = 0;
t7225 = 0;
t7226 = 0;
t7227 = 0;
}
float t7228 = (1-t7181);
float t7229 = (t7136*t7228);
float t7230 = (t7181+t7229);
float t7231 = (1-t7230);
float t7232 = (t7227*t7231);
float t7233 = (t7224*t7232);
float t7234 = (t7185+t7233);
bool t7235 = (t7088>0);
bool t7236 = (t7201>0);
bool t7237 = (!t7236);
bool t7238 = (t7235&&t7237);
bool t7239 = (!t7235);
bool t7240 = (t7236&&t7239);
bool t7241 = (t7238||t7240);
bool t7242 = (t7213<196);
bool t7243 = (t7213>float(6.76));
bool t7244 = (t7242&&t7243);
bool t7245 = (t7241&&t7244);
float t7246;
float t7247;
float t7248;
float t7249;
if(t7245){
float t7250 = (t7201/t7199);
float t7251 = (-t7250);
float t7252 = (t7192*t7251);
float t7253 = (t7194+t7252);
float t7254 = atan(t7253,t7209);
float t7255 = (u1.u0/30);
float t7256 = (t7254+t7255);
float t7257 = (2*3.1415927);
float t7258 = (t7256+t7257);
float t7259 = mod(t7258,2);
float t7260 = (t7259*3.1415927);
float t7261 = (2*3.1415927);
float t7262 = (t7260/t7261);
float t7263 = (t7253*t7253);
float t7264 = (t7199*t7251);
float t7265 = (t7201+t7264);
float t7266 = (t7265*t7265);
float t7267 = (t7263+t7266);
float t7268 = (t7207*t7251);
float t7269 = (t7209+t7268);
float t7270 = (t7269*t7269);
float t7271 = (t7267+t7270);
float t7272 = sqrt(t7271);
float t7273 = (t7272*t7272);
float t7274 = sqrt(t7273);
float t7275 = (t7274-float(2.6));
float t7276 = (t7275/float(11.4));
vec4 t7277 = texture(s4,vec2(t7262,t7276));
t7246 = t7277.x;
t7247 = t7277.y;
t7248 = t7277.z;
float t7278;
if(t7245){
t7278 = 1;
} else {
t7278 = 0;
}
float t7279 = (t7277.x*t7277.x);
float t7280 = (t7277.y*t7277.y);
float t7281 = (t7279+t7280);
float t7282 = (t7277.z*t7277.z);
float t7283 = (t7281+t7282);
float t7284 = sqrt(t7283);
float t7285 = (t7284*t7284);
float t7286 = (t7285/float(3.0));
bool t7287 = (t7286<=1);
float t7288;
if(t7287){
t7288 = t7286;
} else {
t7288 = 1;
}
bool t7289 = (t7288>=0);
float t7290;
if(t7289){
t7290 = t7288;
} else {
t7290 = 0;
}
float t7291 = (t7278*t7290);
t7249 = t7291;
} else {
t7246 = 0;
t7247 = 0;
t7248 = 0;
t7249 = 0;
}
float t7292 = (1-t7230);
float t7293 = (t7227*t7292);
float t7294 = (t7230+t7293);
float t7295 = (1-t7294);
float t7296 = (t7249*t7295);
float t7297 = (t7246*t7296);
float t7298 = (t7234+t7297);
float t7299 = (-float(1.5));
float t7300 = (t7299*t180);
float t7301 = (t7300*t7194);
float t7302 = pow(t7213,float(2.5));
float t7303 = (t7301/t7302);
float t7304 = (t7303*float(0.16));
float t7305 = (t7192+t7304);
float t7306 = (t7305*float(0.16));
float t7307 = (t7194+t7306);
float t7308 = (t7307*t7307);
float t7309 = (t7300*t7201);
float t7310 = (t7309/t7302);
float t7311 = (t7310*float(0.16));
float t7312 = (t7199+t7311);
float t7313 = (t7312*float(0.16));
float t7314 = (t7201+t7313);
float t7315 = (t7314*t7314);
float t7316 = (t7308+t7315);
float t7317 = (t7300*t7209);
float t7318 = (t7317/t7302);
float t7319 = (t7318*float(0.16));
float t7320 = (t7207+t7319);
float t7321 = (t7320*float(0.16));
float t7322 = (t7209+t7321);
float t7323 = (t7322*t7322);
float t7324 = (t7316+t7323);
float t7325 = sqrt(t7324);
float t7326 = (t7325*t7325);
bool t7327 = (t7326<1);
float t7328 = (t7194*t7194);
float t7329 = (t7201*t7201);
float t7330 = (t7328+t7329);
float t7331 = (t7209*t7209);
float t7332 = (t7330+t7331);
float t7333 = sqrt(t7332);
float t7334 = (t7333*t7333);
bool t7335 = (t7334>1);
bool t7336 = (t7327&&t7335);
float t7337;
float t7338;
float t7339;
float t7340;
if(t7336){
t7337 = 0;
t7338 = 0;
t7339 = 0;
t7340 = 1;
} else {
t7337 = 0;
t7338 = 0;
t7339 = 0;
t7340 = 0;
}
float t7341 = (1-t7294);
float t7342 = (t7249*t7341);
float t7343 = (t7294+t7342);
float t7344 = (1-t7343);
float t7345 = (t7340*t7344);
float t7346 = (t7337*t7345);
float t7347 = (t7298+t7346);
bool t7348 = (t7201>0);
bool t7349 = (t7314>0);
bool t7350 = (!t7349);
bool t7351 = (t7348&&t7350);
bool t7352 = (!t7348);
bool t7353 = (t7349&&t7352);
bool t7354 = (t7351||t7353);
bool t7355 = (t7326<196);
bool t7356 = (t7326>float(6.76));
bool t7357 = (t7355&&t7356);
bool t7358 = (t7354&&t7357);
float t7359;
float t7360;
float t7361;
float t7362;
if(t7358){
float t7363 = (t7314/t7312);
float t7364 = (-t7363);
float t7365 = (t7305*t7364);
float t7366 = (t7307+t7365);
float t7367 = atan(t7366,t7322);
float t7368 = (u1.u0/30);
float t7369 = (t7367+t7368);
float t7370 = (2*3.1415927);
float t7371 = (t7369+t7370);
float t7372 = mod(t7371,2);
float t7373 = (t7372*3.1415927);
float t7374 = (2*3.1415927);
float t7375 = (t7373/t7374);
float t7376 = (t7366*t7366);
float t7377 = (t7312*t7364);
float t7378 = (t7314+t7377);
float t7379 = (t7378*t7378);
float t7380 = (t7376+t7379);
float t7381 = (t7320*t7364);
float t7382 = (t7322+t7381);
float t7383 = (t7382*t7382);
float t7384 = (t7380+t7383);
float t7385 = sqrt(t7384);
float t7386 = (t7385*t7385);
float t7387 = sqrt(t7386);
float t7388 = (t7387-float(2.6));
float t7389 = (t7388/float(11.4));
vec4 t7390 = texture(s4,vec2(t7375,t7389));
t7359 = t7390.x;
t7360 = t7390.y;
t7361 = t7390.z;
float t7391;
if(t7358){
t7391 = 1;
} else {
t7391 = 0;
}
float t7392 = (t7390.x*t7390.x);
float t7393 = (t7390.y*t7390.y);
float t7394 = (t7392+t7393);
float t7395 = (t7390.z*t7390.z);
float t7396 = (t7394+t7395);
float t7397 = sqrt(t7396);
float t7398 = (t7397*t7397);
float t7399 = (t7398/float(3.0));
bool t7400 = (t7399<=1);
float t7401;
if(t7400){
t7401 = t7399;
} else {
t7401 = 1;
}
bool t7402 = (t7401>=0);
float t7403;
if(t7402){
t7403 = t7401;
} else {
t7403 = 0;
}
float t7404 = (t7391*t7403);
t7362 = t7404;
} else {
t7359 = 0;
t7360 = 0;
t7361 = 0;
t7362 = 0;
}
float t7405 = (1-t7343);
float t7406 = (t7340*t7405);
float t7407 = (t7343+t7406);
float t7408 = (1-t7407);
float t7409 = (t7362*t7408);
float t7410 = (t7359*t7409);
float t7411 = (t7347+t7410);
float t7412 = (-float(1.5));
float t7413 = (t7412*t180);
float t7414 = (t7413*t7307);
float t7415 = pow(t7326,float(2.5));
float t7416 = (t7414/t7415);
float t7417 = (t7416*float(0.16));
float t7418 = (t7305+t7417);
float t7419 = (t7418*float(0.16));
float t7420 = (t7307+t7419);
float t7421 = (t7420*t7420);
float t7422 = (t7413*t7314);
float t7423 = (t7422/t7415);
float t7424 = (t7423*float(0.16));
float t7425 = (t7312+t7424);
float t7426 = (t7425*float(0.16));
float t7427 = (t7314+t7426);
float t7428 = (t7427*t7427);
float t7429 = (t7421+t7428);
float t7430 = (t7413*t7322);
float t7431 = (t7430/t7415);
float t7432 = (t7431*float(0.16));
float t7433 = (t7320+t7432);
float t7434 = (t7433*float(0.16));
float t7435 = (t7322+t7434);
float t7436 = (t7435*t7435);
float t7437 = (t7429+t7436);
float t7438 = sqrt(t7437);
float t7439 = (t7438*t7438);
bool t7440 = (t7439<1);
float t7441 = (t7307*t7307);
float t7442 = (t7314*t7314);
float t7443 = (t7441+t7442);
float t7444 = (t7322*t7322);
float t7445 = (t7443+t7444);
float t7446 = sqrt(t7445);
float t7447 = (t7446*t7446);
bool t7448 = (t7447>1);
bool t7449 = (t7440&&t7448);
float t7450;
float t7451;
float t7452;
float t7453;
if(t7449){
t7450 = 0;
t7451 = 0;
t7452 = 0;
t7453 = 1;
} else {
t7450 = 0;
t7451 = 0;
t7452 = 0;
t7453 = 0;
}
float t7454 = (1-t7407);
float t7455 = (t7362*t7454);
float t7456 = (t7407+t7455);
float t7457 = (1-t7456);
float t7458 = (t7453*t7457);
float t7459 = (t7450*t7458);
float t7460 = (t7411+t7459);
bool t7461 = (t7314>0);
bool t7462 = (t7427>0);
bool t7463 = (!t7462);
bool t7464 = (t7461&&t7463);
bool t7465 = (!t7461);
bool t7466 = (t7462&&t7465);
bool t7467 = (t7464||t7466);
bool t7468 = (t7439<196);
bool t7469 = (t7439>float(6.76));
bool t7470 = (t7468&&t7469);
bool t7471 = (t7467&&t7470);
float t7472;
float t7473;
float t7474;
float t7475;
if(t7471){
float t7476 = (t7427/t7425);
float t7477 = (-t7476);
float t7478 = (t7418*t7477);
float t7479 = (t7420+t7478);
float t7480 = atan(t7479,t7435);
float t7481 = (u1.u0/30);
float t7482 = (t7480+t7481);
float t7483 = (2*3.1415927);
float t7484 = (t7482+t7483);
float t7485 = mod(t7484,2);
float t7486 = (t7485*3.1415927);
float t7487 = (2*3.1415927);
float t7488 = (t7486/t7487);
float t7489 = (t7479*t7479);
float t7490 = (t7425*t7477);
float t7491 = (t7427+t7490);
float t7492 = (t7491*t7491);
float t7493 = (t7489+t7492);
float t7494 = (t7433*t7477);
float t7495 = (t7435+t7494);
float t7496 = (t7495*t7495);
float t7497 = (t7493+t7496);
float t7498 = sqrt(t7497);
float t7499 = (t7498*t7498);
float t7500 = sqrt(t7499);
float t7501 = (t7500-float(2.6));
float t7502 = (t7501/float(11.4));
vec4 t7503 = texture(s4,vec2(t7488,t7502));
t7472 = t7503.x;
t7473 = t7503.y;
t7474 = t7503.z;
float t7504;
if(t7471){
t7504 = 1;
} else {
t7504 = 0;
}
float t7505 = (t7503.x*t7503.x);
float t7506 = (t7503.y*t7503.y);
float t7507 = (t7505+t7506);
float t7508 = (t7503.z*t7503.z);
float t7509 = (t7507+t7508);
float t7510 = sqrt(t7509);
float t7511 = (t7510*t7510);
float t7512 = (t7511/float(3.0));
bool t7513 = (t7512<=1);
float t7514;
if(t7513){
t7514 = t7512;
} else {
t7514 = 1;
}
bool t7515 = (t7514>=0);
float t7516;
if(t7515){
t7516 = t7514;
} else {
t7516 = 0;
}
float t7517 = (t7504*t7516);
t7475 = t7517;
} else {
t7472 = 0;
t7473 = 0;
t7474 = 0;
t7475 = 0;
}
float t7518 = (1-t7456);
float t7519 = (t7453*t7518);
float t7520 = (t7456+t7519);
float t7521 = (1-t7520);
float t7522 = (t7475*t7521);
float t7523 = (t7472*t7522);
float t7524 = (t7460+t7523);
float t7525 = (-float(1.5));
float t7526 = (t7525*t180);
float t7527 = (t7526*t7420);
float t7528 = pow(t7439,float(2.5));
float t7529 = (t7527/t7528);
float t7530 = (t7529*float(0.16));
float t7531 = (t7418+t7530);
float t7532 = (t7531*float(0.16));
float t7533 = (t7420+t7532);
float t7534 = (t7533*t7533);
float t7535 = (t7526*t7427);
float t7536 = (t7535/t7528);
float t7537 = (t7536*float(0.16));
float t7538 = (t7425+t7537);
float t7539 = (t7538*float(0.16));
float t7540 = (t7427+t7539);
float t7541 = (t7540*t7540);
float t7542 = (t7534+t7541);
float t7543 = (t7526*t7435);
float t7544 = (t7543/t7528);
float t7545 = (t7544*float(0.16));
float t7546 = (t7433+t7545);
float t7547 = (t7546*float(0.16));
float t7548 = (t7435+t7547);
float t7549 = (t7548*t7548);
float t7550 = (t7542+t7549);
float t7551 = sqrt(t7550);
float t7552 = (t7551*t7551);
bool t7553 = (t7552<1);
float t7554 = (t7420*t7420);
float t7555 = (t7427*t7427);
float t7556 = (t7554+t7555);
float t7557 = (t7435*t7435);
float t7558 = (t7556+t7557);
float t7559 = sqrt(t7558);
float t7560 = (t7559*t7559);
bool t7561 = (t7560>1);
bool t7562 = (t7553&&t7561);
float t7563;
float t7564;
float t7565;
float t7566;
if(t7562){
t7563 = 0;
t7564 = 0;
t7565 = 0;
t7566 = 1;
} else {
t7563 = 0;
t7564 = 0;
t7565 = 0;
t7566 = 0;
}
float t7567 = (1-t7520);
float t7568 = (t7475*t7567);
float t7569 = (t7520+t7568);
float t7570 = (1-t7569);
float t7571 = (t7566*t7570);
float t7572 = (t7563*t7571);
float t7573 = (t7524+t7572);
bool t7574 = (t7427>0);
bool t7575 = (t7540>0);
bool t7576 = (!t7575);
bool t7577 = (t7574&&t7576);
bool t7578 = (!t7574);
bool t7579 = (t7575&&t7578);
bool t7580 = (t7577||t7579);
bool t7581 = (t7552<196);
bool t7582 = (t7552>float(6.76));
bool t7583 = (t7581&&t7582);
bool t7584 = (t7580&&t7583);
float t7585;
float t7586;
float t7587;
float t7588;
if(t7584){
float t7589 = (t7540/t7538);
float t7590 = (-t7589);
float t7591 = (t7531*t7590);
float t7592 = (t7533+t7591);
float t7593 = atan(t7592,t7548);
float t7594 = (u1.u0/30);
float t7595 = (t7593+t7594);
float t7596 = (2*3.1415927);
float t7597 = (t7595+t7596);
float t7598 = mod(t7597,2);
float t7599 = (t7598*3.1415927);
float t7600 = (2*3.1415927);
float t7601 = (t7599/t7600);
float t7602 = (t7592*t7592);
float t7603 = (t7538*t7590);
float t7604 = (t7540+t7603);
float t7605 = (t7604*t7604);
float t7606 = (t7602+t7605);
float t7607 = (t7546*t7590);
float t7608 = (t7548+t7607);
float t7609 = (t7608*t7608);
float t7610 = (t7606+t7609);
float t7611 = sqrt(t7610);
float t7612 = (t7611*t7611);
float t7613 = sqrt(t7612);
float t7614 = (t7613-float(2.6));
float t7615 = (t7614/float(11.4));
vec4 t7616 = texture(s4,vec2(t7601,t7615));
t7585 = t7616.x;
t7586 = t7616.y;
t7587 = t7616.z;
float t7617;
if(t7584){
t7617 = 1;
} else {
t7617 = 0;
}
float t7618 = (t7616.x*t7616.x);
float t7619 = (t7616.y*t7616.y);
float t7620 = (t7618+t7619);
float t7621 = (t7616.z*t7616.z);
float t7622 = (t7620+t7621);
float t7623 = sqrt(t7622);
float t7624 = (t7623*t7623);
float t7625 = (t7624/float(3.0));
bool t7626 = (t7625<=1);
float t7627;
if(t7626){
t7627 = t7625;
} else {
t7627 = 1;
}
bool t7628 = (t7627>=0);
float t7629;
if(t7628){
t7629 = t7627;
} else {
t7629 = 0;
}
float t7630 = (t7617*t7629);
t7588 = t7630;
} else {
t7585 = 0;
t7586 = 0;
t7587 = 0;
t7588 = 0;
}
float t7631 = (1-t7569);
float t7632 = (t7566*t7631);
float t7633 = (t7569+t7632);
float t7634 = (1-t7633);
float t7635 = (t7588*t7634);
float t7636 = (t7585*t7635);
float t7637 = (t7573+t7636);
float t7638 = (-float(1.5));
float t7639 = (t7638*t180);
float t7640 = (t7639*t7533);
float t7641 = pow(t7552,float(2.5));
float t7642 = (t7640/t7641);
float t7643 = (t7642*float(0.16));
float t7644 = (t7531+t7643);
float t7645 = (t7644*float(0.16));
float t7646 = (t7533+t7645);
float t7647 = (t7646*t7646);
float t7648 = (t7639*t7540);
float t7649 = (t7648/t7641);
float t7650 = (t7649*float(0.16));
float t7651 = (t7538+t7650);
float t7652 = (t7651*float(0.16));
float t7653 = (t7540+t7652);
float t7654 = (t7653*t7653);
float t7655 = (t7647+t7654);
float t7656 = (t7639*t7548);
float t7657 = (t7656/t7641);
float t7658 = (t7657*float(0.16));
float t7659 = (t7546+t7658);
float t7660 = (t7659*float(0.16));
float t7661 = (t7548+t7660);
float t7662 = (t7661*t7661);
float t7663 = (t7655+t7662);
float t7664 = sqrt(t7663);
float t7665 = (t7664*t7664);
bool t7666 = (t7665<1);
float t7667 = (t7533*t7533);
float t7668 = (t7540*t7540);
float t7669 = (t7667+t7668);
float t7670 = (t7548*t7548);
float t7671 = (t7669+t7670);
float t7672 = sqrt(t7671);
float t7673 = (t7672*t7672);
bool t7674 = (t7673>1);
bool t7675 = (t7666&&t7674);
float t7676;
float t7677;
float t7678;
float t7679;
if(t7675){
t7676 = 0;
t7677 = 0;
t7678 = 0;
t7679 = 1;
} else {
t7676 = 0;
t7677 = 0;
t7678 = 0;
t7679 = 0;
}
float t7680 = (1-t7633);
float t7681 = (t7588*t7680);
float t7682 = (t7633+t7681);
float t7683 = (1-t7682);
float t7684 = (t7679*t7683);
float t7685 = (t7676*t7684);
float t7686 = (t7637+t7685);
bool t7687 = (t7540>0);
bool t7688 = (t7653>0);
bool t7689 = (!t7688);
bool t7690 = (t7687&&t7689);
bool t7691 = (!t7687);
bool t7692 = (t7688&&t7691);
bool t7693 = (t7690||t7692);
bool t7694 = (t7665<196);
bool t7695 = (t7665>float(6.76));
bool t7696 = (t7694&&t7695);
bool t7697 = (t7693&&t7696);
float t7698;
float t7699;
float t7700;
float t7701;
if(t7697){
float t7702 = (t7653/t7651);
float t7703 = (-t7702);
float t7704 = (t7644*t7703);
float t7705 = (t7646+t7704);
float t7706 = atan(t7705,t7661);
float t7707 = (u1.u0/30);
float t7708 = (t7706+t7707);
float t7709 = (2*3.1415927);
float t7710 = (t7708+t7709);
float t7711 = mod(t7710,2);
float t7712 = (t7711*3.1415927);
float t7713 = (2*3.1415927);
float t7714 = (t7712/t7713);
float t7715 = (t7705*t7705);
float t7716 = (t7651*t7703);
float t7717 = (t7653+t7716);
float t7718 = (t7717*t7717);
float t7719 = (t7715+t7718);
float t7720 = (t7659*t7703);
float t7721 = (t7661+t7720);
float t7722 = (t7721*t7721);
float t7723 = (t7719+t7722);
float t7724 = sqrt(t7723);
float t7725 = (t7724*t7724);
float t7726 = sqrt(t7725);
float t7727 = (t7726-float(2.6));
float t7728 = (t7727/float(11.4));
vec4 t7729 = texture(s4,vec2(t7714,t7728));
t7698 = t7729.x;
t7699 = t7729.y;
t7700 = t7729.z;
float t7730;
if(t7697){
t7730 = 1;
} else {
t7730 = 0;
}
float t7731 = (t7729.x*t7729.x);
float t7732 = (t7729.y*t7729.y);
float t7733 = (t7731+t7732);
float t7734 = (t7729.z*t7729.z);
float t7735 = (t7733+t7734);
float t7736 = sqrt(t7735);
float t7737 = (t7736*t7736);
float t7738 = (t7737/float(3.0));
bool t7739 = (t7738<=1);
float t7740;
if(t7739){
t7740 = t7738;
} else {
t7740 = 1;
}
bool t7741 = (t7740>=0);
float t7742;
if(t7741){
t7742 = t7740;
} else {
t7742 = 0;
}
float t7743 = (t7730*t7742);
t7701 = t7743;
} else {
t7698 = 0;
t7699 = 0;
t7700 = 0;
t7701 = 0;
}
float t7744 = (1-t7682);
float t7745 = (t7679*t7744);
float t7746 = (t7682+t7745);
float t7747 = (1-t7746);
float t7748 = (t7701*t7747);
float t7749 = (t7698*t7748);
float t7750 = (t7686+t7749);
float t7751 = (-float(1.5));
float t7752 = (t7751*t180);
float t7753 = (t7752*t7646);
float t7754 = pow(t7665,float(2.5));
float t7755 = (t7753/t7754);
float t7756 = (t7755*float(0.16));
float t7757 = (t7644+t7756);
float t7758 = (t7757*float(0.16));
float t7759 = (t7646+t7758);
float t7760 = (t7759*t7759);
float t7761 = (t7752*t7653);
float t7762 = (t7761/t7754);
float t7763 = (t7762*float(0.16));
float t7764 = (t7651+t7763);
float t7765 = (t7764*float(0.16));
float t7766 = (t7653+t7765);
float t7767 = (t7766*t7766);
float t7768 = (t7760+t7767);
float t7769 = (t7752*t7661);
float t7770 = (t7769/t7754);
float t7771 = (t7770*float(0.16));
float t7772 = (t7659+t7771);
float t7773 = (t7772*float(0.16));
float t7774 = (t7661+t7773);
float t7775 = (t7774*t7774);
float t7776 = (t7768+t7775);
float t7777 = sqrt(t7776);
float t7778 = (t7777*t7777);
bool t7779 = (t7778<1);
float t7780 = (t7646*t7646);
float t7781 = (t7653*t7653);
float t7782 = (t7780+t7781);
float t7783 = (t7661*t7661);
float t7784 = (t7782+t7783);
float t7785 = sqrt(t7784);
float t7786 = (t7785*t7785);
bool t7787 = (t7786>1);
bool t7788 = (t7779&&t7787);
float t7789;
float t7790;
float t7791;
float t7792;
if(t7788){
t7789 = 0;
t7790 = 0;
t7791 = 0;
t7792 = 1;
} else {
t7789 = 0;
t7790 = 0;
t7791 = 0;
t7792 = 0;
}
float t7793 = (1-t7746);
float t7794 = (t7701*t7793);
float t7795 = (t7746+t7794);
float t7796 = (1-t7795);
float t7797 = (t7792*t7796);
float t7798 = (t7789*t7797);
float t7799 = (t7750+t7798);
bool t7800 = (t7653>0);
bool t7801 = (t7766>0);
bool t7802 = (!t7801);
bool t7803 = (t7800&&t7802);
bool t7804 = (!t7800);
bool t7805 = (t7801&&t7804);
bool t7806 = (t7803||t7805);
bool t7807 = (t7778<196);
bool t7808 = (t7778>float(6.76));
bool t7809 = (t7807&&t7808);
bool t7810 = (t7806&&t7809);
float t7811;
float t7812;
float t7813;
float t7814;
if(t7810){
float t7815 = (t7766/t7764);
float t7816 = (-t7815);
float t7817 = (t7757*t7816);
float t7818 = (t7759+t7817);
float t7819 = atan(t7818,t7774);
float t7820 = (u1.u0/30);
float t7821 = (t7819+t7820);
float t7822 = (2*3.1415927);
float t7823 = (t7821+t7822);
float t7824 = mod(t7823,2);
float t7825 = (t7824*3.1415927);
float t7826 = (2*3.1415927);
float t7827 = (t7825/t7826);
float t7828 = (t7818*t7818);
float t7829 = (t7764*t7816);
float t7830 = (t7766+t7829);
float t7831 = (t7830*t7830);
float t7832 = (t7828+t7831);
float t7833 = (t7772*t7816);
float t7834 = (t7774+t7833);
float t7835 = (t7834*t7834);
float t7836 = (t7832+t7835);
float t7837 = sqrt(t7836);
float t7838 = (t7837*t7837);
float t7839 = sqrt(t7838);
float t7840 = (t7839-float(2.6));
float t7841 = (t7840/float(11.4));
vec4 t7842 = texture(s4,vec2(t7827,t7841));
t7811 = t7842.x;
t7812 = t7842.y;
t7813 = t7842.z;
float t7843;
if(t7810){
t7843 = 1;
} else {
t7843 = 0;
}
float t7844 = (t7842.x*t7842.x);
float t7845 = (t7842.y*t7842.y);
float t7846 = (t7844+t7845);
float t7847 = (t7842.z*t7842.z);
float t7848 = (t7846+t7847);
float t7849 = sqrt(t7848);
float t7850 = (t7849*t7849);
float t7851 = (t7850/float(3.0));
bool t7852 = (t7851<=1);
float t7853;
if(t7852){
t7853 = t7851;
} else {
t7853 = 1;
}
bool t7854 = (t7853>=0);
float t7855;
if(t7854){
t7855 = t7853;
} else {
t7855 = 0;
}
float t7856 = (t7843*t7855);
t7814 = t7856;
} else {
t7811 = 0;
t7812 = 0;
t7813 = 0;
t7814 = 0;
}
float t7857 = (1-t7795);
float t7858 = (t7792*t7857);
float t7859 = (t7795+t7858);
float t7860 = (1-t7859);
float t7861 = (t7814*t7860);
float t7862 = (t7811*t7861);
float t7863 = (t7799+t7862);
float t7864 = (-float(1.5));
float t7865 = (t7864*t180);
float t7866 = (t7865*t7759);
float t7867 = pow(t7778,float(2.5));
float t7868 = (t7866/t7867);
float t7869 = (t7868*float(0.16));
float t7870 = (t7757+t7869);
float t7871 = (t7870*float(0.16));
float t7872 = (t7759+t7871);
float t7873 = (t7872*t7872);
float t7874 = (t7865*t7766);
float t7875 = (t7874/t7867);
float t7876 = (t7875*float(0.16));
float t7877 = (t7764+t7876);
float t7878 = (t7877*float(0.16));
float t7879 = (t7766+t7878);
float t7880 = (t7879*t7879);
float t7881 = (t7873+t7880);
float t7882 = (t7865*t7774);
float t7883 = (t7882/t7867);
float t7884 = (t7883*float(0.16));
float t7885 = (t7772+t7884);
float t7886 = (t7885*float(0.16));
float t7887 = (t7774+t7886);
float t7888 = (t7887*t7887);
float t7889 = (t7881+t7888);
float t7890 = sqrt(t7889);
float t7891 = (t7890*t7890);
bool t7892 = (t7891<1);
float t7893 = (t7759*t7759);
float t7894 = (t7766*t7766);
float t7895 = (t7893+t7894);
float t7896 = (t7774*t7774);
float t7897 = (t7895+t7896);
float t7898 = sqrt(t7897);
float t7899 = (t7898*t7898);
bool t7900 = (t7899>1);
bool t7901 = (t7892&&t7900);
float t7902;
float t7903;
float t7904;
float t7905;
if(t7901){
t7902 = 0;
t7903 = 0;
t7904 = 0;
t7905 = 1;
} else {
t7902 = 0;
t7903 = 0;
t7904 = 0;
t7905 = 0;
}
float t7906 = (1-t7859);
float t7907 = (t7814*t7906);
float t7908 = (t7859+t7907);
float t7909 = (1-t7908);
float t7910 = (t7905*t7909);
float t7911 = (t7902*t7910);
float t7912 = (t7863+t7911);
bool t7913 = (t7766>0);
bool t7914 = (t7879>0);
bool t7915 = (!t7914);
bool t7916 = (t7913&&t7915);
bool t7917 = (!t7913);
bool t7918 = (t7914&&t7917);
bool t7919 = (t7916||t7918);
bool t7920 = (t7891<196);
bool t7921 = (t7891>float(6.76));
bool t7922 = (t7920&&t7921);
bool t7923 = (t7919&&t7922);
float t7924;
float t7925;
float t7926;
float t7927;
if(t7923){
float t7928 = (t7879/t7877);
float t7929 = (-t7928);
float t7930 = (t7870*t7929);
float t7931 = (t7872+t7930);
float t7932 = atan(t7931,t7887);
float t7933 = (u1.u0/30);
float t7934 = (t7932+t7933);
float t7935 = (2*3.1415927);
float t7936 = (t7934+t7935);
float t7937 = mod(t7936,2);
float t7938 = (t7937*3.1415927);
float t7939 = (2*3.1415927);
float t7940 = (t7938/t7939);
float t7941 = (t7931*t7931);
float t7942 = (t7877*t7929);
float t7943 = (t7879+t7942);
float t7944 = (t7943*t7943);
float t7945 = (t7941+t7944);
float t7946 = (t7885*t7929);
float t7947 = (t7887+t7946);
float t7948 = (t7947*t7947);
float t7949 = (t7945+t7948);
float t7950 = sqrt(t7949);
float t7951 = (t7950*t7950);
float t7952 = sqrt(t7951);
float t7953 = (t7952-float(2.6));
float t7954 = (t7953/float(11.4));
vec4 t7955 = texture(s4,vec2(t7940,t7954));
t7924 = t7955.x;
t7925 = t7955.y;
t7926 = t7955.z;
float t7956;
if(t7923){
t7956 = 1;
} else {
t7956 = 0;
}
float t7957 = (t7955.x*t7955.x);
float t7958 = (t7955.y*t7955.y);
float t7959 = (t7957+t7958);
float t7960 = (t7955.z*t7955.z);
float t7961 = (t7959+t7960);
float t7962 = sqrt(t7961);
float t7963 = (t7962*t7962);
float t7964 = (t7963/float(3.0));
bool t7965 = (t7964<=1);
float t7966;
if(t7965){
t7966 = t7964;
} else {
t7966 = 1;
}
bool t7967 = (t7966>=0);
float t7968;
if(t7967){
t7968 = t7966;
} else {
t7968 = 0;
}
float t7969 = (t7956*t7968);
t7927 = t7969;
} else {
t7924 = 0;
t7925 = 0;
t7926 = 0;
t7927 = 0;
}
float t7970 = (1-t7908);
float t7971 = (t7905*t7970);
float t7972 = (t7908+t7971);
float t7973 = (1-t7972);
float t7974 = (t7927*t7973);
float t7975 = (t7924*t7974);
float t7976 = (t7912+t7975);
float t7977 = (-float(1.5));
float t7978 = (t7977*t180);
float t7979 = (t7978*t7872);
float t7980 = pow(t7891,float(2.5));
float t7981 = (t7979/t7980);
float t7982 = (t7981*float(0.16));
float t7983 = (t7870+t7982);
float t7984 = (t7983*float(0.16));
float t7985 = (t7872+t7984);
float t7986 = (t7985*t7985);
float t7987 = (t7978*t7879);
float t7988 = (t7987/t7980);
float t7989 = (t7988*float(0.16));
float t7990 = (t7877+t7989);
float t7991 = (t7990*float(0.16));
float t7992 = (t7879+t7991);
float t7993 = (t7992*t7992);
float t7994 = (t7986+t7993);
float t7995 = (t7978*t7887);
float t7996 = (t7995/t7980);
float t7997 = (t7996*float(0.16));
float t7998 = (t7885+t7997);
float t7999 = (t7998*float(0.16));
float t8000 = (t7887+t7999);
float t8001 = (t8000*t8000);
float t8002 = (t7994+t8001);
float t8003 = sqrt(t8002);
float t8004 = (t8003*t8003);
bool t8005 = (t8004<1);
float t8006 = (t7872*t7872);
float t8007 = (t7879*t7879);
float t8008 = (t8006+t8007);
float t8009 = (t7887*t7887);
float t8010 = (t8008+t8009);
float t8011 = sqrt(t8010);
float t8012 = (t8011*t8011);
bool t8013 = (t8012>1);
bool t8014 = (t8005&&t8013);
float t8015;
float t8016;
float t8017;
float t8018;
if(t8014){
t8015 = 0;
t8016 = 0;
t8017 = 0;
t8018 = 1;
} else {
t8015 = 0;
t8016 = 0;
t8017 = 0;
t8018 = 0;
}
float t8019 = (1-t7972);
float t8020 = (t7927*t8019);
float t8021 = (t7972+t8020);
float t8022 = (1-t8021);
float t8023 = (t8018*t8022);
float t8024 = (t8015*t8023);
float t8025 = (t7976+t8024);
bool t8026 = (t7879>0);
bool t8027 = (t7992>0);
bool t8028 = (!t8027);
bool t8029 = (t8026&&t8028);
bool t8030 = (!t8026);
bool t8031 = (t8027&&t8030);
bool t8032 = (t8029||t8031);
bool t8033 = (t8004<196);
bool t8034 = (t8004>float(6.76));
bool t8035 = (t8033&&t8034);
bool t8036 = (t8032&&t8035);
float t8037;
float t8038;
float t8039;
float t8040;
if(t8036){
float t8041 = (t7992/t7990);
float t8042 = (-t8041);
float t8043 = (t7983*t8042);
float t8044 = (t7985+t8043);
float t8045 = atan(t8044,t8000);
float t8046 = (u1.u0/30);
float t8047 = (t8045+t8046);
float t8048 = (2*3.1415927);
float t8049 = (t8047+t8048);
float t8050 = mod(t8049,2);
float t8051 = (t8050*3.1415927);
float t8052 = (2*3.1415927);
float t8053 = (t8051/t8052);
float t8054 = (t8044*t8044);
float t8055 = (t7990*t8042);
float t8056 = (t7992+t8055);
float t8057 = (t8056*t8056);
float t8058 = (t8054+t8057);
float t8059 = (t7998*t8042);
float t8060 = (t8000+t8059);
float t8061 = (t8060*t8060);
float t8062 = (t8058+t8061);
float t8063 = sqrt(t8062);
float t8064 = (t8063*t8063);
float t8065 = sqrt(t8064);
float t8066 = (t8065-float(2.6));
float t8067 = (t8066/float(11.4));
vec4 t8068 = texture(s4,vec2(t8053,t8067));
t8037 = t8068.x;
t8038 = t8068.y;
t8039 = t8068.z;
float t8069;
if(t8036){
t8069 = 1;
} else {
t8069 = 0;
}
float t8070 = (t8068.x*t8068.x);
float t8071 = (t8068.y*t8068.y);
float t8072 = (t8070+t8071);
float t8073 = (t8068.z*t8068.z);
float t8074 = (t8072+t8073);
float t8075 = sqrt(t8074);
float t8076 = (t8075*t8075);
float t8077 = (t8076/float(3.0));
bool t8078 = (t8077<=1);
float t8079;
if(t8078){
t8079 = t8077;
} else {
t8079 = 1;
}
bool t8080 = (t8079>=0);
float t8081;
if(t8080){
t8081 = t8079;
} else {
t8081 = 0;
}
float t8082 = (t8069*t8081);
t8040 = t8082;
} else {
t8037 = 0;
t8038 = 0;
t8039 = 0;
t8040 = 0;
}
float t8083 = (1-t8021);
float t8084 = (t8018*t8083);
float t8085 = (t8021+t8084);
float t8086 = (1-t8085);
float t8087 = (t8040*t8086);
float t8088 = (t8037*t8087);
float t8089 = (t8025+t8088);
float t8090 = (-float(1.5));
float t8091 = (t8090*t180);
float t8092 = (t8091*t7985);
float t8093 = pow(t8004,float(2.5));
float t8094 = (t8092/t8093);
float t8095 = (t8094*float(0.16));
float t8096 = (t7983+t8095);
float t8097 = (t8096*float(0.16));
float t8098 = (t7985+t8097);
float t8099 = (t8098*t8098);
float t8100 = (t8091*t7992);
float t8101 = (t8100/t8093);
float t8102 = (t8101*float(0.16));
float t8103 = (t7990+t8102);
float t8104 = (t8103*float(0.16));
float t8105 = (t7992+t8104);
float t8106 = (t8105*t8105);
float t8107 = (t8099+t8106);
float t8108 = (t8091*t8000);
float t8109 = (t8108/t8093);
float t8110 = (t8109*float(0.16));
float t8111 = (t7998+t8110);
float t8112 = (t8111*float(0.16));
float t8113 = (t8000+t8112);
float t8114 = (t8113*t8113);
float t8115 = (t8107+t8114);
float t8116 = sqrt(t8115);
float t8117 = (t8116*t8116);
bool t8118 = (t8117<1);
float t8119 = (t7985*t7985);
float t8120 = (t7992*t7992);
float t8121 = (t8119+t8120);
float t8122 = (t8000*t8000);
float t8123 = (t8121+t8122);
float t8124 = sqrt(t8123);
float t8125 = (t8124*t8124);
bool t8126 = (t8125>1);
bool t8127 = (t8118&&t8126);
float t8128;
float t8129;
float t8130;
float t8131;
if(t8127){
t8128 = 0;
t8129 = 0;
t8130 = 0;
t8131 = 1;
} else {
t8128 = 0;
t8129 = 0;
t8130 = 0;
t8131 = 0;
}
float t8132 = (1-t8085);
float t8133 = (t8040*t8132);
float t8134 = (t8085+t8133);
float t8135 = (1-t8134);
float t8136 = (t8131*t8135);
float t8137 = (t8128*t8136);
float t8138 = (t8089+t8137);
bool t8139 = (t7992>0);
bool t8140 = (t8105>0);
bool t8141 = (!t8140);
bool t8142 = (t8139&&t8141);
bool t8143 = (!t8139);
bool t8144 = (t8140&&t8143);
bool t8145 = (t8142||t8144);
bool t8146 = (t8117<196);
bool t8147 = (t8117>float(6.76));
bool t8148 = (t8146&&t8147);
bool t8149 = (t8145&&t8148);
float t8150;
float t8151;
float t8152;
float t8153;
if(t8149){
float t8154 = (t8105/t8103);
float t8155 = (-t8154);
float t8156 = (t8096*t8155);
float t8157 = (t8098+t8156);
float t8158 = atan(t8157,t8113);
float t8159 = (u1.u0/30);
float t8160 = (t8158+t8159);
float t8161 = (2*3.1415927);
float t8162 = (t8160+t8161);
float t8163 = mod(t8162,2);
float t8164 = (t8163*3.1415927);
float t8165 = (2*3.1415927);
float t8166 = (t8164/t8165);
float t8167 = (t8157*t8157);
float t8168 = (t8103*t8155);
float t8169 = (t8105+t8168);
float t8170 = (t8169*t8169);
float t8171 = (t8167+t8170);
float t8172 = (t8111*t8155);
float t8173 = (t8113+t8172);
float t8174 = (t8173*t8173);
float t8175 = (t8171+t8174);
float t8176 = sqrt(t8175);
float t8177 = (t8176*t8176);
float t8178 = sqrt(t8177);
float t8179 = (t8178-float(2.6));
float t8180 = (t8179/float(11.4));
vec4 t8181 = texture(s4,vec2(t8166,t8180));
t8150 = t8181.x;
t8151 = t8181.y;
t8152 = t8181.z;
float t8182;
if(t8149){
t8182 = 1;
} else {
t8182 = 0;
}
float t8183 = (t8181.x*t8181.x);
float t8184 = (t8181.y*t8181.y);
float t8185 = (t8183+t8184);
float t8186 = (t8181.z*t8181.z);
float t8187 = (t8185+t8186);
float t8188 = sqrt(t8187);
float t8189 = (t8188*t8188);
float t8190 = (t8189/float(3.0));
bool t8191 = (t8190<=1);
float t8192;
if(t8191){
t8192 = t8190;
} else {
t8192 = 1;
}
bool t8193 = (t8192>=0);
float t8194;
if(t8193){
t8194 = t8192;
} else {
t8194 = 0;
}
float t8195 = (t8182*t8194);
t8153 = t8195;
} else {
t8150 = 0;
t8151 = 0;
t8152 = 0;
t8153 = 0;
}
float t8196 = (1-t8134);
float t8197 = (t8131*t8196);
float t8198 = (t8134+t8197);
float t8199 = (1-t8198);
float t8200 = (t8153*t8199);
float t8201 = (t8150*t8200);
float t8202 = (t8138+t8201);
float t8203 = (-float(1.5));
float t8204 = (t8203*t180);
float t8205 = (t8204*t8098);
float t8206 = pow(t8117,float(2.5));
float t8207 = (t8205/t8206);
float t8208 = (t8207*float(0.16));
float t8209 = (t8096+t8208);
float t8210 = (t8209*float(0.16));
float t8211 = (t8098+t8210);
float t8212 = (t8211*t8211);
float t8213 = (t8204*t8105);
float t8214 = (t8213/t8206);
float t8215 = (t8214*float(0.16));
float t8216 = (t8103+t8215);
float t8217 = (t8216*float(0.16));
float t8218 = (t8105+t8217);
float t8219 = (t8218*t8218);
float t8220 = (t8212+t8219);
float t8221 = (t8204*t8113);
float t8222 = (t8221/t8206);
float t8223 = (t8222*float(0.16));
float t8224 = (t8111+t8223);
float t8225 = (t8224*float(0.16));
float t8226 = (t8113+t8225);
float t8227 = (t8226*t8226);
float t8228 = (t8220+t8227);
float t8229 = sqrt(t8228);
float t8230 = (t8229*t8229);
bool t8231 = (t8230<1);
float t8232 = (t8098*t8098);
float t8233 = (t8105*t8105);
float t8234 = (t8232+t8233);
float t8235 = (t8113*t8113);
float t8236 = (t8234+t8235);
float t8237 = sqrt(t8236);
float t8238 = (t8237*t8237);
bool t8239 = (t8238>1);
bool t8240 = (t8231&&t8239);
float t8241;
float t8242;
float t8243;
float t8244;
if(t8240){
t8241 = 0;
t8242 = 0;
t8243 = 0;
t8244 = 1;
} else {
t8241 = 0;
t8242 = 0;
t8243 = 0;
t8244 = 0;
}
float t8245 = (1-t8198);
float t8246 = (t8153*t8245);
float t8247 = (t8198+t8246);
float t8248 = (1-t8247);
float t8249 = (t8244*t8248);
float t8250 = (t8241*t8249);
float t8251 = (t8202+t8250);
bool t8252 = (t8105>0);
bool t8253 = (t8218>0);
bool t8254 = (!t8253);
bool t8255 = (t8252&&t8254);
bool t8256 = (!t8252);
bool t8257 = (t8253&&t8256);
bool t8258 = (t8255||t8257);
bool t8259 = (t8230<196);
bool t8260 = (t8230>float(6.76));
bool t8261 = (t8259&&t8260);
bool t8262 = (t8258&&t8261);
float t8263;
float t8264;
float t8265;
float t8266;
if(t8262){
float t8267 = (t8218/t8216);
float t8268 = (-t8267);
float t8269 = (t8209*t8268);
float t8270 = (t8211+t8269);
float t8271 = atan(t8270,t8226);
float t8272 = (u1.u0/30);
float t8273 = (t8271+t8272);
float t8274 = (2*3.1415927);
float t8275 = (t8273+t8274);
float t8276 = mod(t8275,2);
float t8277 = (t8276*3.1415927);
float t8278 = (2*3.1415927);
float t8279 = (t8277/t8278);
float t8280 = (t8270*t8270);
float t8281 = (t8216*t8268);
float t8282 = (t8218+t8281);
float t8283 = (t8282*t8282);
float t8284 = (t8280+t8283);
float t8285 = (t8224*t8268);
float t8286 = (t8226+t8285);
float t8287 = (t8286*t8286);
float t8288 = (t8284+t8287);
float t8289 = sqrt(t8288);
float t8290 = (t8289*t8289);
float t8291 = sqrt(t8290);
float t8292 = (t8291-float(2.6));
float t8293 = (t8292/float(11.4));
vec4 t8294 = texture(s4,vec2(t8279,t8293));
t8263 = t8294.x;
t8264 = t8294.y;
t8265 = t8294.z;
float t8295;
if(t8262){
t8295 = 1;
} else {
t8295 = 0;
}
float t8296 = (t8294.x*t8294.x);
float t8297 = (t8294.y*t8294.y);
float t8298 = (t8296+t8297);
float t8299 = (t8294.z*t8294.z);
float t8300 = (t8298+t8299);
float t8301 = sqrt(t8300);
float t8302 = (t8301*t8301);
float t8303 = (t8302/float(3.0));
bool t8304 = (t8303<=1);
float t8305;
if(t8304){
t8305 = t8303;
} else {
t8305 = 1;
}
bool t8306 = (t8305>=0);
float t8307;
if(t8306){
t8307 = t8305;
} else {
t8307 = 0;
}
float t8308 = (t8295*t8307);
t8266 = t8308;
} else {
t8263 = 0;
t8264 = 0;
t8265 = 0;
t8266 = 0;
}
float t8309 = (1-t8247);
float t8310 = (t8244*t8309);
float t8311 = (t8247+t8310);
float t8312 = (1-t8311);
float t8313 = (t8266*t8312);
float t8314 = (t8263*t8313);
float t8315 = (t8251+t8314);
float t8316 = (-float(1.5));
float t8317 = (t8316*t180);
float t8318 = (t8317*t8211);
float t8319 = pow(t8230,float(2.5));
float t8320 = (t8318/t8319);
float t8321 = (t8320*float(0.16));
float t8322 = (t8209+t8321);
float t8323 = (t8322*float(0.16));
float t8324 = (t8211+t8323);
float t8325 = (t8324*t8324);
float t8326 = (t8317*t8218);
float t8327 = (t8326/t8319);
float t8328 = (t8327*float(0.16));
float t8329 = (t8216+t8328);
float t8330 = (t8329*float(0.16));
float t8331 = (t8218+t8330);
float t8332 = (t8331*t8331);
float t8333 = (t8325+t8332);
float t8334 = (t8317*t8226);
float t8335 = (t8334/t8319);
float t8336 = (t8335*float(0.16));
float t8337 = (t8224+t8336);
float t8338 = (t8337*float(0.16));
float t8339 = (t8226+t8338);
float t8340 = (t8339*t8339);
float t8341 = (t8333+t8340);
float t8342 = sqrt(t8341);
float t8343 = (t8342*t8342);
bool t8344 = (t8343<1);
float t8345 = (t8211*t8211);
float t8346 = (t8218*t8218);
float t8347 = (t8345+t8346);
float t8348 = (t8226*t8226);
float t8349 = (t8347+t8348);
float t8350 = sqrt(t8349);
float t8351 = (t8350*t8350);
bool t8352 = (t8351>1);
bool t8353 = (t8344&&t8352);
float t8354;
float t8355;
float t8356;
float t8357;
if(t8353){
t8354 = 0;
t8355 = 0;
t8356 = 0;
t8357 = 1;
} else {
t8354 = 0;
t8355 = 0;
t8356 = 0;
t8357 = 0;
}
float t8358 = (1-t8311);
float t8359 = (t8266*t8358);
float t8360 = (t8311+t8359);
float t8361 = (1-t8360);
float t8362 = (t8357*t8361);
float t8363 = (t8354*t8362);
float t8364 = (t8315+t8363);
bool t8365 = (t8218>0);
bool t8366 = (t8331>0);
bool t8367 = (!t8366);
bool t8368 = (t8365&&t8367);
bool t8369 = (!t8365);
bool t8370 = (t8366&&t8369);
bool t8371 = (t8368||t8370);
bool t8372 = (t8343<196);
bool t8373 = (t8343>float(6.76));
bool t8374 = (t8372&&t8373);
bool t8375 = (t8371&&t8374);
float t8376;
float t8377;
float t8378;
float t8379;
if(t8375){
float t8380 = (t8331/t8329);
float t8381 = (-t8380);
float t8382 = (t8322*t8381);
float t8383 = (t8324+t8382);
float t8384 = atan(t8383,t8339);
float t8385 = (u1.u0/30);
float t8386 = (t8384+t8385);
float t8387 = (2*3.1415927);
float t8388 = (t8386+t8387);
float t8389 = mod(t8388,2);
float t8390 = (t8389*3.1415927);
float t8391 = (2*3.1415927);
float t8392 = (t8390/t8391);
float t8393 = (t8383*t8383);
float t8394 = (t8329*t8381);
float t8395 = (t8331+t8394);
float t8396 = (t8395*t8395);
float t8397 = (t8393+t8396);
float t8398 = (t8337*t8381);
float t8399 = (t8339+t8398);
float t8400 = (t8399*t8399);
float t8401 = (t8397+t8400);
float t8402 = sqrt(t8401);
float t8403 = (t8402*t8402);
float t8404 = sqrt(t8403);
float t8405 = (t8404-float(2.6));
float t8406 = (t8405/float(11.4));
vec4 t8407 = texture(s4,vec2(t8392,t8406));
t8376 = t8407.x;
t8377 = t8407.y;
t8378 = t8407.z;
float t8408;
if(t8375){
t8408 = 1;
} else {
t8408 = 0;
}
float t8409 = (t8407.x*t8407.x);
float t8410 = (t8407.y*t8407.y);
float t8411 = (t8409+t8410);
float t8412 = (t8407.z*t8407.z);
float t8413 = (t8411+t8412);
float t8414 = sqrt(t8413);
float t8415 = (t8414*t8414);
float t8416 = (t8415/float(3.0));
bool t8417 = (t8416<=1);
float t8418;
if(t8417){
t8418 = t8416;
} else {
t8418 = 1;
}
bool t8419 = (t8418>=0);
float t8420;
if(t8419){
t8420 = t8418;
} else {
t8420 = 0;
}
float t8421 = (t8408*t8420);
t8379 = t8421;
} else {
t8376 = 0;
t8377 = 0;
t8378 = 0;
t8379 = 0;
}
float t8422 = (1-t8360);
float t8423 = (t8357*t8422);
float t8424 = (t8360+t8423);
float t8425 = (1-t8424);
float t8426 = (t8379*t8425);
float t8427 = (t8376*t8426);
float t8428 = (t8364+t8427);
float t8429 = (-float(1.5));
float t8430 = (t8429*t180);
float t8431 = (t8430*t8324);
float t8432 = pow(t8343,float(2.5));
float t8433 = (t8431/t8432);
float t8434 = (t8433*float(0.16));
float t8435 = (t8322+t8434);
float t8436 = (t8435*float(0.16));
float t8437 = (t8324+t8436);
float t8438 = (t8437*t8437);
float t8439 = (t8430*t8331);
float t8440 = (t8439/t8432);
float t8441 = (t8440*float(0.16));
float t8442 = (t8329+t8441);
float t8443 = (t8442*float(0.16));
float t8444 = (t8331+t8443);
float t8445 = (t8444*t8444);
float t8446 = (t8438+t8445);
float t8447 = (t8430*t8339);
float t8448 = (t8447/t8432);
float t8449 = (t8448*float(0.16));
float t8450 = (t8337+t8449);
float t8451 = (t8450*float(0.16));
float t8452 = (t8339+t8451);
float t8453 = (t8452*t8452);
float t8454 = (t8446+t8453);
float t8455 = sqrt(t8454);
float t8456 = (t8455*t8455);
bool t8457 = (t8456<1);
float t8458 = (t8324*t8324);
float t8459 = (t8331*t8331);
float t8460 = (t8458+t8459);
float t8461 = (t8339*t8339);
float t8462 = (t8460+t8461);
float t8463 = sqrt(t8462);
float t8464 = (t8463*t8463);
bool t8465 = (t8464>1);
bool t8466 = (t8457&&t8465);
float t8467;
float t8468;
float t8469;
float t8470;
if(t8466){
t8467 = 0;
t8468 = 0;
t8469 = 0;
t8470 = 1;
} else {
t8467 = 0;
t8468 = 0;
t8469 = 0;
t8470 = 0;
}
float t8471 = (1-t8424);
float t8472 = (t8379*t8471);
float t8473 = (t8424+t8472);
float t8474 = (1-t8473);
float t8475 = (t8470*t8474);
float t8476 = (t8467*t8475);
float t8477 = (t8428+t8476);
bool t8478 = (t8331>0);
bool t8479 = (t8444>0);
bool t8480 = (!t8479);
bool t8481 = (t8478&&t8480);
bool t8482 = (!t8478);
bool t8483 = (t8479&&t8482);
bool t8484 = (t8481||t8483);
bool t8485 = (t8456<196);
bool t8486 = (t8456>float(6.76));
bool t8487 = (t8485&&t8486);
bool t8488 = (t8484&&t8487);
float t8489;
float t8490;
float t8491;
float t8492;
if(t8488){
float t8493 = (t8444/t8442);
float t8494 = (-t8493);
float t8495 = (t8435*t8494);
float t8496 = (t8437+t8495);
float t8497 = atan(t8496,t8452);
float t8498 = (u1.u0/30);
float t8499 = (t8497+t8498);
float t8500 = (2*3.1415927);
float t8501 = (t8499+t8500);
float t8502 = mod(t8501,2);
float t8503 = (t8502*3.1415927);
float t8504 = (2*3.1415927);
float t8505 = (t8503/t8504);
float t8506 = (t8496*t8496);
float t8507 = (t8442*t8494);
float t8508 = (t8444+t8507);
float t8509 = (t8508*t8508);
float t8510 = (t8506+t8509);
float t8511 = (t8450*t8494);
float t8512 = (t8452+t8511);
float t8513 = (t8512*t8512);
float t8514 = (t8510+t8513);
float t8515 = sqrt(t8514);
float t8516 = (t8515*t8515);
float t8517 = sqrt(t8516);
float t8518 = (t8517-float(2.6));
float t8519 = (t8518/float(11.4));
vec4 t8520 = texture(s4,vec2(t8505,t8519));
t8489 = t8520.x;
t8490 = t8520.y;
t8491 = t8520.z;
float t8521;
if(t8488){
t8521 = 1;
} else {
t8521 = 0;
}
float t8522 = (t8520.x*t8520.x);
float t8523 = (t8520.y*t8520.y);
float t8524 = (t8522+t8523);
float t8525 = (t8520.z*t8520.z);
float t8526 = (t8524+t8525);
float t8527 = sqrt(t8526);
float t8528 = (t8527*t8527);
float t8529 = (t8528/float(3.0));
bool t8530 = (t8529<=1);
float t8531;
if(t8530){
t8531 = t8529;
} else {
t8531 = 1;
}
bool t8532 = (t8531>=0);
float t8533;
if(t8532){
t8533 = t8531;
} else {
t8533 = 0;
}
float t8534 = (t8521*t8533);
t8492 = t8534;
} else {
t8489 = 0;
t8490 = 0;
t8491 = 0;
t8492 = 0;
}
float t8535 = (1-t8473);
float t8536 = (t8470*t8535);
float t8537 = (t8473+t8536);
float t8538 = (1-t8537);
float t8539 = (t8492*t8538);
float t8540 = (t8489*t8539);
float t8541 = (t8477+t8540);
float t8542 = (-float(1.5));
float t8543 = (t8542*t180);
float t8544 = (t8543*t8437);
float t8545 = pow(t8456,float(2.5));
float t8546 = (t8544/t8545);
float t8547 = (t8546*float(0.16));
float t8548 = (t8435+t8547);
float t8549 = (t8548*float(0.16));
float t8550 = (t8437+t8549);
float t8551 = (t8550*t8550);
float t8552 = (t8543*t8444);
float t8553 = (t8552/t8545);
float t8554 = (t8553*float(0.16));
float t8555 = (t8442+t8554);
float t8556 = (t8555*float(0.16));
float t8557 = (t8444+t8556);
float t8558 = (t8557*t8557);
float t8559 = (t8551+t8558);
float t8560 = (t8543*t8452);
float t8561 = (t8560/t8545);
float t8562 = (t8561*float(0.16));
float t8563 = (t8450+t8562);
float t8564 = (t8563*float(0.16));
float t8565 = (t8452+t8564);
float t8566 = (t8565*t8565);
float t8567 = (t8559+t8566);
float t8568 = sqrt(t8567);
float t8569 = (t8568*t8568);
bool t8570 = (t8569<1);
float t8571 = (t8437*t8437);
float t8572 = (t8444*t8444);
float t8573 = (t8571+t8572);
float t8574 = (t8452*t8452);
float t8575 = (t8573+t8574);
float t8576 = sqrt(t8575);
float t8577 = (t8576*t8576);
bool t8578 = (t8577>1);
bool t8579 = (t8570&&t8578);
float t8580;
float t8581;
float t8582;
float t8583;
if(t8579){
t8580 = 0;
t8581 = 0;
t8582 = 0;
t8583 = 1;
} else {
t8580 = 0;
t8581 = 0;
t8582 = 0;
t8583 = 0;
}
float t8584 = (1-t8537);
float t8585 = (t8492*t8584);
float t8586 = (t8537+t8585);
float t8587 = (1-t8586);
float t8588 = (t8583*t8587);
float t8589 = (t8580*t8588);
float t8590 = (t8541+t8589);
bool t8591 = (t8444>0);
bool t8592 = (t8557>0);
bool t8593 = (!t8592);
bool t8594 = (t8591&&t8593);
bool t8595 = (!t8591);
bool t8596 = (t8592&&t8595);
bool t8597 = (t8594||t8596);
bool t8598 = (t8569<196);
bool t8599 = (t8569>float(6.76));
bool t8600 = (t8598&&t8599);
bool t8601 = (t8597&&t8600);
float t8602;
float t8603;
float t8604;
float t8605;
if(t8601){
float t8606 = (t8557/t8555);
float t8607 = (-t8606);
float t8608 = (t8548*t8607);
float t8609 = (t8550+t8608);
float t8610 = atan(t8609,t8565);
float t8611 = (u1.u0/30);
float t8612 = (t8610+t8611);
float t8613 = (2*3.1415927);
float t8614 = (t8612+t8613);
float t8615 = mod(t8614,2);
float t8616 = (t8615*3.1415927);
float t8617 = (2*3.1415927);
float t8618 = (t8616/t8617);
float t8619 = (t8609*t8609);
float t8620 = (t8555*t8607);
float t8621 = (t8557+t8620);
float t8622 = (t8621*t8621);
float t8623 = (t8619+t8622);
float t8624 = (t8563*t8607);
float t8625 = (t8565+t8624);
float t8626 = (t8625*t8625);
float t8627 = (t8623+t8626);
float t8628 = sqrt(t8627);
float t8629 = (t8628*t8628);
float t8630 = sqrt(t8629);
float t8631 = (t8630-float(2.6));
float t8632 = (t8631/float(11.4));
vec4 t8633 = texture(s4,vec2(t8618,t8632));
t8602 = t8633.x;
t8603 = t8633.y;
t8604 = t8633.z;
float t8634;
if(t8601){
t8634 = 1;
} else {
t8634 = 0;
}
float t8635 = (t8633.x*t8633.x);
float t8636 = (t8633.y*t8633.y);
float t8637 = (t8635+t8636);
float t8638 = (t8633.z*t8633.z);
float t8639 = (t8637+t8638);
float t8640 = sqrt(t8639);
float t8641 = (t8640*t8640);
float t8642 = (t8641/float(3.0));
bool t8643 = (t8642<=1);
float t8644;
if(t8643){
t8644 = t8642;
} else {
t8644 = 1;
}
bool t8645 = (t8644>=0);
float t8646;
if(t8645){
t8646 = t8644;
} else {
t8646 = 0;
}
float t8647 = (t8634*t8646);
t8605 = t8647;
} else {
t8602 = 0;
t8603 = 0;
t8604 = 0;
t8605 = 0;
}
float t8648 = (1-t8586);
float t8649 = (t8583*t8648);
float t8650 = (t8586+t8649);
float t8651 = (1-t8650);
float t8652 = (t8605*t8651);
float t8653 = (t8602*t8652);
float t8654 = (t8590+t8653);
float t8655 = (-float(1.5));
float t8656 = (t8655*t180);
float t8657 = (t8656*t8550);
float t8658 = pow(t8569,float(2.5));
float t8659 = (t8657/t8658);
float t8660 = (t8659*float(0.16));
float t8661 = (t8548+t8660);
float t8662 = (t8661*float(0.16));
float t8663 = (t8550+t8662);
float t8664 = (t8663*t8663);
float t8665 = (t8656*t8557);
float t8666 = (t8665/t8658);
float t8667 = (t8666*float(0.16));
float t8668 = (t8555+t8667);
float t8669 = (t8668*float(0.16));
float t8670 = (t8557+t8669);
float t8671 = (t8670*t8670);
float t8672 = (t8664+t8671);
float t8673 = (t8656*t8565);
float t8674 = (t8673/t8658);
float t8675 = (t8674*float(0.16));
float t8676 = (t8563+t8675);
float t8677 = (t8676*float(0.16));
float t8678 = (t8565+t8677);
float t8679 = (t8678*t8678);
float t8680 = (t8672+t8679);
float t8681 = sqrt(t8680);
float t8682 = (t8681*t8681);
bool t8683 = (t8682<1);
float t8684 = (t8550*t8550);
float t8685 = (t8557*t8557);
float t8686 = (t8684+t8685);
float t8687 = (t8565*t8565);
float t8688 = (t8686+t8687);
float t8689 = sqrt(t8688);
float t8690 = (t8689*t8689);
bool t8691 = (t8690>1);
bool t8692 = (t8683&&t8691);
float t8693;
float t8694;
float t8695;
float t8696;
if(t8692){
t8693 = 0;
t8694 = 0;
t8695 = 0;
t8696 = 1;
} else {
t8693 = 0;
t8694 = 0;
t8695 = 0;
t8696 = 0;
}
float t8697 = (1-t8650);
float t8698 = (t8605*t8697);
float t8699 = (t8650+t8698);
float t8700 = (1-t8699);
float t8701 = (t8696*t8700);
float t8702 = (t8693*t8701);
float t8703 = (t8654+t8702);
bool t8704 = (t8557>0);
bool t8705 = (t8670>0);
bool t8706 = (!t8705);
bool t8707 = (t8704&&t8706);
bool t8708 = (!t8704);
bool t8709 = (t8705&&t8708);
bool t8710 = (t8707||t8709);
bool t8711 = (t8682<196);
bool t8712 = (t8682>float(6.76));
bool t8713 = (t8711&&t8712);
bool t8714 = (t8710&&t8713);
float t8715;
float t8716;
float t8717;
float t8718;
if(t8714){
float t8719 = (t8670/t8668);
float t8720 = (-t8719);
float t8721 = (t8661*t8720);
float t8722 = (t8663+t8721);
float t8723 = atan(t8722,t8678);
float t8724 = (u1.u0/30);
float t8725 = (t8723+t8724);
float t8726 = (2*3.1415927);
float t8727 = (t8725+t8726);
float t8728 = mod(t8727,2);
float t8729 = (t8728*3.1415927);
float t8730 = (2*3.1415927);
float t8731 = (t8729/t8730);
float t8732 = (t8722*t8722);
float t8733 = (t8668*t8720);
float t8734 = (t8670+t8733);
float t8735 = (t8734*t8734);
float t8736 = (t8732+t8735);
float t8737 = (t8676*t8720);
float t8738 = (t8678+t8737);
float t8739 = (t8738*t8738);
float t8740 = (t8736+t8739);
float t8741 = sqrt(t8740);
float t8742 = (t8741*t8741);
float t8743 = sqrt(t8742);
float t8744 = (t8743-float(2.6));
float t8745 = (t8744/float(11.4));
vec4 t8746 = texture(s4,vec2(t8731,t8745));
t8715 = t8746.x;
t8716 = t8746.y;
t8717 = t8746.z;
float t8747;
if(t8714){
t8747 = 1;
} else {
t8747 = 0;
}
float t8748 = (t8746.x*t8746.x);
float t8749 = (t8746.y*t8746.y);
float t8750 = (t8748+t8749);
float t8751 = (t8746.z*t8746.z);
float t8752 = (t8750+t8751);
float t8753 = sqrt(t8752);
float t8754 = (t8753*t8753);
float t8755 = (t8754/float(3.0));
bool t8756 = (t8755<=1);
float t8757;
if(t8756){
t8757 = t8755;
} else {
t8757 = 1;
}
bool t8758 = (t8757>=0);
float t8759;
if(t8758){
t8759 = t8757;
} else {
t8759 = 0;
}
float t8760 = (t8747*t8759);
t8718 = t8760;
} else {
t8715 = 0;
t8716 = 0;
t8717 = 0;
t8718 = 0;
}
float t8761 = (1-t8699);
float t8762 = (t8696*t8761);
float t8763 = (t8699+t8762);
float t8764 = (1-t8763);
float t8765 = (t8718*t8764);
float t8766 = (t8715*t8765);
float t8767 = (t8703+t8766);
float t8768 = (-float(1.5));
float t8769 = (t8768*t180);
float t8770 = (t8769*t8663);
float t8771 = pow(t8682,float(2.5));
float t8772 = (t8770/t8771);
float t8773 = (t8772*float(0.16));
float t8774 = (t8661+t8773);
float t8775 = (t8774*float(0.16));
float t8776 = (t8663+t8775);
float t8777 = (t8776*t8776);
float t8778 = (t8769*t8670);
float t8779 = (t8778/t8771);
float t8780 = (t8779*float(0.16));
float t8781 = (t8668+t8780);
float t8782 = (t8781*float(0.16));
float t8783 = (t8670+t8782);
float t8784 = (t8783*t8783);
float t8785 = (t8777+t8784);
float t8786 = (t8769*t8678);
float t8787 = (t8786/t8771);
float t8788 = (t8787*float(0.16));
float t8789 = (t8676+t8788);
float t8790 = (t8789*float(0.16));
float t8791 = (t8678+t8790);
float t8792 = (t8791*t8791);
float t8793 = (t8785+t8792);
float t8794 = sqrt(t8793);
float t8795 = (t8794*t8794);
bool t8796 = (t8795<1);
float t8797 = (t8663*t8663);
float t8798 = (t8670*t8670);
float t8799 = (t8797+t8798);
float t8800 = (t8678*t8678);
float t8801 = (t8799+t8800);
float t8802 = sqrt(t8801);
float t8803 = (t8802*t8802);
bool t8804 = (t8803>1);
bool t8805 = (t8796&&t8804);
float t8806;
float t8807;
float t8808;
float t8809;
if(t8805){
t8806 = 0;
t8807 = 0;
t8808 = 0;
t8809 = 1;
} else {
t8806 = 0;
t8807 = 0;
t8808 = 0;
t8809 = 0;
}
float t8810 = (1-t8763);
float t8811 = (t8718*t8810);
float t8812 = (t8763+t8811);
float t8813 = (1-t8812);
float t8814 = (t8809*t8813);
float t8815 = (t8806*t8814);
float t8816 = (t8767+t8815);
bool t8817 = (t8670>0);
bool t8818 = (t8783>0);
bool t8819 = (!t8818);
bool t8820 = (t8817&&t8819);
bool t8821 = (!t8817);
bool t8822 = (t8818&&t8821);
bool t8823 = (t8820||t8822);
bool t8824 = (t8795<196);
bool t8825 = (t8795>float(6.76));
bool t8826 = (t8824&&t8825);
bool t8827 = (t8823&&t8826);
float t8828;
float t8829;
float t8830;
float t8831;
if(t8827){
float t8832 = (t8783/t8781);
float t8833 = (-t8832);
float t8834 = (t8774*t8833);
float t8835 = (t8776+t8834);
float t8836 = atan(t8835,t8791);
float t8837 = (u1.u0/30);
float t8838 = (t8836+t8837);
float t8839 = (2*3.1415927);
float t8840 = (t8838+t8839);
float t8841 = mod(t8840,2);
float t8842 = (t8841*3.1415927);
float t8843 = (2*3.1415927);
float t8844 = (t8842/t8843);
float t8845 = (t8835*t8835);
float t8846 = (t8781*t8833);
float t8847 = (t8783+t8846);
float t8848 = (t8847*t8847);
float t8849 = (t8845+t8848);
float t8850 = (t8789*t8833);
float t8851 = (t8791+t8850);
float t8852 = (t8851*t8851);
float t8853 = (t8849+t8852);
float t8854 = sqrt(t8853);
float t8855 = (t8854*t8854);
float t8856 = sqrt(t8855);
float t8857 = (t8856-float(2.6));
float t8858 = (t8857/float(11.4));
vec4 t8859 = texture(s4,vec2(t8844,t8858));
t8828 = t8859.x;
t8829 = t8859.y;
t8830 = t8859.z;
float t8860;
if(t8827){
t8860 = 1;
} else {
t8860 = 0;
}
float t8861 = (t8859.x*t8859.x);
float t8862 = (t8859.y*t8859.y);
float t8863 = (t8861+t8862);
float t8864 = (t8859.z*t8859.z);
float t8865 = (t8863+t8864);
float t8866 = sqrt(t8865);
float t8867 = (t8866*t8866);
float t8868 = (t8867/float(3.0));
bool t8869 = (t8868<=1);
float t8870;
if(t8869){
t8870 = t8868;
} else {
t8870 = 1;
}
bool t8871 = (t8870>=0);
float t8872;
if(t8871){
t8872 = t8870;
} else {
t8872 = 0;
}
float t8873 = (t8860*t8872);
t8831 = t8873;
} else {
t8828 = 0;
t8829 = 0;
t8830 = 0;
t8831 = 0;
}
float t8874 = (1-t8812);
float t8875 = (t8809*t8874);
float t8876 = (t8812+t8875);
float t8877 = (1-t8876);
float t8878 = (t8831*t8877);
float t8879 = (t8828*t8878);
float t8880 = (t8816+t8879);
float t8881 = (-float(1.5));
float t8882 = (t8881*t180);
float t8883 = (t8882*t8776);
float t8884 = pow(t8795,float(2.5));
float t8885 = (t8883/t8884);
float t8886 = (t8885*float(0.16));
float t8887 = (t8774+t8886);
float t8888 = (t8887*float(0.16));
float t8889 = (t8776+t8888);
float t8890 = (t8889*t8889);
float t8891 = (t8882*t8783);
float t8892 = (t8891/t8884);
float t8893 = (t8892*float(0.16));
float t8894 = (t8781+t8893);
float t8895 = (t8894*float(0.16));
float t8896 = (t8783+t8895);
float t8897 = (t8896*t8896);
float t8898 = (t8890+t8897);
float t8899 = (t8882*t8791);
float t8900 = (t8899/t8884);
float t8901 = (t8900*float(0.16));
float t8902 = (t8789+t8901);
float t8903 = (t8902*float(0.16));
float t8904 = (t8791+t8903);
float t8905 = (t8904*t8904);
float t8906 = (t8898+t8905);
float t8907 = sqrt(t8906);
float t8908 = (t8907*t8907);
bool t8909 = (t8908<1);
float t8910 = (t8776*t8776);
float t8911 = (t8783*t8783);
float t8912 = (t8910+t8911);
float t8913 = (t8791*t8791);
float t8914 = (t8912+t8913);
float t8915 = sqrt(t8914);
float t8916 = (t8915*t8915);
bool t8917 = (t8916>1);
bool t8918 = (t8909&&t8917);
float t8919;
float t8920;
float t8921;
float t8922;
if(t8918){
t8919 = 0;
t8920 = 0;
t8921 = 0;
t8922 = 1;
} else {
t8919 = 0;
t8920 = 0;
t8921 = 0;
t8922 = 0;
}
float t8923 = (1-t8876);
float t8924 = (t8831*t8923);
float t8925 = (t8876+t8924);
float t8926 = (1-t8925);
float t8927 = (t8922*t8926);
float t8928 = (t8919*t8927);
float t8929 = (t8880+t8928);
bool t8930 = (t8783>0);
bool t8931 = (t8896>0);
bool t8932 = (!t8931);
bool t8933 = (t8930&&t8932);
bool t8934 = (!t8930);
bool t8935 = (t8931&&t8934);
bool t8936 = (t8933||t8935);
bool t8937 = (t8908<196);
bool t8938 = (t8908>float(6.76));
bool t8939 = (t8937&&t8938);
bool t8940 = (t8936&&t8939);
float t8941;
float t8942;
float t8943;
float t8944;
if(t8940){
float t8945 = (t8896/t8894);
float t8946 = (-t8945);
float t8947 = (t8887*t8946);
float t8948 = (t8889+t8947);
float t8949 = atan(t8948,t8904);
float t8950 = (u1.u0/30);
float t8951 = (t8949+t8950);
float t8952 = (2*3.1415927);
float t8953 = (t8951+t8952);
float t8954 = mod(t8953,2);
float t8955 = (t8954*3.1415927);
float t8956 = (2*3.1415927);
float t8957 = (t8955/t8956);
float t8958 = (t8948*t8948);
float t8959 = (t8894*t8946);
float t8960 = (t8896+t8959);
float t8961 = (t8960*t8960);
float t8962 = (t8958+t8961);
float t8963 = (t8902*t8946);
float t8964 = (t8904+t8963);
float t8965 = (t8964*t8964);
float t8966 = (t8962+t8965);
float t8967 = sqrt(t8966);
float t8968 = (t8967*t8967);
float t8969 = sqrt(t8968);
float t8970 = (t8969-float(2.6));
float t8971 = (t8970/float(11.4));
vec4 t8972 = texture(s4,vec2(t8957,t8971));
t8941 = t8972.x;
t8942 = t8972.y;
t8943 = t8972.z;
float t8973;
if(t8940){
t8973 = 1;
} else {
t8973 = 0;
}
float t8974 = (t8972.x*t8972.x);
float t8975 = (t8972.y*t8972.y);
float t8976 = (t8974+t8975);
float t8977 = (t8972.z*t8972.z);
float t8978 = (t8976+t8977);
float t8979 = sqrt(t8978);
float t8980 = (t8979*t8979);
float t8981 = (t8980/float(3.0));
bool t8982 = (t8981<=1);
float t8983;
if(t8982){
t8983 = t8981;
} else {
t8983 = 1;
}
bool t8984 = (t8983>=0);
float t8985;
if(t8984){
t8985 = t8983;
} else {
t8985 = 0;
}
float t8986 = (t8973*t8985);
t8944 = t8986;
} else {
t8941 = 0;
t8942 = 0;
t8943 = 0;
t8944 = 0;
}
float t8987 = (1-t8925);
float t8988 = (t8922*t8987);
float t8989 = (t8925+t8988);
float t8990 = (1-t8989);
float t8991 = (t8944*t8990);
float t8992 = (t8941*t8991);
float t8993 = (t8929+t8992);
float t8994 = (-float(1.5));
float t8995 = (t8994*t180);
float t8996 = (t8995*t8889);
float t8997 = pow(t8908,float(2.5));
float t8998 = (t8996/t8997);
float t8999 = (t8998*float(0.16));
float t9000 = (t8887+t8999);
float t9001 = (t9000*float(0.16));
float t9002 = (t8889+t9001);
float t9003 = (t9002*t9002);
float t9004 = (t8995*t8896);
float t9005 = (t9004/t8997);
float t9006 = (t9005*float(0.16));
float t9007 = (t8894+t9006);
float t9008 = (t9007*float(0.16));
float t9009 = (t8896+t9008);
float t9010 = (t9009*t9009);
float t9011 = (t9003+t9010);
float t9012 = (t8995*t8904);
float t9013 = (t9012/t8997);
float t9014 = (t9013*float(0.16));
float t9015 = (t8902+t9014);
float t9016 = (t9015*float(0.16));
float t9017 = (t8904+t9016);
float t9018 = (t9017*t9017);
float t9019 = (t9011+t9018);
float t9020 = sqrt(t9019);
float t9021 = (t9020*t9020);
bool t9022 = (t9021<1);
float t9023 = (t8889*t8889);
float t9024 = (t8896*t8896);
float t9025 = (t9023+t9024);
float t9026 = (t8904*t8904);
float t9027 = (t9025+t9026);
float t9028 = sqrt(t9027);
float t9029 = (t9028*t9028);
bool t9030 = (t9029>1);
bool t9031 = (t9022&&t9030);
float t9032;
float t9033;
float t9034;
float t9035;
if(t9031){
t9032 = 0;
t9033 = 0;
t9034 = 0;
t9035 = 1;
} else {
t9032 = 0;
t9033 = 0;
t9034 = 0;
t9035 = 0;
}
float t9036 = (1-t8989);
float t9037 = (t8944*t9036);
float t9038 = (t8989+t9037);
float t9039 = (1-t9038);
float t9040 = (t9035*t9039);
float t9041 = (t9032*t9040);
float t9042 = (t8993+t9041);
bool t9043 = (t8896>0);
bool t9044 = (t9009>0);
bool t9045 = (!t9044);
bool t9046 = (t9043&&t9045);
bool t9047 = (!t9043);
bool t9048 = (t9044&&t9047);
bool t9049 = (t9046||t9048);
bool t9050 = (t9021<196);
bool t9051 = (t9021>float(6.76));
bool t9052 = (t9050&&t9051);
bool t9053 = (t9049&&t9052);
float t9054;
float t9055;
float t9056;
float t9057;
if(t9053){
float t9058 = (t9009/t9007);
float t9059 = (-t9058);
float t9060 = (t9000*t9059);
float t9061 = (t9002+t9060);
float t9062 = atan(t9061,t9017);
float t9063 = (u1.u0/30);
float t9064 = (t9062+t9063);
float t9065 = (2*3.1415927);
float t9066 = (t9064+t9065);
float t9067 = mod(t9066,2);
float t9068 = (t9067*3.1415927);
float t9069 = (2*3.1415927);
float t9070 = (t9068/t9069);
float t9071 = (t9061*t9061);
float t9072 = (t9007*t9059);
float t9073 = (t9009+t9072);
float t9074 = (t9073*t9073);
float t9075 = (t9071+t9074);
float t9076 = (t9015*t9059);
float t9077 = (t9017+t9076);
float t9078 = (t9077*t9077);
float t9079 = (t9075+t9078);
float t9080 = sqrt(t9079);
float t9081 = (t9080*t9080);
float t9082 = sqrt(t9081);
float t9083 = (t9082-float(2.6));
float t9084 = (t9083/float(11.4));
vec4 t9085 = texture(s4,vec2(t9070,t9084));
t9054 = t9085.x;
t9055 = t9085.y;
t9056 = t9085.z;
float t9086;
if(t9053){
t9086 = 1;
} else {
t9086 = 0;
}
float t9087 = (t9085.x*t9085.x);
float t9088 = (t9085.y*t9085.y);
float t9089 = (t9087+t9088);
float t9090 = (t9085.z*t9085.z);
float t9091 = (t9089+t9090);
float t9092 = sqrt(t9091);
float t9093 = (t9092*t9092);
float t9094 = (t9093/float(3.0));
bool t9095 = (t9094<=1);
float t9096;
if(t9095){
t9096 = t9094;
} else {
t9096 = 1;
}
bool t9097 = (t9096>=0);
float t9098;
if(t9097){
t9098 = t9096;
} else {
t9098 = 0;
}
float t9099 = (t9086*t9098);
t9057 = t9099;
} else {
t9054 = 0;
t9055 = 0;
t9056 = 0;
t9057 = 0;
}
float t9100 = (1-t9038);
float t9101 = (t9035*t9100);
float t9102 = (t9038+t9101);
float t9103 = (1-t9102);
float t9104 = (t9057*t9103);
float t9105 = (t9054*t9104);
float t9106 = (t9042+t9105);
float t9107 = (-float(1.5));
float t9108 = (t9107*t180);
float t9109 = (t9108*t9002);
float t9110 = pow(t9021,float(2.5));
float t9111 = (t9109/t9110);
float t9112 = (t9111*float(0.16));
float t9113 = (t9000+t9112);
float t9114 = (t9113*float(0.16));
float t9115 = (t9002+t9114);
float t9116 = (t9115*t9115);
float t9117 = (t9108*t9009);
float t9118 = (t9117/t9110);
float t9119 = (t9118*float(0.16));
float t9120 = (t9007+t9119);
float t9121 = (t9120*float(0.16));
float t9122 = (t9009+t9121);
float t9123 = (t9122*t9122);
float t9124 = (t9116+t9123);
float t9125 = (t9108*t9017);
float t9126 = (t9125/t9110);
float t9127 = (t9126*float(0.16));
float t9128 = (t9015+t9127);
float t9129 = (t9128*float(0.16));
float t9130 = (t9017+t9129);
float t9131 = (t9130*t9130);
float t9132 = (t9124+t9131);
float t9133 = sqrt(t9132);
float t9134 = (t9133*t9133);
bool t9135 = (t9134<1);
float t9136 = (t9002*t9002);
float t9137 = (t9009*t9009);
float t9138 = (t9136+t9137);
float t9139 = (t9017*t9017);
float t9140 = (t9138+t9139);
float t9141 = sqrt(t9140);
float t9142 = (t9141*t9141);
bool t9143 = (t9142>1);
bool t9144 = (t9135&&t9143);
float t9145;
float t9146;
float t9147;
float t9148;
if(t9144){
t9145 = 0;
t9146 = 0;
t9147 = 0;
t9148 = 1;
} else {
t9145 = 0;
t9146 = 0;
t9147 = 0;
t9148 = 0;
}
float t9149 = (1-t9102);
float t9150 = (t9057*t9149);
float t9151 = (t9102+t9150);
float t9152 = (1-t9151);
float t9153 = (t9148*t9152);
float t9154 = (t9145*t9153);
float t9155 = (t9106+t9154);
bool t9156 = (t9009>0);
bool t9157 = (t9122>0);
bool t9158 = (!t9157);
bool t9159 = (t9156&&t9158);
bool t9160 = (!t9156);
bool t9161 = (t9157&&t9160);
bool t9162 = (t9159||t9161);
bool t9163 = (t9134<196);
bool t9164 = (t9134>float(6.76));
bool t9165 = (t9163&&t9164);
bool t9166 = (t9162&&t9165);
float t9167;
float t9168;
float t9169;
float t9170;
if(t9166){
float t9171 = (t9122/t9120);
float t9172 = (-t9171);
float t9173 = (t9113*t9172);
float t9174 = (t9115+t9173);
float t9175 = atan(t9174,t9130);
float t9176 = (u1.u0/30);
float t9177 = (t9175+t9176);
float t9178 = (2*3.1415927);
float t9179 = (t9177+t9178);
float t9180 = mod(t9179,2);
float t9181 = (t9180*3.1415927);
float t9182 = (2*3.1415927);
float t9183 = (t9181/t9182);
float t9184 = (t9174*t9174);
float t9185 = (t9120*t9172);
float t9186 = (t9122+t9185);
float t9187 = (t9186*t9186);
float t9188 = (t9184+t9187);
float t9189 = (t9128*t9172);
float t9190 = (t9130+t9189);
float t9191 = (t9190*t9190);
float t9192 = (t9188+t9191);
float t9193 = sqrt(t9192);
float t9194 = (t9193*t9193);
float t9195 = sqrt(t9194);
float t9196 = (t9195-float(2.6));
float t9197 = (t9196/float(11.4));
vec4 t9198 = texture(s4,vec2(t9183,t9197));
t9167 = t9198.x;
t9168 = t9198.y;
t9169 = t9198.z;
float t9199;
if(t9166){
t9199 = 1;
} else {
t9199 = 0;
}
float t9200 = (t9198.x*t9198.x);
float t9201 = (t9198.y*t9198.y);
float t9202 = (t9200+t9201);
float t9203 = (t9198.z*t9198.z);
float t9204 = (t9202+t9203);
float t9205 = sqrt(t9204);
float t9206 = (t9205*t9205);
float t9207 = (t9206/float(3.0));
bool t9208 = (t9207<=1);
float t9209;
if(t9208){
t9209 = t9207;
} else {
t9209 = 1;
}
bool t9210 = (t9209>=0);
float t9211;
if(t9210){
t9211 = t9209;
} else {
t9211 = 0;
}
float t9212 = (t9199*t9211);
t9170 = t9212;
} else {
t9167 = 0;
t9168 = 0;
t9169 = 0;
t9170 = 0;
}
float t9213 = (1-t9151);
float t9214 = (t9148*t9213);
float t9215 = (t9151+t9214);
float t9216 = (1-t9215);
float t9217 = (t9170*t9216);
float t9218 = (t9167*t9217);
float t9219 = (t9155+t9218);
float t9220 = (-float(1.5));
float t9221 = (t9220*t180);
float t9222 = (t9221*t9115);
float t9223 = pow(t9134,float(2.5));
float t9224 = (t9222/t9223);
float t9225 = (t9224*float(0.16));
float t9226 = (t9113+t9225);
float t9227 = (t9226*float(0.16));
float t9228 = (t9115+t9227);
float t9229 = (t9228*t9228);
float t9230 = (t9221*t9122);
float t9231 = (t9230/t9223);
float t9232 = (t9231*float(0.16));
float t9233 = (t9120+t9232);
float t9234 = (t9233*float(0.16));
float t9235 = (t9122+t9234);
float t9236 = (t9235*t9235);
float t9237 = (t9229+t9236);
float t9238 = (t9221*t9130);
float t9239 = (t9238/t9223);
float t9240 = (t9239*float(0.16));
float t9241 = (t9128+t9240);
float t9242 = (t9241*float(0.16));
float t9243 = (t9130+t9242);
float t9244 = (t9243*t9243);
float t9245 = (t9237+t9244);
float t9246 = sqrt(t9245);
float t9247 = (t9246*t9246);
bool t9248 = (t9247<1);
float t9249 = (t9115*t9115);
float t9250 = (t9122*t9122);
float t9251 = (t9249+t9250);
float t9252 = (t9130*t9130);
float t9253 = (t9251+t9252);
float t9254 = sqrt(t9253);
float t9255 = (t9254*t9254);
bool t9256 = (t9255>1);
bool t9257 = (t9248&&t9256);
float t9258;
float t9259;
float t9260;
float t9261;
if(t9257){
t9258 = 0;
t9259 = 0;
t9260 = 0;
t9261 = 1;
} else {
t9258 = 0;
t9259 = 0;
t9260 = 0;
t9261 = 0;
}
float t9262 = (1-t9215);
float t9263 = (t9170*t9262);
float t9264 = (t9215+t9263);
float t9265 = (1-t9264);
float t9266 = (t9261*t9265);
float t9267 = (t9258*t9266);
float t9268 = (t9219+t9267);
bool t9269 = (t9122>0);
bool t9270 = (t9235>0);
bool t9271 = (!t9270);
bool t9272 = (t9269&&t9271);
bool t9273 = (!t9269);
bool t9274 = (t9270&&t9273);
bool t9275 = (t9272||t9274);
bool t9276 = (t9247<196);
bool t9277 = (t9247>float(6.76));
bool t9278 = (t9276&&t9277);
bool t9279 = (t9275&&t9278);
float t9280;
float t9281;
float t9282;
float t9283;
if(t9279){
float t9284 = (t9235/t9233);
float t9285 = (-t9284);
float t9286 = (t9226*t9285);
float t9287 = (t9228+t9286);
float t9288 = atan(t9287,t9243);
float t9289 = (u1.u0/30);
float t9290 = (t9288+t9289);
float t9291 = (2*3.1415927);
float t9292 = (t9290+t9291);
float t9293 = mod(t9292,2);
float t9294 = (t9293*3.1415927);
float t9295 = (2*3.1415927);
float t9296 = (t9294/t9295);
float t9297 = (t9287*t9287);
float t9298 = (t9233*t9285);
float t9299 = (t9235+t9298);
float t9300 = (t9299*t9299);
float t9301 = (t9297+t9300);
float t9302 = (t9241*t9285);
float t9303 = (t9243+t9302);
float t9304 = (t9303*t9303);
float t9305 = (t9301+t9304);
float t9306 = sqrt(t9305);
float t9307 = (t9306*t9306);
float t9308 = sqrt(t9307);
float t9309 = (t9308-float(2.6));
float t9310 = (t9309/float(11.4));
vec4 t9311 = texture(s4,vec2(t9296,t9310));
t9280 = t9311.x;
t9281 = t9311.y;
t9282 = t9311.z;
float t9312;
if(t9279){
t9312 = 1;
} else {
t9312 = 0;
}
float t9313 = (t9311.x*t9311.x);
float t9314 = (t9311.y*t9311.y);
float t9315 = (t9313+t9314);
float t9316 = (t9311.z*t9311.z);
float t9317 = (t9315+t9316);
float t9318 = sqrt(t9317);
float t9319 = (t9318*t9318);
float t9320 = (t9319/float(3.0));
bool t9321 = (t9320<=1);
float t9322;
if(t9321){
t9322 = t9320;
} else {
t9322 = 1;
}
bool t9323 = (t9322>=0);
float t9324;
if(t9323){
t9324 = t9322;
} else {
t9324 = 0;
}
float t9325 = (t9312*t9324);
t9283 = t9325;
} else {
t9280 = 0;
t9281 = 0;
t9282 = 0;
t9283 = 0;
}
float t9326 = (1-t9264);
float t9327 = (t9261*t9326);
float t9328 = (t9264+t9327);
float t9329 = (1-t9328);
float t9330 = (t9283*t9329);
float t9331 = (t9280*t9330);
float t9332 = (t9268+t9331);
float t9333 = (-float(1.5));
float t9334 = (t9333*t180);
float t9335 = (t9334*t9228);
float t9336 = pow(t9247,float(2.5));
float t9337 = (t9335/t9336);
float t9338 = (t9337*float(0.16));
float t9339 = (t9226+t9338);
float t9340 = (t9339*float(0.16));
float t9341 = (t9228+t9340);
float t9342 = (t9341*t9341);
float t9343 = (t9334*t9235);
float t9344 = (t9343/t9336);
float t9345 = (t9344*float(0.16));
float t9346 = (t9233+t9345);
float t9347 = (t9346*float(0.16));
float t9348 = (t9235+t9347);
float t9349 = (t9348*t9348);
float t9350 = (t9342+t9349);
float t9351 = (t9334*t9243);
float t9352 = (t9351/t9336);
float t9353 = (t9352*float(0.16));
float t9354 = (t9241+t9353);
float t9355 = (t9354*float(0.16));
float t9356 = (t9243+t9355);
float t9357 = (t9356*t9356);
float t9358 = (t9350+t9357);
float t9359 = sqrt(t9358);
float t9360 = (t9359*t9359);
bool t9361 = (t9360<1);
float t9362 = (t9228*t9228);
float t9363 = (t9235*t9235);
float t9364 = (t9362+t9363);
float t9365 = (t9243*t9243);
float t9366 = (t9364+t9365);
float t9367 = sqrt(t9366);
float t9368 = (t9367*t9367);
bool t9369 = (t9368>1);
bool t9370 = (t9361&&t9369);
float t9371;
float t9372;
float t9373;
float t9374;
if(t9370){
t9371 = 0;
t9372 = 0;
t9373 = 0;
t9374 = 1;
} else {
t9371 = 0;
t9372 = 0;
t9373 = 0;
t9374 = 0;
}
float t9375 = (1-t9328);
float t9376 = (t9283*t9375);
float t9377 = (t9328+t9376);
float t9378 = (1-t9377);
float t9379 = (t9374*t9378);
float t9380 = (t9371*t9379);
float t9381 = (t9332+t9380);
bool t9382 = (t9235>0);
bool t9383 = (t9348>0);
bool t9384 = (!t9383);
bool t9385 = (t9382&&t9384);
bool t9386 = (!t9382);
bool t9387 = (t9383&&t9386);
bool t9388 = (t9385||t9387);
bool t9389 = (t9360<196);
bool t9390 = (t9360>float(6.76));
bool t9391 = (t9389&&t9390);
bool t9392 = (t9388&&t9391);
float t9393;
float t9394;
float t9395;
float t9396;
if(t9392){
float t9397 = (t9348/t9346);
float t9398 = (-t9397);
float t9399 = (t9339*t9398);
float t9400 = (t9341+t9399);
float t9401 = atan(t9400,t9356);
float t9402 = (u1.u0/30);
float t9403 = (t9401+t9402);
float t9404 = (2*3.1415927);
float t9405 = (t9403+t9404);
float t9406 = mod(t9405,2);
float t9407 = (t9406*3.1415927);
float t9408 = (2*3.1415927);
float t9409 = (t9407/t9408);
float t9410 = (t9400*t9400);
float t9411 = (t9346*t9398);
float t9412 = (t9348+t9411);
float t9413 = (t9412*t9412);
float t9414 = (t9410+t9413);
float t9415 = (t9354*t9398);
float t9416 = (t9356+t9415);
float t9417 = (t9416*t9416);
float t9418 = (t9414+t9417);
float t9419 = sqrt(t9418);
float t9420 = (t9419*t9419);
float t9421 = sqrt(t9420);
float t9422 = (t9421-float(2.6));
float t9423 = (t9422/float(11.4));
vec4 t9424 = texture(s4,vec2(t9409,t9423));
t9393 = t9424.x;
t9394 = t9424.y;
t9395 = t9424.z;
float t9425;
if(t9392){
t9425 = 1;
} else {
t9425 = 0;
}
float t9426 = (t9424.x*t9424.x);
float t9427 = (t9424.y*t9424.y);
float t9428 = (t9426+t9427);
float t9429 = (t9424.z*t9424.z);
float t9430 = (t9428+t9429);
float t9431 = sqrt(t9430);
float t9432 = (t9431*t9431);
float t9433 = (t9432/float(3.0));
bool t9434 = (t9433<=1);
float t9435;
if(t9434){
t9435 = t9433;
} else {
t9435 = 1;
}
bool t9436 = (t9435>=0);
float t9437;
if(t9436){
t9437 = t9435;
} else {
t9437 = 0;
}
float t9438 = (t9425*t9437);
t9396 = t9438;
} else {
t9393 = 0;
t9394 = 0;
t9395 = 0;
t9396 = 0;
}
float t9439 = (1-t9377);
float t9440 = (t9374*t9439);
float t9441 = (t9377+t9440);
float t9442 = (1-t9441);
float t9443 = (t9396*t9442);
float t9444 = (t9393*t9443);
float t9445 = (t9381+t9444);
float t9446 = (-float(1.5));
float t9447 = (t9446*t180);
float t9448 = (t9447*t9341);
float t9449 = pow(t9360,float(2.5));
float t9450 = (t9448/t9449);
float t9451 = (t9450*float(0.16));
float t9452 = (t9339+t9451);
float t9453 = (t9452*float(0.16));
float t9454 = (t9341+t9453);
float t9455 = (t9454*t9454);
float t9456 = (t9447*t9348);
float t9457 = (t9456/t9449);
float t9458 = (t9457*float(0.16));
float t9459 = (t9346+t9458);
float t9460 = (t9459*float(0.16));
float t9461 = (t9348+t9460);
float t9462 = (t9461*t9461);
float t9463 = (t9455+t9462);
float t9464 = (t9447*t9356);
float t9465 = (t9464/t9449);
float t9466 = (t9465*float(0.16));
float t9467 = (t9354+t9466);
float t9468 = (t9467*float(0.16));
float t9469 = (t9356+t9468);
float t9470 = (t9469*t9469);
float t9471 = (t9463+t9470);
float t9472 = sqrt(t9471);
float t9473 = (t9472*t9472);
bool t9474 = (t9473<1);
float t9475 = (t9341*t9341);
float t9476 = (t9348*t9348);
float t9477 = (t9475+t9476);
float t9478 = (t9356*t9356);
float t9479 = (t9477+t9478);
float t9480 = sqrt(t9479);
float t9481 = (t9480*t9480);
bool t9482 = (t9481>1);
bool t9483 = (t9474&&t9482);
float t9484;
float t9485;
float t9486;
float t9487;
if(t9483){
t9484 = 0;
t9485 = 0;
t9486 = 0;
t9487 = 1;
} else {
t9484 = 0;
t9485 = 0;
t9486 = 0;
t9487 = 0;
}
float t9488 = (1-t9441);
float t9489 = (t9396*t9488);
float t9490 = (t9441+t9489);
float t9491 = (1-t9490);
float t9492 = (t9487*t9491);
float t9493 = (t9484*t9492);
float t9494 = (t9445+t9493);
bool t9495 = (t9348>0);
bool t9496 = (t9461>0);
bool t9497 = (!t9496);
bool t9498 = (t9495&&t9497);
bool t9499 = (!t9495);
bool t9500 = (t9496&&t9499);
bool t9501 = (t9498||t9500);
bool t9502 = (t9473<196);
bool t9503 = (t9473>float(6.76));
bool t9504 = (t9502&&t9503);
bool t9505 = (t9501&&t9504);
float t9506;
float t9507;
float t9508;
float t9509;
if(t9505){
float t9510 = (t9461/t9459);
float t9511 = (-t9510);
float t9512 = (t9452*t9511);
float t9513 = (t9454+t9512);
float t9514 = atan(t9513,t9469);
float t9515 = (u1.u0/30);
float t9516 = (t9514+t9515);
float t9517 = (2*3.1415927);
float t9518 = (t9516+t9517);
float t9519 = mod(t9518,2);
float t9520 = (t9519*3.1415927);
float t9521 = (2*3.1415927);
float t9522 = (t9520/t9521);
float t9523 = (t9513*t9513);
float t9524 = (t9459*t9511);
float t9525 = (t9461+t9524);
float t9526 = (t9525*t9525);
float t9527 = (t9523+t9526);
float t9528 = (t9467*t9511);
float t9529 = (t9469+t9528);
float t9530 = (t9529*t9529);
float t9531 = (t9527+t9530);
float t9532 = sqrt(t9531);
float t9533 = (t9532*t9532);
float t9534 = sqrt(t9533);
float t9535 = (t9534-float(2.6));
float t9536 = (t9535/float(11.4));
vec4 t9537 = texture(s4,vec2(t9522,t9536));
t9506 = t9537.x;
t9507 = t9537.y;
t9508 = t9537.z;
float t9538;
if(t9505){
t9538 = 1;
} else {
t9538 = 0;
}
float t9539 = (t9537.x*t9537.x);
float t9540 = (t9537.y*t9537.y);
float t9541 = (t9539+t9540);
float t9542 = (t9537.z*t9537.z);
float t9543 = (t9541+t9542);
float t9544 = sqrt(t9543);
float t9545 = (t9544*t9544);
float t9546 = (t9545/float(3.0));
bool t9547 = (t9546<=1);
float t9548;
if(t9547){
t9548 = t9546;
} else {
t9548 = 1;
}
bool t9549 = (t9548>=0);
float t9550;
if(t9549){
t9550 = t9548;
} else {
t9550 = 0;
}
float t9551 = (t9538*t9550);
t9509 = t9551;
} else {
t9506 = 0;
t9507 = 0;
t9508 = 0;
t9509 = 0;
}
float t9552 = (1-t9490);
float t9553 = (t9487*t9552);
float t9554 = (t9490+t9553);
float t9555 = (1-t9554);
float t9556 = (t9509*t9555);
float t9557 = (t9506*t9556);
float t9558 = (t9494+t9557);
float t9559 = (-float(1.5));
float t9560 = (t9559*t180);
float t9561 = (t9560*t9454);
float t9562 = pow(t9473,float(2.5));
float t9563 = (t9561/t9562);
float t9564 = (t9563*float(0.16));
float t9565 = (t9452+t9564);
float t9566 = (t9565*float(0.16));
float t9567 = (t9454+t9566);
float t9568 = (t9567*t9567);
float t9569 = (t9560*t9461);
float t9570 = (t9569/t9562);
float t9571 = (t9570*float(0.16));
float t9572 = (t9459+t9571);
float t9573 = (t9572*float(0.16));
float t9574 = (t9461+t9573);
float t9575 = (t9574*t9574);
float t9576 = (t9568+t9575);
float t9577 = (t9560*t9469);
float t9578 = (t9577/t9562);
float t9579 = (t9578*float(0.16));
float t9580 = (t9467+t9579);
float t9581 = (t9580*float(0.16));
float t9582 = (t9469+t9581);
float t9583 = (t9582*t9582);
float t9584 = (t9576+t9583);
float t9585 = sqrt(t9584);
float t9586 = (t9585*t9585);
bool t9587 = (t9586<1);
float t9588 = (t9454*t9454);
float t9589 = (t9461*t9461);
float t9590 = (t9588+t9589);
float t9591 = (t9469*t9469);
float t9592 = (t9590+t9591);
float t9593 = sqrt(t9592);
float t9594 = (t9593*t9593);
bool t9595 = (t9594>1);
bool t9596 = (t9587&&t9595);
float t9597;
float t9598;
float t9599;
float t9600;
if(t9596){
t9597 = 0;
t9598 = 0;
t9599 = 0;
t9600 = 1;
} else {
t9597 = 0;
t9598 = 0;
t9599 = 0;
t9600 = 0;
}
float t9601 = (1-t9554);
float t9602 = (t9509*t9601);
float t9603 = (t9554+t9602);
float t9604 = (1-t9603);
float t9605 = (t9600*t9604);
float t9606 = (t9597*t9605);
float t9607 = (t9558+t9606);
bool t9608 = (t9461>0);
bool t9609 = (t9574>0);
bool t9610 = (!t9609);
bool t9611 = (t9608&&t9610);
bool t9612 = (!t9608);
bool t9613 = (t9609&&t9612);
bool t9614 = (t9611||t9613);
bool t9615 = (t9586<196);
bool t9616 = (t9586>float(6.76));
bool t9617 = (t9615&&t9616);
bool t9618 = (t9614&&t9617);
float t9619;
float t9620;
float t9621;
float t9622;
if(t9618){
float t9623 = (t9574/t9572);
float t9624 = (-t9623);
float t9625 = (t9565*t9624);
float t9626 = (t9567+t9625);
float t9627 = atan(t9626,t9582);
float t9628 = (u1.u0/30);
float t9629 = (t9627+t9628);
float t9630 = (2*3.1415927);
float t9631 = (t9629+t9630);
float t9632 = mod(t9631,2);
float t9633 = (t9632*3.1415927);
float t9634 = (2*3.1415927);
float t9635 = (t9633/t9634);
float t9636 = (t9626*t9626);
float t9637 = (t9572*t9624);
float t9638 = (t9574+t9637);
float t9639 = (t9638*t9638);
float t9640 = (t9636+t9639);
float t9641 = (t9580*t9624);
float t9642 = (t9582+t9641);
float t9643 = (t9642*t9642);
float t9644 = (t9640+t9643);
float t9645 = sqrt(t9644);
float t9646 = (t9645*t9645);
float t9647 = sqrt(t9646);
float t9648 = (t9647-float(2.6));
float t9649 = (t9648/float(11.4));
vec4 t9650 = texture(s4,vec2(t9635,t9649));
t9619 = t9650.x;
t9620 = t9650.y;
t9621 = t9650.z;
float t9651;
if(t9618){
t9651 = 1;
} else {
t9651 = 0;
}
float t9652 = (t9650.x*t9650.x);
float t9653 = (t9650.y*t9650.y);
float t9654 = (t9652+t9653);
float t9655 = (t9650.z*t9650.z);
float t9656 = (t9654+t9655);
float t9657 = sqrt(t9656);
float t9658 = (t9657*t9657);
float t9659 = (t9658/float(3.0));
bool t9660 = (t9659<=1);
float t9661;
if(t9660){
t9661 = t9659;
} else {
t9661 = 1;
}
bool t9662 = (t9661>=0);
float t9663;
if(t9662){
t9663 = t9661;
} else {
t9663 = 0;
}
float t9664 = (t9651*t9663);
t9622 = t9664;
} else {
t9619 = 0;
t9620 = 0;
t9621 = 0;
t9622 = 0;
}
float t9665 = (1-t9603);
float t9666 = (t9600*t9665);
float t9667 = (t9603+t9666);
float t9668 = (1-t9667);
float t9669 = (t9622*t9668);
float t9670 = (t9619*t9669);
float t9671 = (t9607+t9670);
float t9672 = (-float(1.5));
float t9673 = (t9672*t180);
float t9674 = (t9673*t9567);
float t9675 = pow(t9586,float(2.5));
float t9676 = (t9674/t9675);
float t9677 = (t9676*float(0.16));
float t9678 = (t9565+t9677);
float t9679 = (t9678*float(0.16));
float t9680 = (t9567+t9679);
float t9681 = (t9680*t9680);
float t9682 = (t9673*t9574);
float t9683 = (t9682/t9675);
float t9684 = (t9683*float(0.16));
float t9685 = (t9572+t9684);
float t9686 = (t9685*float(0.16));
float t9687 = (t9574+t9686);
float t9688 = (t9687*t9687);
float t9689 = (t9681+t9688);
float t9690 = (t9673*t9582);
float t9691 = (t9690/t9675);
float t9692 = (t9691*float(0.16));
float t9693 = (t9580+t9692);
float t9694 = (t9693*float(0.16));
float t9695 = (t9582+t9694);
float t9696 = (t9695*t9695);
float t9697 = (t9689+t9696);
float t9698 = sqrt(t9697);
float t9699 = (t9698*t9698);
bool t9700 = (t9699<1);
float t9701 = (t9567*t9567);
float t9702 = (t9574*t9574);
float t9703 = (t9701+t9702);
float t9704 = (t9582*t9582);
float t9705 = (t9703+t9704);
float t9706 = sqrt(t9705);
float t9707 = (t9706*t9706);
bool t9708 = (t9707>1);
bool t9709 = (t9700&&t9708);
float t9710;
float t9711;
float t9712;
float t9713;
if(t9709){
t9710 = 0;
t9711 = 0;
t9712 = 0;
t9713 = 1;
} else {
t9710 = 0;
t9711 = 0;
t9712 = 0;
t9713 = 0;
}
float t9714 = (1-t9667);
float t9715 = (t9622*t9714);
float t9716 = (t9667+t9715);
float t9717 = (1-t9716);
float t9718 = (t9713*t9717);
float t9719 = (t9710*t9718);
float t9720 = (t9671+t9719);
bool t9721 = (t9574>0);
bool t9722 = (t9687>0);
bool t9723 = (!t9722);
bool t9724 = (t9721&&t9723);
bool t9725 = (!t9721);
bool t9726 = (t9722&&t9725);
bool t9727 = (t9724||t9726);
bool t9728 = (t9699<196);
bool t9729 = (t9699>float(6.76));
bool t9730 = (t9728&&t9729);
bool t9731 = (t9727&&t9730);
float t9732;
float t9733;
float t9734;
float t9735;
if(t9731){
float t9736 = (t9687/t9685);
float t9737 = (-t9736);
float t9738 = (t9678*t9737);
float t9739 = (t9680+t9738);
float t9740 = atan(t9739,t9695);
float t9741 = (u1.u0/30);
float t9742 = (t9740+t9741);
float t9743 = (2*3.1415927);
float t9744 = (t9742+t9743);
float t9745 = mod(t9744,2);
float t9746 = (t9745*3.1415927);
float t9747 = (2*3.1415927);
float t9748 = (t9746/t9747);
float t9749 = (t9739*t9739);
float t9750 = (t9685*t9737);
float t9751 = (t9687+t9750);
float t9752 = (t9751*t9751);
float t9753 = (t9749+t9752);
float t9754 = (t9693*t9737);
float t9755 = (t9695+t9754);
float t9756 = (t9755*t9755);
float t9757 = (t9753+t9756);
float t9758 = sqrt(t9757);
float t9759 = (t9758*t9758);
float t9760 = sqrt(t9759);
float t9761 = (t9760-float(2.6));
float t9762 = (t9761/float(11.4));
vec4 t9763 = texture(s4,vec2(t9748,t9762));
t9732 = t9763.x;
t9733 = t9763.y;
t9734 = t9763.z;
float t9764;
if(t9731){
t9764 = 1;
} else {
t9764 = 0;
}
float t9765 = (t9763.x*t9763.x);
float t9766 = (t9763.y*t9763.y);
float t9767 = (t9765+t9766);
float t9768 = (t9763.z*t9763.z);
float t9769 = (t9767+t9768);
float t9770 = sqrt(t9769);
float t9771 = (t9770*t9770);
float t9772 = (t9771/float(3.0));
bool t9773 = (t9772<=1);
float t9774;
if(t9773){
t9774 = t9772;
} else {
t9774 = 1;
}
bool t9775 = (t9774>=0);
float t9776;
if(t9775){
t9776 = t9774;
} else {
t9776 = 0;
}
float t9777 = (t9764*t9776);
t9735 = t9777;
} else {
t9732 = 0;
t9733 = 0;
t9734 = 0;
t9735 = 0;
}
float t9778 = (1-t9716);
float t9779 = (t9713*t9778);
float t9780 = (t9716+t9779);
float t9781 = (1-t9780);
float t9782 = (t9735*t9781);
float t9783 = (t9732*t9782);
float t9784 = (t9720+t9783);
float t9785 = (-float(1.5));
float t9786 = (t9785*t180);
float t9787 = (t9786*t9680);
float t9788 = pow(t9699,float(2.5));
float t9789 = (t9787/t9788);
float t9790 = (t9789*float(0.16));
float t9791 = (t9678+t9790);
float t9792 = (t9791*float(0.16));
float t9793 = (t9680+t9792);
float t9794 = (t9793*t9793);
float t9795 = (t9786*t9687);
float t9796 = (t9795/t9788);
float t9797 = (t9796*float(0.16));
float t9798 = (t9685+t9797);
float t9799 = (t9798*float(0.16));
float t9800 = (t9687+t9799);
float t9801 = (t9800*t9800);
float t9802 = (t9794+t9801);
float t9803 = (t9786*t9695);
float t9804 = (t9803/t9788);
float t9805 = (t9804*float(0.16));
float t9806 = (t9693+t9805);
float t9807 = (t9806*float(0.16));
float t9808 = (t9695+t9807);
float t9809 = (t9808*t9808);
float t9810 = (t9802+t9809);
float t9811 = sqrt(t9810);
float t9812 = (t9811*t9811);
bool t9813 = (t9812<1);
float t9814 = (t9680*t9680);
float t9815 = (t9687*t9687);
float t9816 = (t9814+t9815);
float t9817 = (t9695*t9695);
float t9818 = (t9816+t9817);
float t9819 = sqrt(t9818);
float t9820 = (t9819*t9819);
bool t9821 = (t9820>1);
bool t9822 = (t9813&&t9821);
float t9823;
float t9824;
float t9825;
float t9826;
if(t9822){
t9823 = 0;
t9824 = 0;
t9825 = 0;
t9826 = 1;
} else {
t9823 = 0;
t9824 = 0;
t9825 = 0;
t9826 = 0;
}
float t9827 = (1-t9780);
float t9828 = (t9735*t9827);
float t9829 = (t9780+t9828);
float t9830 = (1-t9829);
float t9831 = (t9826*t9830);
float t9832 = (t9823*t9831);
float t9833 = (t9784+t9832);
bool t9834 = (t9687>0);
bool t9835 = (t9800>0);
bool t9836 = (!t9835);
bool t9837 = (t9834&&t9836);
bool t9838 = (!t9834);
bool t9839 = (t9835&&t9838);
bool t9840 = (t9837||t9839);
bool t9841 = (t9812<196);
bool t9842 = (t9812>float(6.76));
bool t9843 = (t9841&&t9842);
bool t9844 = (t9840&&t9843);
float t9845;
float t9846;
float t9847;
float t9848;
if(t9844){
float t9849 = (t9800/t9798);
float t9850 = (-t9849);
float t9851 = (t9791*t9850);
float t9852 = (t9793+t9851);
float t9853 = atan(t9852,t9808);
float t9854 = (u1.u0/30);
float t9855 = (t9853+t9854);
float t9856 = (2*3.1415927);
float t9857 = (t9855+t9856);
float t9858 = mod(t9857,2);
float t9859 = (t9858*3.1415927);
float t9860 = (2*3.1415927);
float t9861 = (t9859/t9860);
float t9862 = (t9852*t9852);
float t9863 = (t9798*t9850);
float t9864 = (t9800+t9863);
float t9865 = (t9864*t9864);
float t9866 = (t9862+t9865);
float t9867 = (t9806*t9850);
float t9868 = (t9808+t9867);
float t9869 = (t9868*t9868);
float t9870 = (t9866+t9869);
float t9871 = sqrt(t9870);
float t9872 = (t9871*t9871);
float t9873 = sqrt(t9872);
float t9874 = (t9873-float(2.6));
float t9875 = (t9874/float(11.4));
vec4 t9876 = texture(s4,vec2(t9861,t9875));
t9845 = t9876.x;
t9846 = t9876.y;
t9847 = t9876.z;
float t9877;
if(t9844){
t9877 = 1;
} else {
t9877 = 0;
}
float t9878 = (t9876.x*t9876.x);
float t9879 = (t9876.y*t9876.y);
float t9880 = (t9878+t9879);
float t9881 = (t9876.z*t9876.z);
float t9882 = (t9880+t9881);
float t9883 = sqrt(t9882);
float t9884 = (t9883*t9883);
float t9885 = (t9884/float(3.0));
bool t9886 = (t9885<=1);
float t9887;
if(t9886){
t9887 = t9885;
} else {
t9887 = 1;
}
bool t9888 = (t9887>=0);
float t9889;
if(t9888){
t9889 = t9887;
} else {
t9889 = 0;
}
float t9890 = (t9877*t9889);
t9848 = t9890;
} else {
t9845 = 0;
t9846 = 0;
t9847 = 0;
t9848 = 0;
}
float t9891 = (1-t9829);
float t9892 = (t9826*t9891);
float t9893 = (t9829+t9892);
float t9894 = (1-t9893);
float t9895 = (t9848*t9894);
float t9896 = (t9845*t9895);
float t9897 = (t9833+t9896);
float t9898 = (-float(1.5));
float t9899 = (t9898*t180);
float t9900 = (t9899*t9793);
float t9901 = pow(t9812,float(2.5));
float t9902 = (t9900/t9901);
float t9903 = (t9902*float(0.16));
float t9904 = (t9791+t9903);
float t9905 = (t9904*float(0.16));
float t9906 = (t9793+t9905);
float t9907 = (t9906*t9906);
float t9908 = (t9899*t9800);
float t9909 = (t9908/t9901);
float t9910 = (t9909*float(0.16));
float t9911 = (t9798+t9910);
float t9912 = (t9911*float(0.16));
float t9913 = (t9800+t9912);
float t9914 = (t9913*t9913);
float t9915 = (t9907+t9914);
float t9916 = (t9899*t9808);
float t9917 = (t9916/t9901);
float t9918 = (t9917*float(0.16));
float t9919 = (t9806+t9918);
float t9920 = (t9919*float(0.16));
float t9921 = (t9808+t9920);
float t9922 = (t9921*t9921);
float t9923 = (t9915+t9922);
float t9924 = sqrt(t9923);
float t9925 = (t9924*t9924);
bool t9926 = (t9925<1);
float t9927 = (t9793*t9793);
float t9928 = (t9800*t9800);
float t9929 = (t9927+t9928);
float t9930 = (t9808*t9808);
float t9931 = (t9929+t9930);
float t9932 = sqrt(t9931);
float t9933 = (t9932*t9932);
bool t9934 = (t9933>1);
bool t9935 = (t9926&&t9934);
float t9936;
float t9937;
float t9938;
float t9939;
if(t9935){
t9936 = 0;
t9937 = 0;
t9938 = 0;
t9939 = 1;
} else {
t9936 = 0;
t9937 = 0;
t9938 = 0;
t9939 = 0;
}
float t9940 = (1-t9893);
float t9941 = (t9848*t9940);
float t9942 = (t9893+t9941);
float t9943 = (1-t9942);
float t9944 = (t9939*t9943);
float t9945 = (t9936*t9944);
float t9946 = (t9897+t9945);
bool t9947 = (t9800>0);
bool t9948 = (t9913>0);
bool t9949 = (!t9948);
bool t9950 = (t9947&&t9949);
bool t9951 = (!t9947);
bool t9952 = (t9948&&t9951);
bool t9953 = (t9950||t9952);
bool t9954 = (t9925<196);
bool t9955 = (t9925>float(6.76));
bool t9956 = (t9954&&t9955);
bool t9957 = (t9953&&t9956);
float t9958;
float t9959;
float t9960;
float t9961;
if(t9957){
float t9962 = (t9913/t9911);
float t9963 = (-t9962);
float t9964 = (t9904*t9963);
float t9965 = (t9906+t9964);
float t9966 = atan(t9965,t9921);
float t9967 = (u1.u0/30);
float t9968 = (t9966+t9967);
float t9969 = (2*3.1415927);
float t9970 = (t9968+t9969);
float t9971 = mod(t9970,2);
float t9972 = (t9971*3.1415927);
float t9973 = (2*3.1415927);
float t9974 = (t9972/t9973);
float t9975 = (t9965*t9965);
float t9976 = (t9911*t9963);
float t9977 = (t9913+t9976);
float t9978 = (t9977*t9977);
float t9979 = (t9975+t9978);
float t9980 = (t9919*t9963);
float t9981 = (t9921+t9980);
float t9982 = (t9981*t9981);
float t9983 = (t9979+t9982);
float t9984 = sqrt(t9983);
float t9985 = (t9984*t9984);
float t9986 = sqrt(t9985);
float t9987 = (t9986-float(2.6));
float t9988 = (t9987/float(11.4));
vec4 t9989 = texture(s4,vec2(t9974,t9988));
t9958 = t9989.x;
t9959 = t9989.y;
t9960 = t9989.z;
float t9990;
if(t9957){
t9990 = 1;
} else {
t9990 = 0;
}
float t9991 = (t9989.x*t9989.x);
float t9992 = (t9989.y*t9989.y);
float t9993 = (t9991+t9992);
float t9994 = (t9989.z*t9989.z);
float t9995 = (t9993+t9994);
float t9996 = sqrt(t9995);
float t9997 = (t9996*t9996);
float t9998 = (t9997/float(3.0));
bool t9999 = (t9998<=1);
float t10000;
if(t9999){
t10000 = t9998;
} else {
t10000 = 1;
}
bool t10001 = (t10000>=0);
float t10002;
if(t10001){
t10002 = t10000;
} else {
t10002 = 0;
}
float t10003 = (t9990*t10002);
t9961 = t10003;
} else {
t9958 = 0;
t9959 = 0;
t9960 = 0;
t9961 = 0;
}
float t10004 = (1-t9942);
float t10005 = (t9939*t10004);
float t10006 = (t9942+t10005);
float t10007 = (1-t10006);
float t10008 = (t9961*t10007);
float t10009 = (t9958*t10008);
float t10010 = (t9946+t10009);
float t10011 = (-float(1.5));
float t10012 = (t10011*t180);
float t10013 = (t10012*t9906);
float t10014 = pow(t9925,float(2.5));
float t10015 = (t10013/t10014);
float t10016 = (t10015*float(0.16));
float t10017 = (t9904+t10016);
float t10018 = (t10017*float(0.16));
float t10019 = (t9906+t10018);
float t10020 = (t10019*t10019);
float t10021 = (t10012*t9913);
float t10022 = (t10021/t10014);
float t10023 = (t10022*float(0.16));
float t10024 = (t9911+t10023);
float t10025 = (t10024*float(0.16));
float t10026 = (t9913+t10025);
float t10027 = (t10026*t10026);
float t10028 = (t10020+t10027);
float t10029 = (t10012*t9921);
float t10030 = (t10029/t10014);
float t10031 = (t10030*float(0.16));
float t10032 = (t9919+t10031);
float t10033 = (t10032*float(0.16));
float t10034 = (t9921+t10033);
float t10035 = (t10034*t10034);
float t10036 = (t10028+t10035);
float t10037 = sqrt(t10036);
float t10038 = (t10037*t10037);
bool t10039 = (t10038<1);
float t10040 = (t9906*t9906);
float t10041 = (t9913*t9913);
float t10042 = (t10040+t10041);
float t10043 = (t9921*t9921);
float t10044 = (t10042+t10043);
float t10045 = sqrt(t10044);
float t10046 = (t10045*t10045);
bool t10047 = (t10046>1);
bool t10048 = (t10039&&t10047);
float t10049;
float t10050;
float t10051;
float t10052;
if(t10048){
t10049 = 0;
t10050 = 0;
t10051 = 0;
t10052 = 1;
} else {
t10049 = 0;
t10050 = 0;
t10051 = 0;
t10052 = 0;
}
float t10053 = (1-t10006);
float t10054 = (t9961*t10053);
float t10055 = (t10006+t10054);
float t10056 = (1-t10055);
float t10057 = (t10052*t10056);
float t10058 = (t10049*t10057);
float t10059 = (t10010+t10058);
bool t10060 = (t9913>0);
bool t10061 = (t10026>0);
bool t10062 = (!t10061);
bool t10063 = (t10060&&t10062);
bool t10064 = (!t10060);
bool t10065 = (t10061&&t10064);
bool t10066 = (t10063||t10065);
bool t10067 = (t10038<196);
bool t10068 = (t10038>float(6.76));
bool t10069 = (t10067&&t10068);
bool t10070 = (t10066&&t10069);
float t10071;
float t10072;
float t10073;
float t10074;
if(t10070){
float t10075 = (t10026/t10024);
float t10076 = (-t10075);
float t10077 = (t10017*t10076);
float t10078 = (t10019+t10077);
float t10079 = atan(t10078,t10034);
float t10080 = (u1.u0/30);
float t10081 = (t10079+t10080);
float t10082 = (2*3.1415927);
float t10083 = (t10081+t10082);
float t10084 = mod(t10083,2);
float t10085 = (t10084*3.1415927);
float t10086 = (2*3.1415927);
float t10087 = (t10085/t10086);
float t10088 = (t10078*t10078);
float t10089 = (t10024*t10076);
float t10090 = (t10026+t10089);
float t10091 = (t10090*t10090);
float t10092 = (t10088+t10091);
float t10093 = (t10032*t10076);
float t10094 = (t10034+t10093);
float t10095 = (t10094*t10094);
float t10096 = (t10092+t10095);
float t10097 = sqrt(t10096);
float t10098 = (t10097*t10097);
float t10099 = sqrt(t10098);
float t10100 = (t10099-float(2.6));
float t10101 = (t10100/float(11.4));
vec4 t10102 = texture(s4,vec2(t10087,t10101));
t10071 = t10102.x;
t10072 = t10102.y;
t10073 = t10102.z;
float t10103;
if(t10070){
t10103 = 1;
} else {
t10103 = 0;
}
float t10104 = (t10102.x*t10102.x);
float t10105 = (t10102.y*t10102.y);
float t10106 = (t10104+t10105);
float t10107 = (t10102.z*t10102.z);
float t10108 = (t10106+t10107);
float t10109 = sqrt(t10108);
float t10110 = (t10109*t10109);
float t10111 = (t10110/float(3.0));
bool t10112 = (t10111<=1);
float t10113;
if(t10112){
t10113 = t10111;
} else {
t10113 = 1;
}
bool t10114 = (t10113>=0);
float t10115;
if(t10114){
t10115 = t10113;
} else {
t10115 = 0;
}
float t10116 = (t10103*t10115);
t10074 = t10116;
} else {
t10071 = 0;
t10072 = 0;
t10073 = 0;
t10074 = 0;
}
float t10117 = (1-t10055);
float t10118 = (t10052*t10117);
float t10119 = (t10055+t10118);
float t10120 = (1-t10119);
float t10121 = (t10074*t10120);
float t10122 = (t10071*t10121);
float t10123 = (t10059+t10122);
float t10124 = (-float(1.5));
float t10125 = (t10124*t180);
float t10126 = (t10125*t10019);
float t10127 = pow(t10038,float(2.5));
float t10128 = (t10126/t10127);
float t10129 = (t10128*float(0.16));
float t10130 = (t10017+t10129);
float t10131 = (t10130*float(0.16));
float t10132 = (t10019+t10131);
float t10133 = (t10132*t10132);
float t10134 = (t10125*t10026);
float t10135 = (t10134/t10127);
float t10136 = (t10135*float(0.16));
float t10137 = (t10024+t10136);
float t10138 = (t10137*float(0.16));
float t10139 = (t10026+t10138);
float t10140 = (t10139*t10139);
float t10141 = (t10133+t10140);
float t10142 = (t10125*t10034);
float t10143 = (t10142/t10127);
float t10144 = (t10143*float(0.16));
float t10145 = (t10032+t10144);
float t10146 = (t10145*float(0.16));
float t10147 = (t10034+t10146);
float t10148 = (t10147*t10147);
float t10149 = (t10141+t10148);
float t10150 = sqrt(t10149);
float t10151 = (t10150*t10150);
bool t10152 = (t10151<1);
float t10153 = (t10019*t10019);
float t10154 = (t10026*t10026);
float t10155 = (t10153+t10154);
float t10156 = (t10034*t10034);
float t10157 = (t10155+t10156);
float t10158 = sqrt(t10157);
float t10159 = (t10158*t10158);
bool t10160 = (t10159>1);
bool t10161 = (t10152&&t10160);
float t10162;
float t10163;
float t10164;
float t10165;
if(t10161){
t10162 = 0;
t10163 = 0;
t10164 = 0;
t10165 = 1;
} else {
t10162 = 0;
t10163 = 0;
t10164 = 0;
t10165 = 0;
}
float t10166 = (1-t10119);
float t10167 = (t10074*t10166);
float t10168 = (t10119+t10167);
float t10169 = (1-t10168);
float t10170 = (t10165*t10169);
float t10171 = (t10162*t10170);
float t10172 = (t10123+t10171);
bool t10173 = (t10026>0);
bool t10174 = (t10139>0);
bool t10175 = (!t10174);
bool t10176 = (t10173&&t10175);
bool t10177 = (!t10173);
bool t10178 = (t10174&&t10177);
bool t10179 = (t10176||t10178);
bool t10180 = (t10151<196);
bool t10181 = (t10151>float(6.76));
bool t10182 = (t10180&&t10181);
bool t10183 = (t10179&&t10182);
float t10184;
float t10185;
float t10186;
float t10187;
if(t10183){
float t10188 = (t10139/t10137);
float t10189 = (-t10188);
float t10190 = (t10130*t10189);
float t10191 = (t10132+t10190);
float t10192 = atan(t10191,t10147);
float t10193 = (u1.u0/30);
float t10194 = (t10192+t10193);
float t10195 = (2*3.1415927);
float t10196 = (t10194+t10195);
float t10197 = mod(t10196,2);
float t10198 = (t10197*3.1415927);
float t10199 = (2*3.1415927);
float t10200 = (t10198/t10199);
float t10201 = (t10191*t10191);
float t10202 = (t10137*t10189);
float t10203 = (t10139+t10202);
float t10204 = (t10203*t10203);
float t10205 = (t10201+t10204);
float t10206 = (t10145*t10189);
float t10207 = (t10147+t10206);
float t10208 = (t10207*t10207);
float t10209 = (t10205+t10208);
float t10210 = sqrt(t10209);
float t10211 = (t10210*t10210);
float t10212 = sqrt(t10211);
float t10213 = (t10212-float(2.6));
float t10214 = (t10213/float(11.4));
vec4 t10215 = texture(s4,vec2(t10200,t10214));
t10184 = t10215.x;
t10185 = t10215.y;
t10186 = t10215.z;
float t10216;
if(t10183){
t10216 = 1;
} else {
t10216 = 0;
}
float t10217 = (t10215.x*t10215.x);
float t10218 = (t10215.y*t10215.y);
float t10219 = (t10217+t10218);
float t10220 = (t10215.z*t10215.z);
float t10221 = (t10219+t10220);
float t10222 = sqrt(t10221);
float t10223 = (t10222*t10222);
float t10224 = (t10223/float(3.0));
bool t10225 = (t10224<=1);
float t10226;
if(t10225){
t10226 = t10224;
} else {
t10226 = 1;
}
bool t10227 = (t10226>=0);
float t10228;
if(t10227){
t10228 = t10226;
} else {
t10228 = 0;
}
float t10229 = (t10216*t10228);
t10187 = t10229;
} else {
t10184 = 0;
t10185 = 0;
t10186 = 0;
t10187 = 0;
}
float t10230 = (1-t10168);
float t10231 = (t10165*t10230);
float t10232 = (t10168+t10231);
float t10233 = (1-t10232);
float t10234 = (t10187*t10233);
float t10235 = (t10184*t10234);
float t10236 = (t10172+t10235);
float t10237 = (-float(1.5));
float t10238 = (t10237*t180);
float t10239 = (t10238*t10132);
float t10240 = pow(t10151,float(2.5));
float t10241 = (t10239/t10240);
float t10242 = (t10241*float(0.16));
float t10243 = (t10130+t10242);
float t10244 = (t10243*float(0.16));
float t10245 = (t10132+t10244);
float t10246 = (t10245*t10245);
float t10247 = (t10238*t10139);
float t10248 = (t10247/t10240);
float t10249 = (t10248*float(0.16));
float t10250 = (t10137+t10249);
float t10251 = (t10250*float(0.16));
float t10252 = (t10139+t10251);
float t10253 = (t10252*t10252);
float t10254 = (t10246+t10253);
float t10255 = (t10238*t10147);
float t10256 = (t10255/t10240);
float t10257 = (t10256*float(0.16));
float t10258 = (t10145+t10257);
float t10259 = (t10258*float(0.16));
float t10260 = (t10147+t10259);
float t10261 = (t10260*t10260);
float t10262 = (t10254+t10261);
float t10263 = sqrt(t10262);
float t10264 = (t10263*t10263);
bool t10265 = (t10264<1);
float t10266 = (t10132*t10132);
float t10267 = (t10139*t10139);
float t10268 = (t10266+t10267);
float t10269 = (t10147*t10147);
float t10270 = (t10268+t10269);
float t10271 = sqrt(t10270);
float t10272 = (t10271*t10271);
bool t10273 = (t10272>1);
bool t10274 = (t10265&&t10273);
float t10275;
float t10276;
float t10277;
float t10278;
if(t10274){
t10275 = 0;
t10276 = 0;
t10277 = 0;
t10278 = 1;
} else {
t10275 = 0;
t10276 = 0;
t10277 = 0;
t10278 = 0;
}
float t10279 = (1-t10232);
float t10280 = (t10187*t10279);
float t10281 = (t10232+t10280);
float t10282 = (1-t10281);
float t10283 = (t10278*t10282);
float t10284 = (t10275*t10283);
float t10285 = (t10236+t10284);
bool t10286 = (t10139>0);
bool t10287 = (t10252>0);
bool t10288 = (!t10287);
bool t10289 = (t10286&&t10288);
bool t10290 = (!t10286);
bool t10291 = (t10287&&t10290);
bool t10292 = (t10289||t10291);
bool t10293 = (t10264<196);
bool t10294 = (t10264>float(6.76));
bool t10295 = (t10293&&t10294);
bool t10296 = (t10292&&t10295);
float t10297;
float t10298;
float t10299;
float t10300;
if(t10296){
float t10301 = (t10252/t10250);
float t10302 = (-t10301);
float t10303 = (t10243*t10302);
float t10304 = (t10245+t10303);
float t10305 = atan(t10304,t10260);
float t10306 = (u1.u0/30);
float t10307 = (t10305+t10306);
float t10308 = (2*3.1415927);
float t10309 = (t10307+t10308);
float t10310 = mod(t10309,2);
float t10311 = (t10310*3.1415927);
float t10312 = (2*3.1415927);
float t10313 = (t10311/t10312);
float t10314 = (t10304*t10304);
float t10315 = (t10250*t10302);
float t10316 = (t10252+t10315);
float t10317 = (t10316*t10316);
float t10318 = (t10314+t10317);
float t10319 = (t10258*t10302);
float t10320 = (t10260+t10319);
float t10321 = (t10320*t10320);
float t10322 = (t10318+t10321);
float t10323 = sqrt(t10322);
float t10324 = (t10323*t10323);
float t10325 = sqrt(t10324);
float t10326 = (t10325-float(2.6));
float t10327 = (t10326/float(11.4));
vec4 t10328 = texture(s4,vec2(t10313,t10327));
t10297 = t10328.x;
t10298 = t10328.y;
t10299 = t10328.z;
float t10329;
if(t10296){
t10329 = 1;
} else {
t10329 = 0;
}
float t10330 = (t10328.x*t10328.x);
float t10331 = (t10328.y*t10328.y);
float t10332 = (t10330+t10331);
float t10333 = (t10328.z*t10328.z);
float t10334 = (t10332+t10333);
float t10335 = sqrt(t10334);
float t10336 = (t10335*t10335);
float t10337 = (t10336/float(3.0));
bool t10338 = (t10337<=1);
float t10339;
if(t10338){
t10339 = t10337;
} else {
t10339 = 1;
}
bool t10340 = (t10339>=0);
float t10341;
if(t10340){
t10341 = t10339;
} else {
t10341 = 0;
}
float t10342 = (t10329*t10341);
t10300 = t10342;
} else {
t10297 = 0;
t10298 = 0;
t10299 = 0;
t10300 = 0;
}
float t10343 = (1-t10281);
float t10344 = (t10278*t10343);
float t10345 = (t10281+t10344);
float t10346 = (1-t10345);
float t10347 = (t10300*t10346);
float t10348 = (t10297*t10347);
float t10349 = (t10285+t10348);
float t10350 = (-float(1.5));
float t10351 = (t10350*t180);
float t10352 = (t10351*t10245);
float t10353 = pow(t10264,float(2.5));
float t10354 = (t10352/t10353);
float t10355 = (t10354*float(0.16));
float t10356 = (t10243+t10355);
float t10357 = (t10356*float(0.16));
float t10358 = (t10245+t10357);
float t10359 = (t10358*t10358);
float t10360 = (t10351*t10252);
float t10361 = (t10360/t10353);
float t10362 = (t10361*float(0.16));
float t10363 = (t10250+t10362);
float t10364 = (t10363*float(0.16));
float t10365 = (t10252+t10364);
float t10366 = (t10365*t10365);
float t10367 = (t10359+t10366);
float t10368 = (t10351*t10260);
float t10369 = (t10368/t10353);
float t10370 = (t10369*float(0.16));
float t10371 = (t10258+t10370);
float t10372 = (t10371*float(0.16));
float t10373 = (t10260+t10372);
float t10374 = (t10373*t10373);
float t10375 = (t10367+t10374);
float t10376 = sqrt(t10375);
float t10377 = (t10376*t10376);
bool t10378 = (t10377<1);
float t10379 = (t10245*t10245);
float t10380 = (t10252*t10252);
float t10381 = (t10379+t10380);
float t10382 = (t10260*t10260);
float t10383 = (t10381+t10382);
float t10384 = sqrt(t10383);
float t10385 = (t10384*t10384);
bool t10386 = (t10385>1);
bool t10387 = (t10378&&t10386);
float t10388;
float t10389;
float t10390;
float t10391;
if(t10387){
t10388 = 0;
t10389 = 0;
t10390 = 0;
t10391 = 1;
} else {
t10388 = 0;
t10389 = 0;
t10390 = 0;
t10391 = 0;
}
float t10392 = (1-t10345);
float t10393 = (t10300*t10392);
float t10394 = (t10345+t10393);
float t10395 = (1-t10394);
float t10396 = (t10391*t10395);
float t10397 = (t10388*t10396);
float t10398 = (t10349+t10397);
bool t10399 = (t10252>0);
bool t10400 = (t10365>0);
bool t10401 = (!t10400);
bool t10402 = (t10399&&t10401);
bool t10403 = (!t10399);
bool t10404 = (t10400&&t10403);
bool t10405 = (t10402||t10404);
bool t10406 = (t10377<196);
bool t10407 = (t10377>float(6.76));
bool t10408 = (t10406&&t10407);
bool t10409 = (t10405&&t10408);
float t10410;
float t10411;
float t10412;
float t10413;
if(t10409){
float t10414 = (t10365/t10363);
float t10415 = (-t10414);
float t10416 = (t10356*t10415);
float t10417 = (t10358+t10416);
float t10418 = atan(t10417,t10373);
float t10419 = (u1.u0/30);
float t10420 = (t10418+t10419);
float t10421 = (2*3.1415927);
float t10422 = (t10420+t10421);
float t10423 = mod(t10422,2);
float t10424 = (t10423*3.1415927);
float t10425 = (2*3.1415927);
float t10426 = (t10424/t10425);
float t10427 = (t10417*t10417);
float t10428 = (t10363*t10415);
float t10429 = (t10365+t10428);
float t10430 = (t10429*t10429);
float t10431 = (t10427+t10430);
float t10432 = (t10371*t10415);
float t10433 = (t10373+t10432);
float t10434 = (t10433*t10433);
float t10435 = (t10431+t10434);
float t10436 = sqrt(t10435);
float t10437 = (t10436*t10436);
float t10438 = sqrt(t10437);
float t10439 = (t10438-float(2.6));
float t10440 = (t10439/float(11.4));
vec4 t10441 = texture(s4,vec2(t10426,t10440));
t10410 = t10441.x;
t10411 = t10441.y;
t10412 = t10441.z;
float t10442;
if(t10409){
t10442 = 1;
} else {
t10442 = 0;
}
float t10443 = (t10441.x*t10441.x);
float t10444 = (t10441.y*t10441.y);
float t10445 = (t10443+t10444);
float t10446 = (t10441.z*t10441.z);
float t10447 = (t10445+t10446);
float t10448 = sqrt(t10447);
float t10449 = (t10448*t10448);
float t10450 = (t10449/float(3.0));
bool t10451 = (t10450<=1);
float t10452;
if(t10451){
t10452 = t10450;
} else {
t10452 = 1;
}
bool t10453 = (t10452>=0);
float t10454;
if(t10453){
t10454 = t10452;
} else {
t10454 = 0;
}
float t10455 = (t10442*t10454);
t10413 = t10455;
} else {
t10410 = 0;
t10411 = 0;
t10412 = 0;
t10413 = 0;
}
float t10456 = (1-t10394);
float t10457 = (t10391*t10456);
float t10458 = (t10394+t10457);
float t10459 = (1-t10458);
float t10460 = (t10413*t10459);
float t10461 = (t10410*t10460);
float t10462 = (t10398+t10461);
float t10463 = (-float(1.5));
float t10464 = (t10463*t180);
float t10465 = (t10464*t10358);
float t10466 = pow(t10377,float(2.5));
float t10467 = (t10465/t10466);
float t10468 = (t10467*float(0.16));
float t10469 = (t10356+t10468);
float t10470 = (t10469*float(0.16));
float t10471 = (t10358+t10470);
float t10472 = (t10471*t10471);
float t10473 = (t10464*t10365);
float t10474 = (t10473/t10466);
float t10475 = (t10474*float(0.16));
float t10476 = (t10363+t10475);
float t10477 = (t10476*float(0.16));
float t10478 = (t10365+t10477);
float t10479 = (t10478*t10478);
float t10480 = (t10472+t10479);
float t10481 = (t10464*t10373);
float t10482 = (t10481/t10466);
float t10483 = (t10482*float(0.16));
float t10484 = (t10371+t10483);
float t10485 = (t10484*float(0.16));
float t10486 = (t10373+t10485);
float t10487 = (t10486*t10486);
float t10488 = (t10480+t10487);
float t10489 = sqrt(t10488);
float t10490 = (t10489*t10489);
bool t10491 = (t10490<1);
float t10492 = (t10358*t10358);
float t10493 = (t10365*t10365);
float t10494 = (t10492+t10493);
float t10495 = (t10373*t10373);
float t10496 = (t10494+t10495);
float t10497 = sqrt(t10496);
float t10498 = (t10497*t10497);
bool t10499 = (t10498>1);
bool t10500 = (t10491&&t10499);
float t10501;
float t10502;
float t10503;
float t10504;
if(t10500){
t10501 = 0;
t10502 = 0;
t10503 = 0;
t10504 = 1;
} else {
t10501 = 0;
t10502 = 0;
t10503 = 0;
t10504 = 0;
}
float t10505 = (1-t10458);
float t10506 = (t10413*t10505);
float t10507 = (t10458+t10506);
float t10508 = (1-t10507);
float t10509 = (t10504*t10508);
float t10510 = (t10501*t10509);
float t10511 = (t10462+t10510);
bool t10512 = (t10365>0);
bool t10513 = (t10478>0);
bool t10514 = (!t10513);
bool t10515 = (t10512&&t10514);
bool t10516 = (!t10512);
bool t10517 = (t10513&&t10516);
bool t10518 = (t10515||t10517);
bool t10519 = (t10490<196);
bool t10520 = (t10490>float(6.76));
bool t10521 = (t10519&&t10520);
bool t10522 = (t10518&&t10521);
float t10523;
float t10524;
float t10525;
float t10526;
if(t10522){
float t10527 = (t10478/t10476);
float t10528 = (-t10527);
float t10529 = (t10469*t10528);
float t10530 = (t10471+t10529);
float t10531 = atan(t10530,t10486);
float t10532 = (u1.u0/30);
float t10533 = (t10531+t10532);
float t10534 = (2*3.1415927);
float t10535 = (t10533+t10534);
float t10536 = mod(t10535,2);
float t10537 = (t10536*3.1415927);
float t10538 = (2*3.1415927);
float t10539 = (t10537/t10538);
float t10540 = (t10530*t10530);
float t10541 = (t10476*t10528);
float t10542 = (t10478+t10541);
float t10543 = (t10542*t10542);
float t10544 = (t10540+t10543);
float t10545 = (t10484*t10528);
float t10546 = (t10486+t10545);
float t10547 = (t10546*t10546);
float t10548 = (t10544+t10547);
float t10549 = sqrt(t10548);
float t10550 = (t10549*t10549);
float t10551 = sqrt(t10550);
float t10552 = (t10551-float(2.6));
float t10553 = (t10552/float(11.4));
vec4 t10554 = texture(s4,vec2(t10539,t10553));
t10523 = t10554.x;
t10524 = t10554.y;
t10525 = t10554.z;
float t10555;
if(t10522){
t10555 = 1;
} else {
t10555 = 0;
}
float t10556 = (t10554.x*t10554.x);
float t10557 = (t10554.y*t10554.y);
float t10558 = (t10556+t10557);
float t10559 = (t10554.z*t10554.z);
float t10560 = (t10558+t10559);
float t10561 = sqrt(t10560);
float t10562 = (t10561*t10561);
float t10563 = (t10562/float(3.0));
bool t10564 = (t10563<=1);
float t10565;
if(t10564){
t10565 = t10563;
} else {
t10565 = 1;
}
bool t10566 = (t10565>=0);
float t10567;
if(t10566){
t10567 = t10565;
} else {
t10567 = 0;
}
float t10568 = (t10555*t10567);
t10526 = t10568;
} else {
t10523 = 0;
t10524 = 0;
t10525 = 0;
t10526 = 0;
}
float t10569 = (1-t10507);
float t10570 = (t10504*t10569);
float t10571 = (t10507+t10570);
float t10572 = (1-t10571);
float t10573 = (t10526*t10572);
float t10574 = (t10523*t10573);
float t10575 = (t10511+t10574);
float t10576 = (-float(1.5));
float t10577 = (t10576*t180);
float t10578 = (t10577*t10471);
float t10579 = pow(t10490,float(2.5));
float t10580 = (t10578/t10579);
float t10581 = (t10580*float(0.16));
float t10582 = (t10469+t10581);
float t10583 = (t10582*float(0.16));
float t10584 = (t10471+t10583);
float t10585 = (t10584*t10584);
float t10586 = (t10577*t10478);
float t10587 = (t10586/t10579);
float t10588 = (t10587*float(0.16));
float t10589 = (t10476+t10588);
float t10590 = (t10589*float(0.16));
float t10591 = (t10478+t10590);
float t10592 = (t10591*t10591);
float t10593 = (t10585+t10592);
float t10594 = (t10577*t10486);
float t10595 = (t10594/t10579);
float t10596 = (t10595*float(0.16));
float t10597 = (t10484+t10596);
float t10598 = (t10597*float(0.16));
float t10599 = (t10486+t10598);
float t10600 = (t10599*t10599);
float t10601 = (t10593+t10600);
float t10602 = sqrt(t10601);
float t10603 = (t10602*t10602);
bool t10604 = (t10603<1);
float t10605 = (t10471*t10471);
float t10606 = (t10478*t10478);
float t10607 = (t10605+t10606);
float t10608 = (t10486*t10486);
float t10609 = (t10607+t10608);
float t10610 = sqrt(t10609);
float t10611 = (t10610*t10610);
bool t10612 = (t10611>1);
bool t10613 = (t10604&&t10612);
float t10614;
float t10615;
float t10616;
float t10617;
if(t10613){
t10614 = 0;
t10615 = 0;
t10616 = 0;
t10617 = 1;
} else {
t10614 = 0;
t10615 = 0;
t10616 = 0;
t10617 = 0;
}
float t10618 = (1-t10571);
float t10619 = (t10526*t10618);
float t10620 = (t10571+t10619);
float t10621 = (1-t10620);
float t10622 = (t10617*t10621);
float t10623 = (t10614*t10622);
float t10624 = (t10575+t10623);
bool t10625 = (t10478>0);
bool t10626 = (t10591>0);
bool t10627 = (!t10626);
bool t10628 = (t10625&&t10627);
bool t10629 = (!t10625);
bool t10630 = (t10626&&t10629);
bool t10631 = (t10628||t10630);
bool t10632 = (t10603<196);
bool t10633 = (t10603>float(6.76));
bool t10634 = (t10632&&t10633);
bool t10635 = (t10631&&t10634);
float t10636;
float t10637;
float t10638;
float t10639;
if(t10635){
float t10640 = (t10591/t10589);
float t10641 = (-t10640);
float t10642 = (t10582*t10641);
float t10643 = (t10584+t10642);
float t10644 = atan(t10643,t10599);
float t10645 = (u1.u0/30);
float t10646 = (t10644+t10645);
float t10647 = (2*3.1415927);
float t10648 = (t10646+t10647);
float t10649 = mod(t10648,2);
float t10650 = (t10649*3.1415927);
float t10651 = (2*3.1415927);
float t10652 = (t10650/t10651);
float t10653 = (t10643*t10643);
float t10654 = (t10589*t10641);
float t10655 = (t10591+t10654);
float t10656 = (t10655*t10655);
float t10657 = (t10653+t10656);
float t10658 = (t10597*t10641);
float t10659 = (t10599+t10658);
float t10660 = (t10659*t10659);
float t10661 = (t10657+t10660);
float t10662 = sqrt(t10661);
float t10663 = (t10662*t10662);
float t10664 = sqrt(t10663);
float t10665 = (t10664-float(2.6));
float t10666 = (t10665/float(11.4));
vec4 t10667 = texture(s4,vec2(t10652,t10666));
t10636 = t10667.x;
t10637 = t10667.y;
t10638 = t10667.z;
float t10668;
if(t10635){
t10668 = 1;
} else {
t10668 = 0;
}
float t10669 = (t10667.x*t10667.x);
float t10670 = (t10667.y*t10667.y);
float t10671 = (t10669+t10670);
float t10672 = (t10667.z*t10667.z);
float t10673 = (t10671+t10672);
float t10674 = sqrt(t10673);
float t10675 = (t10674*t10674);
float t10676 = (t10675/float(3.0));
bool t10677 = (t10676<=1);
float t10678;
if(t10677){
t10678 = t10676;
} else {
t10678 = 1;
}
bool t10679 = (t10678>=0);
float t10680;
if(t10679){
t10680 = t10678;
} else {
t10680 = 0;
}
float t10681 = (t10668*t10680);
t10639 = t10681;
} else {
t10636 = 0;
t10637 = 0;
t10638 = 0;
t10639 = 0;
}
float t10682 = (1-t10620);
float t10683 = (t10617*t10682);
float t10684 = (t10620+t10683);
float t10685 = (1-t10684);
float t10686 = (t10639*t10685);
float t10687 = (t10636*t10686);
float t10688 = (t10624+t10687);
float t10689 = (-float(1.5));
float t10690 = (t10689*t180);
float t10691 = (t10690*t10584);
float t10692 = pow(t10603,float(2.5));
float t10693 = (t10691/t10692);
float t10694 = (t10693*float(0.16));
float t10695 = (t10582+t10694);
float t10696 = (t10695*float(0.16));
float t10697 = (t10584+t10696);
float t10698 = (t10697*t10697);
float t10699 = (t10690*t10591);
float t10700 = (t10699/t10692);
float t10701 = (t10700*float(0.16));
float t10702 = (t10589+t10701);
float t10703 = (t10702*float(0.16));
float t10704 = (t10591+t10703);
float t10705 = (t10704*t10704);
float t10706 = (t10698+t10705);
float t10707 = (t10690*t10599);
float t10708 = (t10707/t10692);
float t10709 = (t10708*float(0.16));
float t10710 = (t10597+t10709);
float t10711 = (t10710*float(0.16));
float t10712 = (t10599+t10711);
float t10713 = (t10712*t10712);
float t10714 = (t10706+t10713);
float t10715 = sqrt(t10714);
float t10716 = (t10715*t10715);
bool t10717 = (t10716<1);
float t10718 = (t10584*t10584);
float t10719 = (t10591*t10591);
float t10720 = (t10718+t10719);
float t10721 = (t10599*t10599);
float t10722 = (t10720+t10721);
float t10723 = sqrt(t10722);
float t10724 = (t10723*t10723);
bool t10725 = (t10724>1);
bool t10726 = (t10717&&t10725);
float t10727;
float t10728;
float t10729;
float t10730;
if(t10726){
t10727 = 0;
t10728 = 0;
t10729 = 0;
t10730 = 1;
} else {
t10727 = 0;
t10728 = 0;
t10729 = 0;
t10730 = 0;
}
float t10731 = (1-t10684);
float t10732 = (t10639*t10731);
float t10733 = (t10684+t10732);
float t10734 = (1-t10733);
float t10735 = (t10730*t10734);
float t10736 = (t10727*t10735);
float t10737 = (t10688+t10736);
bool t10738 = (t10591>0);
bool t10739 = (t10704>0);
bool t10740 = (!t10739);
bool t10741 = (t10738&&t10740);
bool t10742 = (!t10738);
bool t10743 = (t10739&&t10742);
bool t10744 = (t10741||t10743);
bool t10745 = (t10716<196);
bool t10746 = (t10716>float(6.76));
bool t10747 = (t10745&&t10746);
bool t10748 = (t10744&&t10747);
float t10749;
float t10750;
float t10751;
float t10752;
if(t10748){
float t10753 = (t10704/t10702);
float t10754 = (-t10753);
float t10755 = (t10695*t10754);
float t10756 = (t10697+t10755);
float t10757 = atan(t10756,t10712);
float t10758 = (u1.u0/30);
float t10759 = (t10757+t10758);
float t10760 = (2*3.1415927);
float t10761 = (t10759+t10760);
float t10762 = mod(t10761,2);
float t10763 = (t10762*3.1415927);
float t10764 = (2*3.1415927);
float t10765 = (t10763/t10764);
float t10766 = (t10756*t10756);
float t10767 = (t10702*t10754);
float t10768 = (t10704+t10767);
float t10769 = (t10768*t10768);
float t10770 = (t10766+t10769);
float t10771 = (t10710*t10754);
float t10772 = (t10712+t10771);
float t10773 = (t10772*t10772);
float t10774 = (t10770+t10773);
float t10775 = sqrt(t10774);
float t10776 = (t10775*t10775);
float t10777 = sqrt(t10776);
float t10778 = (t10777-float(2.6));
float t10779 = (t10778/float(11.4));
vec4 t10780 = texture(s4,vec2(t10765,t10779));
t10749 = t10780.x;
t10750 = t10780.y;
t10751 = t10780.z;
float t10781;
if(t10748){
t10781 = 1;
} else {
t10781 = 0;
}
float t10782 = (t10780.x*t10780.x);
float t10783 = (t10780.y*t10780.y);
float t10784 = (t10782+t10783);
float t10785 = (t10780.z*t10780.z);
float t10786 = (t10784+t10785);
float t10787 = sqrt(t10786);
float t10788 = (t10787*t10787);
float t10789 = (t10788/float(3.0));
bool t10790 = (t10789<=1);
float t10791;
if(t10790){
t10791 = t10789;
} else {
t10791 = 1;
}
bool t10792 = (t10791>=0);
float t10793;
if(t10792){
t10793 = t10791;
} else {
t10793 = 0;
}
float t10794 = (t10781*t10793);
t10752 = t10794;
} else {
t10749 = 0;
t10750 = 0;
t10751 = 0;
t10752 = 0;
}
float t10795 = (1-t10733);
float t10796 = (t10730*t10795);
float t10797 = (t10733+t10796);
float t10798 = (1-t10797);
float t10799 = (t10752*t10798);
float t10800 = (t10749*t10799);
float t10801 = (t10737+t10800);
float t10802 = (-float(1.5));
float t10803 = (t10802*t180);
float t10804 = (t10803*t10697);
float t10805 = pow(t10716,float(2.5));
float t10806 = (t10804/t10805);
float t10807 = (t10806*float(0.16));
float t10808 = (t10695+t10807);
float t10809 = (t10808*float(0.16));
float t10810 = (t10697+t10809);
float t10811 = (t10810*t10810);
float t10812 = (t10803*t10704);
float t10813 = (t10812/t10805);
float t10814 = (t10813*float(0.16));
float t10815 = (t10702+t10814);
float t10816 = (t10815*float(0.16));
float t10817 = (t10704+t10816);
float t10818 = (t10817*t10817);
float t10819 = (t10811+t10818);
float t10820 = (t10803*t10712);
float t10821 = (t10820/t10805);
float t10822 = (t10821*float(0.16));
float t10823 = (t10710+t10822);
float t10824 = (t10823*float(0.16));
float t10825 = (t10712+t10824);
float t10826 = (t10825*t10825);
float t10827 = (t10819+t10826);
float t10828 = sqrt(t10827);
float t10829 = (t10828*t10828);
bool t10830 = (t10829<1);
float t10831 = (t10697*t10697);
float t10832 = (t10704*t10704);
float t10833 = (t10831+t10832);
float t10834 = (t10712*t10712);
float t10835 = (t10833+t10834);
float t10836 = sqrt(t10835);
float t10837 = (t10836*t10836);
bool t10838 = (t10837>1);
bool t10839 = (t10830&&t10838);
float t10840;
float t10841;
float t10842;
float t10843;
if(t10839){
t10840 = 0;
t10841 = 0;
t10842 = 0;
t10843 = 1;
} else {
t10840 = 0;
t10841 = 0;
t10842 = 0;
t10843 = 0;
}
float t10844 = (1-t10797);
float t10845 = (t10752*t10844);
float t10846 = (t10797+t10845);
float t10847 = (1-t10846);
float t10848 = (t10843*t10847);
float t10849 = (t10840*t10848);
float t10850 = (t10801+t10849);
bool t10851 = (t10704>0);
bool t10852 = (t10817>0);
bool t10853 = (!t10852);
bool t10854 = (t10851&&t10853);
bool t10855 = (!t10851);
bool t10856 = (t10852&&t10855);
bool t10857 = (t10854||t10856);
bool t10858 = (t10829<196);
bool t10859 = (t10829>float(6.76));
bool t10860 = (t10858&&t10859);
bool t10861 = (t10857&&t10860);
float t10862;
float t10863;
float t10864;
float t10865;
if(t10861){
float t10866 = (t10817/t10815);
float t10867 = (-t10866);
float t10868 = (t10808*t10867);
float t10869 = (t10810+t10868);
float t10870 = atan(t10869,t10825);
float t10871 = (u1.u0/30);
float t10872 = (t10870+t10871);
float t10873 = (2*3.1415927);
float t10874 = (t10872+t10873);
float t10875 = mod(t10874,2);
float t10876 = (t10875*3.1415927);
float t10877 = (2*3.1415927);
float t10878 = (t10876/t10877);
float t10879 = (t10869*t10869);
float t10880 = (t10815*t10867);
float t10881 = (t10817+t10880);
float t10882 = (t10881*t10881);
float t10883 = (t10879+t10882);
float t10884 = (t10823*t10867);
float t10885 = (t10825+t10884);
float t10886 = (t10885*t10885);
float t10887 = (t10883+t10886);
float t10888 = sqrt(t10887);
float t10889 = (t10888*t10888);
float t10890 = sqrt(t10889);
float t10891 = (t10890-float(2.6));
float t10892 = (t10891/float(11.4));
vec4 t10893 = texture(s4,vec2(t10878,t10892));
t10862 = t10893.x;
t10863 = t10893.y;
t10864 = t10893.z;
float t10894;
if(t10861){
t10894 = 1;
} else {
t10894 = 0;
}
float t10895 = (t10893.x*t10893.x);
float t10896 = (t10893.y*t10893.y);
float t10897 = (t10895+t10896);
float t10898 = (t10893.z*t10893.z);
float t10899 = (t10897+t10898);
float t10900 = sqrt(t10899);
float t10901 = (t10900*t10900);
float t10902 = (t10901/float(3.0));
bool t10903 = (t10902<=1);
float t10904;
if(t10903){
t10904 = t10902;
} else {
t10904 = 1;
}
bool t10905 = (t10904>=0);
float t10906;
if(t10905){
t10906 = t10904;
} else {
t10906 = 0;
}
float t10907 = (t10894*t10906);
t10865 = t10907;
} else {
t10862 = 0;
t10863 = 0;
t10864 = 0;
t10865 = 0;
}
float t10908 = (1-t10846);
float t10909 = (t10843*t10908);
float t10910 = (t10846+t10909);
float t10911 = (1-t10910);
float t10912 = (t10865*t10911);
float t10913 = (t10862*t10912);
float t10914 = (t10850+t10913);
float t10915 = (-float(1.5));
float t10916 = (t10915*t180);
float t10917 = (t10916*t10810);
float t10918 = pow(t10829,float(2.5));
float t10919 = (t10917/t10918);
float t10920 = (t10919*float(0.16));
float t10921 = (t10808+t10920);
float t10922 = (t10921*float(0.16));
float t10923 = (t10810+t10922);
float t10924 = (t10923*t10923);
float t10925 = (t10916*t10817);
float t10926 = (t10925/t10918);
float t10927 = (t10926*float(0.16));
float t10928 = (t10815+t10927);
float t10929 = (t10928*float(0.16));
float t10930 = (t10817+t10929);
float t10931 = (t10930*t10930);
float t10932 = (t10924+t10931);
float t10933 = (t10916*t10825);
float t10934 = (t10933/t10918);
float t10935 = (t10934*float(0.16));
float t10936 = (t10823+t10935);
float t10937 = (t10936*float(0.16));
float t10938 = (t10825+t10937);
float t10939 = (t10938*t10938);
float t10940 = (t10932+t10939);
float t10941 = sqrt(t10940);
float t10942 = (t10941*t10941);
bool t10943 = (t10942<1);
float t10944 = (t10810*t10810);
float t10945 = (t10817*t10817);
float t10946 = (t10944+t10945);
float t10947 = (t10825*t10825);
float t10948 = (t10946+t10947);
float t10949 = sqrt(t10948);
float t10950 = (t10949*t10949);
bool t10951 = (t10950>1);
bool t10952 = (t10943&&t10951);
float t10953;
float t10954;
float t10955;
float t10956;
if(t10952){
t10953 = 0;
t10954 = 0;
t10955 = 0;
t10956 = 1;
} else {
t10953 = 0;
t10954 = 0;
t10955 = 0;
t10956 = 0;
}
float t10957 = (1-t10910);
float t10958 = (t10865*t10957);
float t10959 = (t10910+t10958);
float t10960 = (1-t10959);
float t10961 = (t10956*t10960);
float t10962 = (t10953*t10961);
float t10963 = (t10914+t10962);
bool t10964 = (t10817>0);
bool t10965 = (t10930>0);
bool t10966 = (!t10965);
bool t10967 = (t10964&&t10966);
bool t10968 = (!t10964);
bool t10969 = (t10965&&t10968);
bool t10970 = (t10967||t10969);
bool t10971 = (t10942<196);
bool t10972 = (t10942>float(6.76));
bool t10973 = (t10971&&t10972);
bool t10974 = (t10970&&t10973);
float t10975;
float t10976;
float t10977;
float t10978;
if(t10974){
float t10979 = (t10930/t10928);
float t10980 = (-t10979);
float t10981 = (t10921*t10980);
float t10982 = (t10923+t10981);
float t10983 = atan(t10982,t10938);
float t10984 = (u1.u0/30);
float t10985 = (t10983+t10984);
float t10986 = (2*3.1415927);
float t10987 = (t10985+t10986);
float t10988 = mod(t10987,2);
float t10989 = (t10988*3.1415927);
float t10990 = (2*3.1415927);
float t10991 = (t10989/t10990);
float t10992 = (t10982*t10982);
float t10993 = (t10928*t10980);
float t10994 = (t10930+t10993);
float t10995 = (t10994*t10994);
float t10996 = (t10992+t10995);
float t10997 = (t10936*t10980);
float t10998 = (t10938+t10997);
float t10999 = (t10998*t10998);
float t11000 = (t10996+t10999);
float t11001 = sqrt(t11000);
float t11002 = (t11001*t11001);
float t11003 = sqrt(t11002);
float t11004 = (t11003-float(2.6));
float t11005 = (t11004/float(11.4));
vec4 t11006 = texture(s4,vec2(t10991,t11005));
t10975 = t11006.x;
t10976 = t11006.y;
t10977 = t11006.z;
float t11007;
if(t10974){
t11007 = 1;
} else {
t11007 = 0;
}
float t11008 = (t11006.x*t11006.x);
float t11009 = (t11006.y*t11006.y);
float t11010 = (t11008+t11009);
float t11011 = (t11006.z*t11006.z);
float t11012 = (t11010+t11011);
float t11013 = sqrt(t11012);
float t11014 = (t11013*t11013);
float t11015 = (t11014/float(3.0));
bool t11016 = (t11015<=1);
float t11017;
if(t11016){
t11017 = t11015;
} else {
t11017 = 1;
}
bool t11018 = (t11017>=0);
float t11019;
if(t11018){
t11019 = t11017;
} else {
t11019 = 0;
}
float t11020 = (t11007*t11019);
t10978 = t11020;
} else {
t10975 = 0;
t10976 = 0;
t10977 = 0;
t10978 = 0;
}
float t11021 = (1-t10959);
float t11022 = (t10956*t11021);
float t11023 = (t10959+t11022);
float t11024 = (1-t11023);
float t11025 = (t10978*t11024);
float t11026 = (t10975*t11025);
float t11027 = (t10963+t11026);
float t11028 = (-float(1.5));
float t11029 = (t11028*t180);
float t11030 = (t11029*t10923);
float t11031 = pow(t10942,float(2.5));
float t11032 = (t11030/t11031);
float t11033 = (t11032*float(0.16));
float t11034 = (t10921+t11033);
float t11035 = (t11034*float(0.16));
float t11036 = (t10923+t11035);
float t11037 = (t11036*t11036);
float t11038 = (t11029*t10930);
float t11039 = (t11038/t11031);
float t11040 = (t11039*float(0.16));
float t11041 = (t10928+t11040);
float t11042 = (t11041*float(0.16));
float t11043 = (t10930+t11042);
float t11044 = (t11043*t11043);
float t11045 = (t11037+t11044);
float t11046 = (t11029*t10938);
float t11047 = (t11046/t11031);
float t11048 = (t11047*float(0.16));
float t11049 = (t10936+t11048);
float t11050 = (t11049*float(0.16));
float t11051 = (t10938+t11050);
float t11052 = (t11051*t11051);
float t11053 = (t11045+t11052);
float t11054 = sqrt(t11053);
float t11055 = (t11054*t11054);
bool t11056 = (t11055<1);
float t11057 = (t10923*t10923);
float t11058 = (t10930*t10930);
float t11059 = (t11057+t11058);
float t11060 = (t10938*t10938);
float t11061 = (t11059+t11060);
float t11062 = sqrt(t11061);
float t11063 = (t11062*t11062);
bool t11064 = (t11063>1);
bool t11065 = (t11056&&t11064);
float t11066;
float t11067;
float t11068;
float t11069;
if(t11065){
t11066 = 0;
t11067 = 0;
t11068 = 0;
t11069 = 1;
} else {
t11066 = 0;
t11067 = 0;
t11068 = 0;
t11069 = 0;
}
float t11070 = (1-t11023);
float t11071 = (t10978*t11070);
float t11072 = (t11023+t11071);
float t11073 = (1-t11072);
float t11074 = (t11069*t11073);
float t11075 = (t11066*t11074);
float t11076 = (t11027+t11075);
bool t11077 = (t10930>0);
bool t11078 = (t11043>0);
bool t11079 = (!t11078);
bool t11080 = (t11077&&t11079);
bool t11081 = (!t11077);
bool t11082 = (t11078&&t11081);
bool t11083 = (t11080||t11082);
bool t11084 = (t11055<196);
bool t11085 = (t11055>float(6.76));
bool t11086 = (t11084&&t11085);
bool t11087 = (t11083&&t11086);
float t11088;
float t11089;
float t11090;
float t11091;
if(t11087){
float t11092 = (t11043/t11041);
float t11093 = (-t11092);
float t11094 = (t11034*t11093);
float t11095 = (t11036+t11094);
float t11096 = atan(t11095,t11051);
float t11097 = (u1.u0/30);
float t11098 = (t11096+t11097);
float t11099 = (2*3.1415927);
float t11100 = (t11098+t11099);
float t11101 = mod(t11100,2);
float t11102 = (t11101*3.1415927);
float t11103 = (2*3.1415927);
float t11104 = (t11102/t11103);
float t11105 = (t11095*t11095);
float t11106 = (t11041*t11093);
float t11107 = (t11043+t11106);
float t11108 = (t11107*t11107);
float t11109 = (t11105+t11108);
float t11110 = (t11049*t11093);
float t11111 = (t11051+t11110);
float t11112 = (t11111*t11111);
float t11113 = (t11109+t11112);
float t11114 = sqrt(t11113);
float t11115 = (t11114*t11114);
float t11116 = sqrt(t11115);
float t11117 = (t11116-float(2.6));
float t11118 = (t11117/float(11.4));
vec4 t11119 = texture(s4,vec2(t11104,t11118));
t11088 = t11119.x;
t11089 = t11119.y;
t11090 = t11119.z;
float t11120;
if(t11087){
t11120 = 1;
} else {
t11120 = 0;
}
float t11121 = (t11119.x*t11119.x);
float t11122 = (t11119.y*t11119.y);
float t11123 = (t11121+t11122);
float t11124 = (t11119.z*t11119.z);
float t11125 = (t11123+t11124);
float t11126 = sqrt(t11125);
float t11127 = (t11126*t11126);
float t11128 = (t11127/float(3.0));
bool t11129 = (t11128<=1);
float t11130;
if(t11129){
t11130 = t11128;
} else {
t11130 = 1;
}
bool t11131 = (t11130>=0);
float t11132;
if(t11131){
t11132 = t11130;
} else {
t11132 = 0;
}
float t11133 = (t11120*t11132);
t11091 = t11133;
} else {
t11088 = 0;
t11089 = 0;
t11090 = 0;
t11091 = 0;
}
float t11134 = (1-t11072);
float t11135 = (t11069*t11134);
float t11136 = (t11072+t11135);
float t11137 = (1-t11136);
float t11138 = (t11091*t11137);
float t11139 = (t11088*t11138);
float t11140 = (t11076+t11139);
float t11141 = (-float(1.5));
float t11142 = (t11141*t180);
float t11143 = (t11142*t11036);
float t11144 = pow(t11055,float(2.5));
float t11145 = (t11143/t11144);
float t11146 = (t11145*float(0.16));
float t11147 = (t11034+t11146);
float t11148 = (t11147*float(0.16));
float t11149 = (t11036+t11148);
float t11150 = (t11149*t11149);
float t11151 = (t11142*t11043);
float t11152 = (t11151/t11144);
float t11153 = (t11152*float(0.16));
float t11154 = (t11041+t11153);
float t11155 = (t11154*float(0.16));
float t11156 = (t11043+t11155);
float t11157 = (t11156*t11156);
float t11158 = (t11150+t11157);
float t11159 = (t11142*t11051);
float t11160 = (t11159/t11144);
float t11161 = (t11160*float(0.16));
float t11162 = (t11049+t11161);
float t11163 = (t11162*float(0.16));
float t11164 = (t11051+t11163);
float t11165 = (t11164*t11164);
float t11166 = (t11158+t11165);
float t11167 = sqrt(t11166);
float t11168 = (t11167*t11167);
bool t11169 = (t11168<1);
float t11170 = (t11036*t11036);
float t11171 = (t11043*t11043);
float t11172 = (t11170+t11171);
float t11173 = (t11051*t11051);
float t11174 = (t11172+t11173);
float t11175 = sqrt(t11174);
float t11176 = (t11175*t11175);
bool t11177 = (t11176>1);
bool t11178 = (t11169&&t11177);
float t11179;
float t11180;
float t11181;
float t11182;
if(t11178){
t11179 = 0;
t11180 = 0;
t11181 = 0;
t11182 = 1;
} else {
t11179 = 0;
t11180 = 0;
t11181 = 0;
t11182 = 0;
}
float t11183 = (1-t11136);
float t11184 = (t11091*t11183);
float t11185 = (t11136+t11184);
float t11186 = (1-t11185);
float t11187 = (t11182*t11186);
float t11188 = (t11179*t11187);
float t11189 = (t11140+t11188);
bool t11190 = (t11043>0);
bool t11191 = (t11156>0);
bool t11192 = (!t11191);
bool t11193 = (t11190&&t11192);
bool t11194 = (!t11190);
bool t11195 = (t11191&&t11194);
bool t11196 = (t11193||t11195);
bool t11197 = (t11168<196);
bool t11198 = (t11168>float(6.76));
bool t11199 = (t11197&&t11198);
bool t11200 = (t11196&&t11199);
float t11201;
float t11202;
float t11203;
float t11204;
if(t11200){
float t11205 = (t11156/t11154);
float t11206 = (-t11205);
float t11207 = (t11147*t11206);
float t11208 = (t11149+t11207);
float t11209 = atan(t11208,t11164);
float t11210 = (u1.u0/30);
float t11211 = (t11209+t11210);
float t11212 = (2*3.1415927);
float t11213 = (t11211+t11212);
float t11214 = mod(t11213,2);
float t11215 = (t11214*3.1415927);
float t11216 = (2*3.1415927);
float t11217 = (t11215/t11216);
float t11218 = (t11208*t11208);
float t11219 = (t11154*t11206);
float t11220 = (t11156+t11219);
float t11221 = (t11220*t11220);
float t11222 = (t11218+t11221);
float t11223 = (t11162*t11206);
float t11224 = (t11164+t11223);
float t11225 = (t11224*t11224);
float t11226 = (t11222+t11225);
float t11227 = sqrt(t11226);
float t11228 = (t11227*t11227);
float t11229 = sqrt(t11228);
float t11230 = (t11229-float(2.6));
float t11231 = (t11230/float(11.4));
vec4 t11232 = texture(s4,vec2(t11217,t11231));
t11201 = t11232.x;
t11202 = t11232.y;
t11203 = t11232.z;
float t11233;
if(t11200){
t11233 = 1;
} else {
t11233 = 0;
}
float t11234 = (t11232.x*t11232.x);
float t11235 = (t11232.y*t11232.y);
float t11236 = (t11234+t11235);
float t11237 = (t11232.z*t11232.z);
float t11238 = (t11236+t11237);
float t11239 = sqrt(t11238);
float t11240 = (t11239*t11239);
float t11241 = (t11240/float(3.0));
bool t11242 = (t11241<=1);
float t11243;
if(t11242){
t11243 = t11241;
} else {
t11243 = 1;
}
bool t11244 = (t11243>=0);
float t11245;
if(t11244){
t11245 = t11243;
} else {
t11245 = 0;
}
float t11246 = (t11233*t11245);
t11204 = t11246;
} else {
t11201 = 0;
t11202 = 0;
t11203 = 0;
t11204 = 0;
}
float t11247 = (1-t11185);
float t11248 = (t11182*t11247);
float t11249 = (t11185+t11248);
float t11250 = (1-t11249);
float t11251 = (t11204*t11250);
float t11252 = (t11201*t11251);
float t11253 = (t11189+t11252);
float t11254 = (-float(1.5));
float t11255 = (t11254*t180);
float t11256 = (t11255*t11149);
float t11257 = pow(t11168,float(2.5));
float t11258 = (t11256/t11257);
float t11259 = (t11258*float(0.16));
float t11260 = (t11147+t11259);
float t11261 = (t11260*float(0.16));
float t11262 = (t11149+t11261);
float t11263 = (t11262*t11262);
float t11264 = (t11255*t11156);
float t11265 = (t11264/t11257);
float t11266 = (t11265*float(0.16));
float t11267 = (t11154+t11266);
float t11268 = (t11267*float(0.16));
float t11269 = (t11156+t11268);
float t11270 = (t11269*t11269);
float t11271 = (t11263+t11270);
float t11272 = (t11255*t11164);
float t11273 = (t11272/t11257);
float t11274 = (t11273*float(0.16));
float t11275 = (t11162+t11274);
float t11276 = (t11275*float(0.16));
float t11277 = (t11164+t11276);
float t11278 = (t11277*t11277);
float t11279 = (t11271+t11278);
float t11280 = sqrt(t11279);
float t11281 = (t11280*t11280);
bool t11282 = (t11281<1);
float t11283 = (t11149*t11149);
float t11284 = (t11156*t11156);
float t11285 = (t11283+t11284);
float t11286 = (t11164*t11164);
float t11287 = (t11285+t11286);
float t11288 = sqrt(t11287);
float t11289 = (t11288*t11288);
bool t11290 = (t11289>1);
bool t11291 = (t11282&&t11290);
float t11292;
float t11293;
float t11294;
float t11295;
if(t11291){
t11292 = 0;
t11293 = 0;
t11294 = 0;
t11295 = 1;
} else {
t11292 = 0;
t11293 = 0;
t11294 = 0;
t11295 = 0;
}
float t11296 = (1-t11249);
float t11297 = (t11204*t11296);
float t11298 = (t11249+t11297);
float t11299 = (1-t11298);
float t11300 = (t11295*t11299);
float t11301 = (t11292*t11300);
float t11302 = (t11253+t11301);
bool t11303 = (t11156>0);
bool t11304 = (t11269>0);
bool t11305 = (!t11304);
bool t11306 = (t11303&&t11305);
bool t11307 = (!t11303);
bool t11308 = (t11304&&t11307);
bool t11309 = (t11306||t11308);
bool t11310 = (t11281<196);
bool t11311 = (t11281>float(6.76));
bool t11312 = (t11310&&t11311);
bool t11313 = (t11309&&t11312);
float t11314;
float t11315;
float t11316;
float t11317;
if(t11313){
float t11318 = (t11269/t11267);
float t11319 = (-t11318);
float t11320 = (t11260*t11319);
float t11321 = (t11262+t11320);
float t11322 = atan(t11321,t11277);
float t11323 = (u1.u0/30);
float t11324 = (t11322+t11323);
float t11325 = (2*3.1415927);
float t11326 = (t11324+t11325);
float t11327 = mod(t11326,2);
float t11328 = (t11327*3.1415927);
float t11329 = (2*3.1415927);
float t11330 = (t11328/t11329);
float t11331 = (t11321*t11321);
float t11332 = (t11267*t11319);
float t11333 = (t11269+t11332);
float t11334 = (t11333*t11333);
float t11335 = (t11331+t11334);
float t11336 = (t11275*t11319);
float t11337 = (t11277+t11336);
float t11338 = (t11337*t11337);
float t11339 = (t11335+t11338);
float t11340 = sqrt(t11339);
float t11341 = (t11340*t11340);
float t11342 = sqrt(t11341);
float t11343 = (t11342-float(2.6));
float t11344 = (t11343/float(11.4));
vec4 t11345 = texture(s4,vec2(t11330,t11344));
t11314 = t11345.x;
t11315 = t11345.y;
t11316 = t11345.z;
float t11346;
if(t11313){
t11346 = 1;
} else {
t11346 = 0;
}
float t11347 = (t11345.x*t11345.x);
float t11348 = (t11345.y*t11345.y);
float t11349 = (t11347+t11348);
float t11350 = (t11345.z*t11345.z);
float t11351 = (t11349+t11350);
float t11352 = sqrt(t11351);
float t11353 = (t11352*t11352);
float t11354 = (t11353/float(3.0));
bool t11355 = (t11354<=1);
float t11356;
if(t11355){
t11356 = t11354;
} else {
t11356 = 1;
}
bool t11357 = (t11356>=0);
float t11358;
if(t11357){
t11358 = t11356;
} else {
t11358 = 0;
}
float t11359 = (t11346*t11358);
t11317 = t11359;
} else {
t11314 = 0;
t11315 = 0;
t11316 = 0;
t11317 = 0;
}
float t11360 = (1-t11298);
float t11361 = (t11295*t11360);
float t11362 = (t11298+t11361);
float t11363 = (1-t11362);
float t11364 = (t11317*t11363);
float t11365 = (t11314*t11364);
float t11366 = (t11302+t11365);
float t11367 = (-float(1.5));
float t11368 = (t11367*t180);
float t11369 = (t11368*t11262);
float t11370 = pow(t11281,float(2.5));
float t11371 = (t11369/t11370);
float t11372 = (t11371*float(0.16));
float t11373 = (t11260+t11372);
float t11374 = (t11373*float(0.16));
float t11375 = (t11262+t11374);
float t11376 = (t11375*t11375);
float t11377 = (t11368*t11269);
float t11378 = (t11377/t11370);
float t11379 = (t11378*float(0.16));
float t11380 = (t11267+t11379);
float t11381 = (t11380*float(0.16));
float t11382 = (t11269+t11381);
float t11383 = (t11382*t11382);
float t11384 = (t11376+t11383);
float t11385 = (t11368*t11277);
float t11386 = (t11385/t11370);
float t11387 = (t11386*float(0.16));
float t11388 = (t11275+t11387);
float t11389 = (t11388*float(0.16));
float t11390 = (t11277+t11389);
float t11391 = (t11390*t11390);
float t11392 = (t11384+t11391);
float t11393 = sqrt(t11392);
float t11394 = (t11393*t11393);
bool t11395 = (t11394<1);
float t11396 = (t11262*t11262);
float t11397 = (t11269*t11269);
float t11398 = (t11396+t11397);
float t11399 = (t11277*t11277);
float t11400 = (t11398+t11399);
float t11401 = sqrt(t11400);
float t11402 = (t11401*t11401);
bool t11403 = (t11402>1);
bool t11404 = (t11395&&t11403);
float t11405;
float t11406;
float t11407;
float t11408;
if(t11404){
t11405 = 0;
t11406 = 0;
t11407 = 0;
t11408 = 1;
} else {
t11405 = 0;
t11406 = 0;
t11407 = 0;
t11408 = 0;
}
float t11409 = (1-t11362);
float t11410 = (t11317*t11409);
float t11411 = (t11362+t11410);
float t11412 = (1-t11411);
float t11413 = (t11408*t11412);
float t11414 = (t11405*t11413);
float t11415 = (t11366+t11414);
bool t11416 = (t11269>0);
bool t11417 = (t11382>0);
bool t11418 = (!t11417);
bool t11419 = (t11416&&t11418);
bool t11420 = (!t11416);
bool t11421 = (t11417&&t11420);
bool t11422 = (t11419||t11421);
bool t11423 = (t11394<196);
bool t11424 = (t11394>float(6.76));
bool t11425 = (t11423&&t11424);
bool t11426 = (t11422&&t11425);
float t11427;
float t11428;
float t11429;
float t11430;
if(t11426){
float t11431 = (t11382/t11380);
float t11432 = (-t11431);
float t11433 = (t11373*t11432);
float t11434 = (t11375+t11433);
float t11435 = atan(t11434,t11390);
float t11436 = (u1.u0/30);
float t11437 = (t11435+t11436);
float t11438 = (2*3.1415927);
float t11439 = (t11437+t11438);
float t11440 = mod(t11439,2);
float t11441 = (t11440*3.1415927);
float t11442 = (2*3.1415927);
float t11443 = (t11441/t11442);
float t11444 = (t11434*t11434);
float t11445 = (t11380*t11432);
float t11446 = (t11382+t11445);
float t11447 = (t11446*t11446);
float t11448 = (t11444+t11447);
float t11449 = (t11388*t11432);
float t11450 = (t11390+t11449);
float t11451 = (t11450*t11450);
float t11452 = (t11448+t11451);
float t11453 = sqrt(t11452);
float t11454 = (t11453*t11453);
float t11455 = sqrt(t11454);
float t11456 = (t11455-float(2.6));
float t11457 = (t11456/float(11.4));
vec4 t11458 = texture(s4,vec2(t11443,t11457));
t11427 = t11458.x;
t11428 = t11458.y;
t11429 = t11458.z;
float t11459;
if(t11426){
t11459 = 1;
} else {
t11459 = 0;
}
float t11460 = (t11458.x*t11458.x);
float t11461 = (t11458.y*t11458.y);
float t11462 = (t11460+t11461);
float t11463 = (t11458.z*t11458.z);
float t11464 = (t11462+t11463);
float t11465 = sqrt(t11464);
float t11466 = (t11465*t11465);
float t11467 = (t11466/float(3.0));
bool t11468 = (t11467<=1);
float t11469;
if(t11468){
t11469 = t11467;
} else {
t11469 = 1;
}
bool t11470 = (t11469>=0);
float t11471;
if(t11470){
t11471 = t11469;
} else {
t11471 = 0;
}
float t11472 = (t11459*t11471);
t11430 = t11472;
} else {
t11427 = 0;
t11428 = 0;
t11429 = 0;
t11430 = 0;
}
float t11473 = (1-t11411);
float t11474 = (t11408*t11473);
float t11475 = (t11411+t11474);
float t11476 = (1-t11475);
float t11477 = (t11430*t11476);
float t11478 = (t11427*t11477);
float t11479 = (t11415+t11478);
float t11480 = (-float(1.5));
float t11481 = (t11480*t180);
float t11482 = (t11481*t11375);
float t11483 = pow(t11394,float(2.5));
float t11484 = (t11482/t11483);
float t11485 = (t11484*float(0.16));
float t11486 = (t11373+t11485);
float t11487 = (t11486*float(0.16));
float t11488 = (t11375+t11487);
float t11489 = (t11488*t11488);
float t11490 = (t11481*t11382);
float t11491 = (t11490/t11483);
float t11492 = (t11491*float(0.16));
float t11493 = (t11380+t11492);
float t11494 = (t11493*float(0.16));
float t11495 = (t11382+t11494);
float t11496 = (t11495*t11495);
float t11497 = (t11489+t11496);
float t11498 = (t11481*t11390);
float t11499 = (t11498/t11483);
float t11500 = (t11499*float(0.16));
float t11501 = (t11388+t11500);
float t11502 = (t11501*float(0.16));
float t11503 = (t11390+t11502);
float t11504 = (t11503*t11503);
float t11505 = (t11497+t11504);
float t11506 = sqrt(t11505);
float t11507 = (t11506*t11506);
bool t11508 = (t11507<1);
float t11509 = (t11375*t11375);
float t11510 = (t11382*t11382);
float t11511 = (t11509+t11510);
float t11512 = (t11390*t11390);
float t11513 = (t11511+t11512);
float t11514 = sqrt(t11513);
float t11515 = (t11514*t11514);
bool t11516 = (t11515>1);
bool t11517 = (t11508&&t11516);
float t11518;
float t11519;
float t11520;
float t11521;
if(t11517){
t11518 = 0;
t11519 = 0;
t11520 = 0;
t11521 = 1;
} else {
t11518 = 0;
t11519 = 0;
t11520 = 0;
t11521 = 0;
}
float t11522 = (1-t11475);
float t11523 = (t11430*t11522);
float t11524 = (t11475+t11523);
float t11525 = (1-t11524);
float t11526 = (t11521*t11525);
float t11527 = (t11518*t11526);
float t11528 = (t11479+t11527);
bool t11529 = (t11382>0);
bool t11530 = (t11495>0);
bool t11531 = (!t11530);
bool t11532 = (t11529&&t11531);
bool t11533 = (!t11529);
bool t11534 = (t11530&&t11533);
bool t11535 = (t11532||t11534);
bool t11536 = (t11507<196);
bool t11537 = (t11507>float(6.76));
bool t11538 = (t11536&&t11537);
bool t11539 = (t11535&&t11538);
float t11540;
float t11541;
float t11542;
float t11543;
if(t11539){
float t11544 = (t11495/t11493);
float t11545 = (-t11544);
float t11546 = (t11486*t11545);
float t11547 = (t11488+t11546);
float t11548 = atan(t11547,t11503);
float t11549 = (u1.u0/30);
float t11550 = (t11548+t11549);
float t11551 = (2*3.1415927);
float t11552 = (t11550+t11551);
float t11553 = mod(t11552,2);
float t11554 = (t11553*3.1415927);
float t11555 = (2*3.1415927);
float t11556 = (t11554/t11555);
float t11557 = (t11547*t11547);
float t11558 = (t11493*t11545);
float t11559 = (t11495+t11558);
float t11560 = (t11559*t11559);
float t11561 = (t11557+t11560);
float t11562 = (t11501*t11545);
float t11563 = (t11503+t11562);
float t11564 = (t11563*t11563);
float t11565 = (t11561+t11564);
float t11566 = sqrt(t11565);
float t11567 = (t11566*t11566);
float t11568 = sqrt(t11567);
float t11569 = (t11568-float(2.6));
float t11570 = (t11569/float(11.4));
vec4 t11571 = texture(s4,vec2(t11556,t11570));
t11540 = t11571.x;
t11541 = t11571.y;
t11542 = t11571.z;
float t11572;
if(t11539){
t11572 = 1;
} else {
t11572 = 0;
}
float t11573 = (t11571.x*t11571.x);
float t11574 = (t11571.y*t11571.y);
float t11575 = (t11573+t11574);
float t11576 = (t11571.z*t11571.z);
float t11577 = (t11575+t11576);
float t11578 = sqrt(t11577);
float t11579 = (t11578*t11578);
float t11580 = (t11579/float(3.0));
bool t11581 = (t11580<=1);
float t11582;
if(t11581){
t11582 = t11580;
} else {
t11582 = 1;
}
bool t11583 = (t11582>=0);
float t11584;
if(t11583){
t11584 = t11582;
} else {
t11584 = 0;
}
float t11585 = (t11572*t11584);
t11543 = t11585;
} else {
t11540 = 0;
t11541 = 0;
t11542 = 0;
t11543 = 0;
}
float t11586 = (1-t11524);
float t11587 = (t11521*t11586);
float t11588 = (t11524+t11587);
float t11589 = (1-t11588);
float t11590 = (t11543*t11589);
float t11591 = (t11540*t11590);
float t11592 = (t11528+t11591);
float t11593 = (-float(1.5));
float t11594 = (t11593*t180);
float t11595 = (t11594*t11488);
float t11596 = pow(t11507,float(2.5));
float t11597 = (t11595/t11596);
float t11598 = (t11597*float(0.16));
float t11599 = (t11486+t11598);
float t11600 = (t11599*float(0.16));
float t11601 = (t11488+t11600);
float t11602 = (t11601*t11601);
float t11603 = (t11594*t11495);
float t11604 = (t11603/t11596);
float t11605 = (t11604*float(0.16));
float t11606 = (t11493+t11605);
float t11607 = (t11606*float(0.16));
float t11608 = (t11495+t11607);
float t11609 = (t11608*t11608);
float t11610 = (t11602+t11609);
float t11611 = (t11594*t11503);
float t11612 = (t11611/t11596);
float t11613 = (t11612*float(0.16));
float t11614 = (t11501+t11613);
float t11615 = (t11614*float(0.16));
float t11616 = (t11503+t11615);
float t11617 = (t11616*t11616);
float t11618 = (t11610+t11617);
float t11619 = sqrt(t11618);
float t11620 = (t11619*t11619);
bool t11621 = (t11620<1);
float t11622 = (t11488*t11488);
float t11623 = (t11495*t11495);
float t11624 = (t11622+t11623);
float t11625 = (t11503*t11503);
float t11626 = (t11624+t11625);
float t11627 = sqrt(t11626);
float t11628 = (t11627*t11627);
bool t11629 = (t11628>1);
bool t11630 = (t11621&&t11629);
float t11631;
float t11632;
float t11633;
float t11634;
if(t11630){
t11631 = 0;
t11632 = 0;
t11633 = 0;
t11634 = 1;
} else {
t11631 = 0;
t11632 = 0;
t11633 = 0;
t11634 = 0;
}
float t11635 = (1-t11588);
float t11636 = (t11543*t11635);
float t11637 = (t11588+t11636);
float t11638 = (1-t11637);
float t11639 = (t11634*t11638);
float t11640 = (t11631*t11639);
float t11641 = (t11592+t11640);
bool t11642 = (t11495>0);
bool t11643 = (t11608>0);
bool t11644 = (!t11643);
bool t11645 = (t11642&&t11644);
bool t11646 = (!t11642);
bool t11647 = (t11643&&t11646);
bool t11648 = (t11645||t11647);
bool t11649 = (t11620<196);
bool t11650 = (t11620>float(6.76));
bool t11651 = (t11649&&t11650);
bool t11652 = (t11648&&t11651);
float t11653;
float t11654;
float t11655;
float t11656;
if(t11652){
float t11657 = (t11608/t11606);
float t11658 = (-t11657);
float t11659 = (t11599*t11658);
float t11660 = (t11601+t11659);
float t11661 = atan(t11660,t11616);
float t11662 = (u1.u0/30);
float t11663 = (t11661+t11662);
float t11664 = (2*3.1415927);
float t11665 = (t11663+t11664);
float t11666 = mod(t11665,2);
float t11667 = (t11666*3.1415927);
float t11668 = (2*3.1415927);
float t11669 = (t11667/t11668);
float t11670 = (t11660*t11660);
float t11671 = (t11606*t11658);
float t11672 = (t11608+t11671);
float t11673 = (t11672*t11672);
float t11674 = (t11670+t11673);
float t11675 = (t11614*t11658);
float t11676 = (t11616+t11675);
float t11677 = (t11676*t11676);
float t11678 = (t11674+t11677);
float t11679 = sqrt(t11678);
float t11680 = (t11679*t11679);
float t11681 = sqrt(t11680);
float t11682 = (t11681-float(2.6));
float t11683 = (t11682/float(11.4));
vec4 t11684 = texture(s4,vec2(t11669,t11683));
t11653 = t11684.x;
t11654 = t11684.y;
t11655 = t11684.z;
float t11685;
if(t11652){
t11685 = 1;
} else {
t11685 = 0;
}
float t11686 = (t11684.x*t11684.x);
float t11687 = (t11684.y*t11684.y);
float t11688 = (t11686+t11687);
float t11689 = (t11684.z*t11684.z);
float t11690 = (t11688+t11689);
float t11691 = sqrt(t11690);
float t11692 = (t11691*t11691);
float t11693 = (t11692/float(3.0));
bool t11694 = (t11693<=1);
float t11695;
if(t11694){
t11695 = t11693;
} else {
t11695 = 1;
}
bool t11696 = (t11695>=0);
float t11697;
if(t11696){
t11697 = t11695;
} else {
t11697 = 0;
}
float t11698 = (t11685*t11697);
t11656 = t11698;
} else {
t11653 = 0;
t11654 = 0;
t11655 = 0;
t11656 = 0;
}
float t11699 = (1-t11637);
float t11700 = (t11634*t11699);
float t11701 = (t11637+t11700);
float t11702 = (1-t11701);
float t11703 = (t11656*t11702);
float t11704 = (t11653*t11703);
float t11705 = (t11641+t11704);
float t11706 = (-float(1.5));
float t11707 = (t11706*t180);
float t11708 = (t11707*t11601);
float t11709 = pow(t11620,float(2.5));
float t11710 = (t11708/t11709);
float t11711 = (t11710*float(0.16));
float t11712 = (t11599+t11711);
float t11713 = (t11712*float(0.16));
float t11714 = (t11601+t11713);
float t11715 = (t11714*t11714);
float t11716 = (t11707*t11608);
float t11717 = (t11716/t11709);
float t11718 = (t11717*float(0.16));
float t11719 = (t11606+t11718);
float t11720 = (t11719*float(0.16));
float t11721 = (t11608+t11720);
float t11722 = (t11721*t11721);
float t11723 = (t11715+t11722);
float t11724 = (t11707*t11616);
float t11725 = (t11724/t11709);
float t11726 = (t11725*float(0.16));
float t11727 = (t11614+t11726);
float t11728 = (t11727*float(0.16));
float t11729 = (t11616+t11728);
float t11730 = (t11729*t11729);
float t11731 = (t11723+t11730);
float t11732 = sqrt(t11731);
float t11733 = (t11732*t11732);
bool t11734 = (t11733<1);
float t11735 = (t11601*t11601);
float t11736 = (t11608*t11608);
float t11737 = (t11735+t11736);
float t11738 = (t11616*t11616);
float t11739 = (t11737+t11738);
float t11740 = sqrt(t11739);
float t11741 = (t11740*t11740);
bool t11742 = (t11741>1);
bool t11743 = (t11734&&t11742);
float t11744;
float t11745;
float t11746;
float t11747;
if(t11743){
t11744 = 0;
t11745 = 0;
t11746 = 0;
t11747 = 1;
} else {
t11744 = 0;
t11745 = 0;
t11746 = 0;
t11747 = 0;
}
float t11748 = (1-t11701);
float t11749 = (t11656*t11748);
float t11750 = (t11701+t11749);
float t11751 = (1-t11750);
float t11752 = (t11747*t11751);
float t11753 = (t11744*t11752);
float t11754 = (t11705+t11753);
bool t11755 = (t11608>0);
bool t11756 = (t11721>0);
bool t11757 = (!t11756);
bool t11758 = (t11755&&t11757);
bool t11759 = (!t11755);
bool t11760 = (t11756&&t11759);
bool t11761 = (t11758||t11760);
bool t11762 = (t11733<196);
bool t11763 = (t11733>float(6.76));
bool t11764 = (t11762&&t11763);
bool t11765 = (t11761&&t11764);
float t11766;
float t11767;
float t11768;
float t11769;
if(t11765){
float t11770 = (t11721/t11719);
float t11771 = (-t11770);
float t11772 = (t11712*t11771);
float t11773 = (t11714+t11772);
float t11774 = atan(t11773,t11729);
float t11775 = (u1.u0/30);
float t11776 = (t11774+t11775);
float t11777 = (2*3.1415927);
float t11778 = (t11776+t11777);
float t11779 = mod(t11778,2);
float t11780 = (t11779*3.1415927);
float t11781 = (2*3.1415927);
float t11782 = (t11780/t11781);
float t11783 = (t11773*t11773);
float t11784 = (t11719*t11771);
float t11785 = (t11721+t11784);
float t11786 = (t11785*t11785);
float t11787 = (t11783+t11786);
float t11788 = (t11727*t11771);
float t11789 = (t11729+t11788);
float t11790 = (t11789*t11789);
float t11791 = (t11787+t11790);
float t11792 = sqrt(t11791);
float t11793 = (t11792*t11792);
float t11794 = sqrt(t11793);
float t11795 = (t11794-float(2.6));
float t11796 = (t11795/float(11.4));
vec4 t11797 = texture(s4,vec2(t11782,t11796));
t11766 = t11797.x;
t11767 = t11797.y;
t11768 = t11797.z;
float t11798;
if(t11765){
t11798 = 1;
} else {
t11798 = 0;
}
float t11799 = (t11797.x*t11797.x);
float t11800 = (t11797.y*t11797.y);
float t11801 = (t11799+t11800);
float t11802 = (t11797.z*t11797.z);
float t11803 = (t11801+t11802);
float t11804 = sqrt(t11803);
float t11805 = (t11804*t11804);
float t11806 = (t11805/float(3.0));
bool t11807 = (t11806<=1);
float t11808;
if(t11807){
t11808 = t11806;
} else {
t11808 = 1;
}
bool t11809 = (t11808>=0);
float t11810;
if(t11809){
t11810 = t11808;
} else {
t11810 = 0;
}
float t11811 = (t11798*t11810);
t11769 = t11811;
} else {
t11766 = 0;
t11767 = 0;
t11768 = 0;
t11769 = 0;
}
float t11812 = (1-t11750);
float t11813 = (t11747*t11812);
float t11814 = (t11750+t11813);
float t11815 = (1-t11814);
float t11816 = (t11769*t11815);
float t11817 = (t11766*t11816);
float t11818 = (t11754+t11817);
float t11819 = (-float(1.5));
float t11820 = (t11819*t180);
float t11821 = (t11820*t11714);
float t11822 = pow(t11733,float(2.5));
float t11823 = (t11821/t11822);
float t11824 = (t11823*float(0.16));
float t11825 = (t11712+t11824);
float t11826 = (t11825*float(0.16));
float t11827 = (t11714+t11826);
float t11828 = (t11827*t11827);
float t11829 = (t11820*t11721);
float t11830 = (t11829/t11822);
float t11831 = (t11830*float(0.16));
float t11832 = (t11719+t11831);
float t11833 = (t11832*float(0.16));
float t11834 = (t11721+t11833);
float t11835 = (t11834*t11834);
float t11836 = (t11828+t11835);
float t11837 = (t11820*t11729);
float t11838 = (t11837/t11822);
float t11839 = (t11838*float(0.16));
float t11840 = (t11727+t11839);
float t11841 = (t11840*float(0.16));
float t11842 = (t11729+t11841);
float t11843 = (t11842*t11842);
float t11844 = (t11836+t11843);
float t11845 = sqrt(t11844);
float t11846 = (t11845*t11845);
bool t11847 = (t11846<1);
float t11848 = (t11714*t11714);
float t11849 = (t11721*t11721);
float t11850 = (t11848+t11849);
float t11851 = (t11729*t11729);
float t11852 = (t11850+t11851);
float t11853 = sqrt(t11852);
float t11854 = (t11853*t11853);
bool t11855 = (t11854>1);
bool t11856 = (t11847&&t11855);
float t11857;
float t11858;
float t11859;
float t11860;
if(t11856){
t11857 = 0;
t11858 = 0;
t11859 = 0;
t11860 = 1;
} else {
t11857 = 0;
t11858 = 0;
t11859 = 0;
t11860 = 0;
}
float t11861 = (1-t11814);
float t11862 = (t11769*t11861);
float t11863 = (t11814+t11862);
float t11864 = (1-t11863);
float t11865 = (t11860*t11864);
float t11866 = (t11857*t11865);
float t11867 = (t11818+t11866);
bool t11868 = (t11721>0);
bool t11869 = (t11834>0);
bool t11870 = (!t11869);
bool t11871 = (t11868&&t11870);
bool t11872 = (!t11868);
bool t11873 = (t11869&&t11872);
bool t11874 = (t11871||t11873);
bool t11875 = (t11846<196);
bool t11876 = (t11846>float(6.76));
bool t11877 = (t11875&&t11876);
bool t11878 = (t11874&&t11877);
float t11879;
float t11880;
float t11881;
float t11882;
if(t11878){
float t11883 = (t11834/t11832);
float t11884 = (-t11883);
float t11885 = (t11825*t11884);
float t11886 = (t11827+t11885);
float t11887 = atan(t11886,t11842);
float t11888 = (u1.u0/30);
float t11889 = (t11887+t11888);
float t11890 = (2*3.1415927);
float t11891 = (t11889+t11890);
float t11892 = mod(t11891,2);
float t11893 = (t11892*3.1415927);
float t11894 = (2*3.1415927);
float t11895 = (t11893/t11894);
float t11896 = (t11886*t11886);
float t11897 = (t11832*t11884);
float t11898 = (t11834+t11897);
float t11899 = (t11898*t11898);
float t11900 = (t11896+t11899);
float t11901 = (t11840*t11884);
float t11902 = (t11842+t11901);
float t11903 = (t11902*t11902);
float t11904 = (t11900+t11903);
float t11905 = sqrt(t11904);
float t11906 = (t11905*t11905);
float t11907 = sqrt(t11906);
float t11908 = (t11907-float(2.6));
float t11909 = (t11908/float(11.4));
vec4 t11910 = texture(s4,vec2(t11895,t11909));
t11879 = t11910.x;
t11880 = t11910.y;
t11881 = t11910.z;
float t11911;
if(t11878){
t11911 = 1;
} else {
t11911 = 0;
}
float t11912 = (t11910.x*t11910.x);
float t11913 = (t11910.y*t11910.y);
float t11914 = (t11912+t11913);
float t11915 = (t11910.z*t11910.z);
float t11916 = (t11914+t11915);
float t11917 = sqrt(t11916);
float t11918 = (t11917*t11917);
float t11919 = (t11918/float(3.0));
bool t11920 = (t11919<=1);
float t11921;
if(t11920){
t11921 = t11919;
} else {
t11921 = 1;
}
bool t11922 = (t11921>=0);
float t11923;
if(t11922){
t11923 = t11921;
} else {
t11923 = 0;
}
float t11924 = (t11911*t11923);
t11882 = t11924;
} else {
t11879 = 0;
t11880 = 0;
t11881 = 0;
t11882 = 0;
}
float t11925 = (1-t11863);
float t11926 = (t11860*t11925);
float t11927 = (t11863+t11926);
float t11928 = (1-t11927);
float t11929 = (t11882*t11928);
float t11930 = (t11879*t11929);
float t11931 = (t11867+t11930);
float t11932 = (-float(1.5));
float t11933 = (t11932*t180);
float t11934 = (t11933*t11827);
float t11935 = pow(t11846,float(2.5));
float t11936 = (t11934/t11935);
float t11937 = (t11936*float(0.16));
float t11938 = (t11825+t11937);
float t11939 = (t11938*float(0.16));
float t11940 = (t11827+t11939);
float t11941 = (t11940*t11940);
float t11942 = (t11933*t11834);
float t11943 = (t11942/t11935);
float t11944 = (t11943*float(0.16));
float t11945 = (t11832+t11944);
float t11946 = (t11945*float(0.16));
float t11947 = (t11834+t11946);
float t11948 = (t11947*t11947);
float t11949 = (t11941+t11948);
float t11950 = (t11933*t11842);
float t11951 = (t11950/t11935);
float t11952 = (t11951*float(0.16));
float t11953 = (t11840+t11952);
float t11954 = (t11953*float(0.16));
float t11955 = (t11842+t11954);
float t11956 = (t11955*t11955);
float t11957 = (t11949+t11956);
float t11958 = sqrt(t11957);
float t11959 = (t11958*t11958);
bool t11960 = (t11959<1);
float t11961 = (t11827*t11827);
float t11962 = (t11834*t11834);
float t11963 = (t11961+t11962);
float t11964 = (t11842*t11842);
float t11965 = (t11963+t11964);
float t11966 = sqrt(t11965);
float t11967 = (t11966*t11966);
bool t11968 = (t11967>1);
bool t11969 = (t11960&&t11968);
float t11970;
float t11971;
float t11972;
float t11973;
if(t11969){
t11970 = 0;
t11971 = 0;
t11972 = 0;
t11973 = 1;
} else {
t11970 = 0;
t11971 = 0;
t11972 = 0;
t11973 = 0;
}
float t11974 = (1-t11927);
float t11975 = (t11882*t11974);
float t11976 = (t11927+t11975);
float t11977 = (1-t11976);
float t11978 = (t11973*t11977);
float t11979 = (t11970*t11978);
float t11980 = (t11931+t11979);
bool t11981 = (t11834>0);
bool t11982 = (t11947>0);
bool t11983 = (!t11982);
bool t11984 = (t11981&&t11983);
bool t11985 = (!t11981);
bool t11986 = (t11982&&t11985);
bool t11987 = (t11984||t11986);
bool t11988 = (t11959<196);
bool t11989 = (t11959>float(6.76));
bool t11990 = (t11988&&t11989);
bool t11991 = (t11987&&t11990);
float t11992;
float t11993;
float t11994;
float t11995;
if(t11991){
float t11996 = (t11947/t11945);
float t11997 = (-t11996);
float t11998 = (t11938*t11997);
float t11999 = (t11940+t11998);
float t12000 = atan(t11999,t11955);
float t12001 = (u1.u0/30);
float t12002 = (t12000+t12001);
float t12003 = (2*3.1415927);
float t12004 = (t12002+t12003);
float t12005 = mod(t12004,2);
float t12006 = (t12005*3.1415927);
float t12007 = (2*3.1415927);
float t12008 = (t12006/t12007);
float t12009 = (t11999*t11999);
float t12010 = (t11945*t11997);
float t12011 = (t11947+t12010);
float t12012 = (t12011*t12011);
float t12013 = (t12009+t12012);
float t12014 = (t11953*t11997);
float t12015 = (t11955+t12014);
float t12016 = (t12015*t12015);
float t12017 = (t12013+t12016);
float t12018 = sqrt(t12017);
float t12019 = (t12018*t12018);
float t12020 = sqrt(t12019);
float t12021 = (t12020-float(2.6));
float t12022 = (t12021/float(11.4));
vec4 t12023 = texture(s4,vec2(t12008,t12022));
t11992 = t12023.x;
t11993 = t12023.y;
t11994 = t12023.z;
float t12024;
if(t11991){
t12024 = 1;
} else {
t12024 = 0;
}
float t12025 = (t12023.x*t12023.x);
float t12026 = (t12023.y*t12023.y);
float t12027 = (t12025+t12026);
float t12028 = (t12023.z*t12023.z);
float t12029 = (t12027+t12028);
float t12030 = sqrt(t12029);
float t12031 = (t12030*t12030);
float t12032 = (t12031/float(3.0));
bool t12033 = (t12032<=1);
float t12034;
if(t12033){
t12034 = t12032;
} else {
t12034 = 1;
}
bool t12035 = (t12034>=0);
float t12036;
if(t12035){
t12036 = t12034;
} else {
t12036 = 0;
}
float t12037 = (t12024*t12036);
t11995 = t12037;
} else {
t11992 = 0;
t11993 = 0;
t11994 = 0;
t11995 = 0;
}
float t12038 = (1-t11976);
float t12039 = (t11973*t12038);
float t12040 = (t11976+t12039);
float t12041 = (1-t12040);
float t12042 = (t11995*t12041);
float t12043 = (t11992*t12042);
float t12044 = (t11980+t12043);
float t12045 = (-float(1.5));
float t12046 = (t12045*t180);
float t12047 = (t12046*t11940);
float t12048 = pow(t11959,float(2.5));
float t12049 = (t12047/t12048);
float t12050 = (t12049*float(0.16));
float t12051 = (t11938+t12050);
float t12052 = (t12051*float(0.16));
float t12053 = (t11940+t12052);
float t12054 = (t12053*t12053);
float t12055 = (t12046*t11947);
float t12056 = (t12055/t12048);
float t12057 = (t12056*float(0.16));
float t12058 = (t11945+t12057);
float t12059 = (t12058*float(0.16));
float t12060 = (t11947+t12059);
float t12061 = (t12060*t12060);
float t12062 = (t12054+t12061);
float t12063 = (t12046*t11955);
float t12064 = (t12063/t12048);
float t12065 = (t12064*float(0.16));
float t12066 = (t11953+t12065);
float t12067 = (t12066*float(0.16));
float t12068 = (t11955+t12067);
float t12069 = (t12068*t12068);
float t12070 = (t12062+t12069);
float t12071 = sqrt(t12070);
float t12072 = (t12071*t12071);
bool t12073 = (t12072<1);
float t12074 = (t11940*t11940);
float t12075 = (t11947*t11947);
float t12076 = (t12074+t12075);
float t12077 = (t11955*t11955);
float t12078 = (t12076+t12077);
float t12079 = sqrt(t12078);
float t12080 = (t12079*t12079);
bool t12081 = (t12080>1);
bool t12082 = (t12073&&t12081);
float t12083;
float t12084;
float t12085;
float t12086;
if(t12082){
t12083 = 0;
t12084 = 0;
t12085 = 0;
t12086 = 1;
} else {
t12083 = 0;
t12084 = 0;
t12085 = 0;
t12086 = 0;
}
float t12087 = (1-t12040);
float t12088 = (t11995*t12087);
float t12089 = (t12040+t12088);
float t12090 = (1-t12089);
float t12091 = (t12086*t12090);
float t12092 = (t12083*t12091);
float t12093 = (t12044+t12092);
bool t12094 = (t11947>0);
bool t12095 = (t12060>0);
bool t12096 = (!t12095);
bool t12097 = (t12094&&t12096);
bool t12098 = (!t12094);
bool t12099 = (t12095&&t12098);
bool t12100 = (t12097||t12099);
bool t12101 = (t12072<196);
bool t12102 = (t12072>float(6.76));
bool t12103 = (t12101&&t12102);
bool t12104 = (t12100&&t12103);
float t12105;
float t12106;
float t12107;
float t12108;
if(t12104){
float t12109 = (t12060/t12058);
float t12110 = (-t12109);
float t12111 = (t12051*t12110);
float t12112 = (t12053+t12111);
float t12113 = atan(t12112,t12068);
float t12114 = (u1.u0/30);
float t12115 = (t12113+t12114);
float t12116 = (2*3.1415927);
float t12117 = (t12115+t12116);
float t12118 = mod(t12117,2);
float t12119 = (t12118*3.1415927);
float t12120 = (2*3.1415927);
float t12121 = (t12119/t12120);
float t12122 = (t12112*t12112);
float t12123 = (t12058*t12110);
float t12124 = (t12060+t12123);
float t12125 = (t12124*t12124);
float t12126 = (t12122+t12125);
float t12127 = (t12066*t12110);
float t12128 = (t12068+t12127);
float t12129 = (t12128*t12128);
float t12130 = (t12126+t12129);
float t12131 = sqrt(t12130);
float t12132 = (t12131*t12131);
float t12133 = sqrt(t12132);
float t12134 = (t12133-float(2.6));
float t12135 = (t12134/float(11.4));
vec4 t12136 = texture(s4,vec2(t12121,t12135));
t12105 = t12136.x;
t12106 = t12136.y;
t12107 = t12136.z;
float t12137;
if(t12104){
t12137 = 1;
} else {
t12137 = 0;
}
float t12138 = (t12136.x*t12136.x);
float t12139 = (t12136.y*t12136.y);
float t12140 = (t12138+t12139);
float t12141 = (t12136.z*t12136.z);
float t12142 = (t12140+t12141);
float t12143 = sqrt(t12142);
float t12144 = (t12143*t12143);
float t12145 = (t12144/float(3.0));
bool t12146 = (t12145<=1);
float t12147;
if(t12146){
t12147 = t12145;
} else {
t12147 = 1;
}
bool t12148 = (t12147>=0);
float t12149;
if(t12148){
t12149 = t12147;
} else {
t12149 = 0;
}
float t12150 = (t12137*t12149);
t12108 = t12150;
} else {
t12105 = 0;
t12106 = 0;
t12107 = 0;
t12108 = 0;
}
float t12151 = (1-t12089);
float t12152 = (t12086*t12151);
float t12153 = (t12089+t12152);
float t12154 = (1-t12153);
float t12155 = (t12108*t12154);
float t12156 = (t12105*t12155);
float t12157 = (t12093+t12156);
float t12158 = (-float(1.5));
float t12159 = (t12158*t180);
float t12160 = (t12159*t12053);
float t12161 = pow(t12072,float(2.5));
float t12162 = (t12160/t12161);
float t12163 = (t12162*float(0.16));
float t12164 = (t12051+t12163);
float t12165 = (t12164*float(0.16));
float t12166 = (t12053+t12165);
float t12167 = (t12166*t12166);
float t12168 = (t12159*t12060);
float t12169 = (t12168/t12161);
float t12170 = (t12169*float(0.16));
float t12171 = (t12058+t12170);
float t12172 = (t12171*float(0.16));
float t12173 = (t12060+t12172);
float t12174 = (t12173*t12173);
float t12175 = (t12167+t12174);
float t12176 = (t12159*t12068);
float t12177 = (t12176/t12161);
float t12178 = (t12177*float(0.16));
float t12179 = (t12066+t12178);
float t12180 = (t12179*float(0.16));
float t12181 = (t12068+t12180);
float t12182 = (t12181*t12181);
float t12183 = (t12175+t12182);
float t12184 = sqrt(t12183);
float t12185 = (t12184*t12184);
bool t12186 = (t12185<1);
float t12187 = (t12053*t12053);
float t12188 = (t12060*t12060);
float t12189 = (t12187+t12188);
float t12190 = (t12068*t12068);
float t12191 = (t12189+t12190);
float t12192 = sqrt(t12191);
float t12193 = (t12192*t12192);
bool t12194 = (t12193>1);
bool t12195 = (t12186&&t12194);
float t12196;
float t12197;
float t12198;
float t12199;
if(t12195){
t12196 = 0;
t12197 = 0;
t12198 = 0;
t12199 = 1;
} else {
t12196 = 0;
t12197 = 0;
t12198 = 0;
t12199 = 0;
}
float t12200 = (1-t12153);
float t12201 = (t12108*t12200);
float t12202 = (t12153+t12201);
float t12203 = (1-t12202);
float t12204 = (t12199*t12203);
float t12205 = (t12196*t12204);
float t12206 = (t12157+t12205);
bool t12207 = (t12060>0);
bool t12208 = (t12173>0);
bool t12209 = (!t12208);
bool t12210 = (t12207&&t12209);
bool t12211 = (!t12207);
bool t12212 = (t12208&&t12211);
bool t12213 = (t12210||t12212);
bool t12214 = (t12185<196);
bool t12215 = (t12185>float(6.76));
bool t12216 = (t12214&&t12215);
bool t12217 = (t12213&&t12216);
float t12218;
float t12219;
float t12220;
float t12221;
if(t12217){
float t12222 = (t12173/t12171);
float t12223 = (-t12222);
float t12224 = (t12164*t12223);
float t12225 = (t12166+t12224);
float t12226 = atan(t12225,t12181);
float t12227 = (u1.u0/30);
float t12228 = (t12226+t12227);
float t12229 = (2*3.1415927);
float t12230 = (t12228+t12229);
float t12231 = mod(t12230,2);
float t12232 = (t12231*3.1415927);
float t12233 = (2*3.1415927);
float t12234 = (t12232/t12233);
float t12235 = (t12225*t12225);
float t12236 = (t12171*t12223);
float t12237 = (t12173+t12236);
float t12238 = (t12237*t12237);
float t12239 = (t12235+t12238);
float t12240 = (t12179*t12223);
float t12241 = (t12181+t12240);
float t12242 = (t12241*t12241);
float t12243 = (t12239+t12242);
float t12244 = sqrt(t12243);
float t12245 = (t12244*t12244);
float t12246 = sqrt(t12245);
float t12247 = (t12246-float(2.6));
float t12248 = (t12247/float(11.4));
vec4 t12249 = texture(s4,vec2(t12234,t12248));
t12218 = t12249.x;
t12219 = t12249.y;
t12220 = t12249.z;
float t12250;
if(t12217){
t12250 = 1;
} else {
t12250 = 0;
}
float t12251 = (t12249.x*t12249.x);
float t12252 = (t12249.y*t12249.y);
float t12253 = (t12251+t12252);
float t12254 = (t12249.z*t12249.z);
float t12255 = (t12253+t12254);
float t12256 = sqrt(t12255);
float t12257 = (t12256*t12256);
float t12258 = (t12257/float(3.0));
bool t12259 = (t12258<=1);
float t12260;
if(t12259){
t12260 = t12258;
} else {
t12260 = 1;
}
bool t12261 = (t12260>=0);
float t12262;
if(t12261){
t12262 = t12260;
} else {
t12262 = 0;
}
float t12263 = (t12250*t12262);
t12221 = t12263;
} else {
t12218 = 0;
t12219 = 0;
t12220 = 0;
t12221 = 0;
}
float t12264 = (1-t12202);
float t12265 = (t12199*t12264);
float t12266 = (t12202+t12265);
float t12267 = (1-t12266);
float t12268 = (t12221*t12267);
float t12269 = (t12218*t12268);
float t12270 = (t12206+t12269);
float t12271 = (-float(1.5));
float t12272 = (t12271*t180);
float t12273 = (t12272*t12166);
float t12274 = pow(t12185,float(2.5));
float t12275 = (t12273/t12274);
float t12276 = (t12275*float(0.16));
float t12277 = (t12164+t12276);
float t12278 = (t12277*float(0.16));
float t12279 = (t12166+t12278);
float t12280 = (t12279*t12279);
float t12281 = (t12272*t12173);
float t12282 = (t12281/t12274);
float t12283 = (t12282*float(0.16));
float t12284 = (t12171+t12283);
float t12285 = (t12284*float(0.16));
float t12286 = (t12173+t12285);
float t12287 = (t12286*t12286);
float t12288 = (t12280+t12287);
float t12289 = (t12272*t12181);
float t12290 = (t12289/t12274);
float t12291 = (t12290*float(0.16));
float t12292 = (t12179+t12291);
float t12293 = (t12292*float(0.16));
float t12294 = (t12181+t12293);
float t12295 = (t12294*t12294);
float t12296 = (t12288+t12295);
float t12297 = sqrt(t12296);
float t12298 = (t12297*t12297);
bool t12299 = (t12298<1);
float t12300 = (t12166*t12166);
float t12301 = (t12173*t12173);
float t12302 = (t12300+t12301);
float t12303 = (t12181*t12181);
float t12304 = (t12302+t12303);
float t12305 = sqrt(t12304);
float t12306 = (t12305*t12305);
bool t12307 = (t12306>1);
bool t12308 = (t12299&&t12307);
float t12309;
float t12310;
float t12311;
float t12312;
if(t12308){
t12309 = 0;
t12310 = 0;
t12311 = 0;
t12312 = 1;
} else {
t12309 = 0;
t12310 = 0;
t12311 = 0;
t12312 = 0;
}
float t12313 = (1-t12266);
float t12314 = (t12221*t12313);
float t12315 = (t12266+t12314);
float t12316 = (1-t12315);
float t12317 = (t12312*t12316);
float t12318 = (t12309*t12317);
float t12319 = (t12270+t12318);
bool t12320 = (t12173>0);
bool t12321 = (t12286>0);
bool t12322 = (!t12321);
bool t12323 = (t12320&&t12322);
bool t12324 = (!t12320);
bool t12325 = (t12321&&t12324);
bool t12326 = (t12323||t12325);
bool t12327 = (t12298<196);
bool t12328 = (t12298>float(6.76));
bool t12329 = (t12327&&t12328);
bool t12330 = (t12326&&t12329);
float t12331;
float t12332;
float t12333;
float t12334;
if(t12330){
float t12335 = (t12286/t12284);
float t12336 = (-t12335);
float t12337 = (t12277*t12336);
float t12338 = (t12279+t12337);
float t12339 = atan(t12338,t12294);
float t12340 = (u1.u0/30);
float t12341 = (t12339+t12340);
float t12342 = (2*3.1415927);
float t12343 = (t12341+t12342);
float t12344 = mod(t12343,2);
float t12345 = (t12344*3.1415927);
float t12346 = (2*3.1415927);
float t12347 = (t12345/t12346);
float t12348 = (t12338*t12338);
float t12349 = (t12284*t12336);
float t12350 = (t12286+t12349);
float t12351 = (t12350*t12350);
float t12352 = (t12348+t12351);
float t12353 = (t12292*t12336);
float t12354 = (t12294+t12353);
float t12355 = (t12354*t12354);
float t12356 = (t12352+t12355);
float t12357 = sqrt(t12356);
float t12358 = (t12357*t12357);
float t12359 = sqrt(t12358);
float t12360 = (t12359-float(2.6));
float t12361 = (t12360/float(11.4));
vec4 t12362 = texture(s4,vec2(t12347,t12361));
t12331 = t12362.x;
t12332 = t12362.y;
t12333 = t12362.z;
float t12363;
if(t12330){
t12363 = 1;
} else {
t12363 = 0;
}
float t12364 = (t12362.x*t12362.x);
float t12365 = (t12362.y*t12362.y);
float t12366 = (t12364+t12365);
float t12367 = (t12362.z*t12362.z);
float t12368 = (t12366+t12367);
float t12369 = sqrt(t12368);
float t12370 = (t12369*t12369);
float t12371 = (t12370/float(3.0));
bool t12372 = (t12371<=1);
float t12373;
if(t12372){
t12373 = t12371;
} else {
t12373 = 1;
}
bool t12374 = (t12373>=0);
float t12375;
if(t12374){
t12375 = t12373;
} else {
t12375 = 0;
}
float t12376 = (t12363*t12375);
t12334 = t12376;
} else {
t12331 = 0;
t12332 = 0;
t12333 = 0;
t12334 = 0;
}
float t12377 = (1-t12315);
float t12378 = (t12312*t12377);
float t12379 = (t12315+t12378);
float t12380 = (1-t12379);
float t12381 = (t12334*t12380);
float t12382 = (t12331*t12381);
float t12383 = (t12319+t12382);
float t12384 = (-float(1.5));
float t12385 = (t12384*t180);
float t12386 = (t12385*t12279);
float t12387 = pow(t12298,float(2.5));
float t12388 = (t12386/t12387);
float t12389 = (t12388*float(0.16));
float t12390 = (t12277+t12389);
float t12391 = (t12390*float(0.16));
float t12392 = (t12279+t12391);
float t12393 = (t12392*t12392);
float t12394 = (t12385*t12286);
float t12395 = (t12394/t12387);
float t12396 = (t12395*float(0.16));
float t12397 = (t12284+t12396);
float t12398 = (t12397*float(0.16));
float t12399 = (t12286+t12398);
float t12400 = (t12399*t12399);
float t12401 = (t12393+t12400);
float t12402 = (t12385*t12294);
float t12403 = (t12402/t12387);
float t12404 = (t12403*float(0.16));
float t12405 = (t12292+t12404);
float t12406 = (t12405*float(0.16));
float t12407 = (t12294+t12406);
float t12408 = (t12407*t12407);
float t12409 = (t12401+t12408);
float t12410 = sqrt(t12409);
float t12411 = (t12410*t12410);
bool t12412 = (t12411<1);
float t12413 = (t12279*t12279);
float t12414 = (t12286*t12286);
float t12415 = (t12413+t12414);
float t12416 = (t12294*t12294);
float t12417 = (t12415+t12416);
float t12418 = sqrt(t12417);
float t12419 = (t12418*t12418);
bool t12420 = (t12419>1);
bool t12421 = (t12412&&t12420);
float t12422;
float t12423;
float t12424;
float t12425;
if(t12421){
t12422 = 0;
t12423 = 0;
t12424 = 0;
t12425 = 1;
} else {
t12422 = 0;
t12423 = 0;
t12424 = 0;
t12425 = 0;
}
float t12426 = (1-t12379);
float t12427 = (t12334*t12426);
float t12428 = (t12379+t12427);
float t12429 = (1-t12428);
float t12430 = (t12425*t12429);
float t12431 = (t12422*t12430);
float t12432 = (t12383+t12431);
bool t12433 = (t12286>0);
bool t12434 = (t12399>0);
bool t12435 = (!t12434);
bool t12436 = (t12433&&t12435);
bool t12437 = (!t12433);
bool t12438 = (t12434&&t12437);
bool t12439 = (t12436||t12438);
bool t12440 = (t12411<196);
bool t12441 = (t12411>float(6.76));
bool t12442 = (t12440&&t12441);
bool t12443 = (t12439&&t12442);
float t12444;
float t12445;
float t12446;
float t12447;
if(t12443){
float t12448 = (t12399/t12397);
float t12449 = (-t12448);
float t12450 = (t12390*t12449);
float t12451 = (t12392+t12450);
float t12452 = atan(t12451,t12407);
float t12453 = (u1.u0/30);
float t12454 = (t12452+t12453);
float t12455 = (2*3.1415927);
float t12456 = (t12454+t12455);
float t12457 = mod(t12456,2);
float t12458 = (t12457*3.1415927);
float t12459 = (2*3.1415927);
float t12460 = (t12458/t12459);
float t12461 = (t12451*t12451);
float t12462 = (t12397*t12449);
float t12463 = (t12399+t12462);
float t12464 = (t12463*t12463);
float t12465 = (t12461+t12464);
float t12466 = (t12405*t12449);
float t12467 = (t12407+t12466);
float t12468 = (t12467*t12467);
float t12469 = (t12465+t12468);
float t12470 = sqrt(t12469);
float t12471 = (t12470*t12470);
float t12472 = sqrt(t12471);
float t12473 = (t12472-float(2.6));
float t12474 = (t12473/float(11.4));
vec4 t12475 = texture(s4,vec2(t12460,t12474));
t12444 = t12475.x;
t12445 = t12475.y;
t12446 = t12475.z;
float t12476;
if(t12443){
t12476 = 1;
} else {
t12476 = 0;
}
float t12477 = (t12475.x*t12475.x);
float t12478 = (t12475.y*t12475.y);
float t12479 = (t12477+t12478);
float t12480 = (t12475.z*t12475.z);
float t12481 = (t12479+t12480);
float t12482 = sqrt(t12481);
float t12483 = (t12482*t12482);
float t12484 = (t12483/float(3.0));
bool t12485 = (t12484<=1);
float t12486;
if(t12485){
t12486 = t12484;
} else {
t12486 = 1;
}
bool t12487 = (t12486>=0);
float t12488;
if(t12487){
t12488 = t12486;
} else {
t12488 = 0;
}
float t12489 = (t12476*t12488);
t12447 = t12489;
} else {
t12444 = 0;
t12445 = 0;
t12446 = 0;
t12447 = 0;
}
float t12490 = (1-t12428);
float t12491 = (t12425*t12490);
float t12492 = (t12428+t12491);
float t12493 = (1-t12492);
float t12494 = (t12447*t12493);
float t12495 = (t12444*t12494);
float t12496 = (t12432+t12495);
float t12497 = (-float(1.5));
float t12498 = (t12497*t180);
float t12499 = (t12498*t12392);
float t12500 = pow(t12411,float(2.5));
float t12501 = (t12499/t12500);
float t12502 = (t12501*float(0.16));
float t12503 = (t12390+t12502);
float t12504 = (t12503*float(0.16));
float t12505 = (t12392+t12504);
float t12506 = (t12505*t12505);
float t12507 = (t12498*t12399);
float t12508 = (t12507/t12500);
float t12509 = (t12508*float(0.16));
float t12510 = (t12397+t12509);
float t12511 = (t12510*float(0.16));
float t12512 = (t12399+t12511);
float t12513 = (t12512*t12512);
float t12514 = (t12506+t12513);
float t12515 = (t12498*t12407);
float t12516 = (t12515/t12500);
float t12517 = (t12516*float(0.16));
float t12518 = (t12405+t12517);
float t12519 = (t12518*float(0.16));
float t12520 = (t12407+t12519);
float t12521 = (t12520*t12520);
float t12522 = (t12514+t12521);
float t12523 = sqrt(t12522);
float t12524 = (t12523*t12523);
bool t12525 = (t12524<1);
float t12526 = (t12392*t12392);
float t12527 = (t12399*t12399);
float t12528 = (t12526+t12527);
float t12529 = (t12407*t12407);
float t12530 = (t12528+t12529);
float t12531 = sqrt(t12530);
float t12532 = (t12531*t12531);
bool t12533 = (t12532>1);
bool t12534 = (t12525&&t12533);
float t12535;
float t12536;
float t12537;
float t12538;
if(t12534){
t12535 = 0;
t12536 = 0;
t12537 = 0;
t12538 = 1;
} else {
t12535 = 0;
t12536 = 0;
t12537 = 0;
t12538 = 0;
}
float t12539 = (1-t12492);
float t12540 = (t12447*t12539);
float t12541 = (t12492+t12540);
float t12542 = (1-t12541);
float t12543 = (t12538*t12542);
float t12544 = (t12535*t12543);
float t12545 = (t12496+t12544);
bool t12546 = (t12399>0);
bool t12547 = (t12512>0);
bool t12548 = (!t12547);
bool t12549 = (t12546&&t12548);
bool t12550 = (!t12546);
bool t12551 = (t12547&&t12550);
bool t12552 = (t12549||t12551);
bool t12553 = (t12524<196);
bool t12554 = (t12524>float(6.76));
bool t12555 = (t12553&&t12554);
bool t12556 = (t12552&&t12555);
float t12557;
float t12558;
float t12559;
float t12560;
if(t12556){
float t12561 = (t12512/t12510);
float t12562 = (-t12561);
float t12563 = (t12503*t12562);
float t12564 = (t12505+t12563);
float t12565 = atan(t12564,t12520);
float t12566 = (u1.u0/30);
float t12567 = (t12565+t12566);
float t12568 = (2*3.1415927);
float t12569 = (t12567+t12568);
float t12570 = mod(t12569,2);
float t12571 = (t12570*3.1415927);
float t12572 = (2*3.1415927);
float t12573 = (t12571/t12572);
float t12574 = (t12564*t12564);
float t12575 = (t12510*t12562);
float t12576 = (t12512+t12575);
float t12577 = (t12576*t12576);
float t12578 = (t12574+t12577);
float t12579 = (t12518*t12562);
float t12580 = (t12520+t12579);
float t12581 = (t12580*t12580);
float t12582 = (t12578+t12581);
float t12583 = sqrt(t12582);
float t12584 = (t12583*t12583);
float t12585 = sqrt(t12584);
float t12586 = (t12585-float(2.6));
float t12587 = (t12586/float(11.4));
vec4 t12588 = texture(s4,vec2(t12573,t12587));
t12557 = t12588.x;
t12558 = t12588.y;
t12559 = t12588.z;
float t12589;
if(t12556){
t12589 = 1;
} else {
t12589 = 0;
}
float t12590 = (t12588.x*t12588.x);
float t12591 = (t12588.y*t12588.y);
float t12592 = (t12590+t12591);
float t12593 = (t12588.z*t12588.z);
float t12594 = (t12592+t12593);
float t12595 = sqrt(t12594);
float t12596 = (t12595*t12595);
float t12597 = (t12596/float(3.0));
bool t12598 = (t12597<=1);
float t12599;
if(t12598){
t12599 = t12597;
} else {
t12599 = 1;
}
bool t12600 = (t12599>=0);
float t12601;
if(t12600){
t12601 = t12599;
} else {
t12601 = 0;
}
float t12602 = (t12589*t12601);
t12560 = t12602;
} else {
t12557 = 0;
t12558 = 0;
t12559 = 0;
t12560 = 0;
}
float t12603 = (1-t12541);
float t12604 = (t12538*t12603);
float t12605 = (t12541+t12604);
float t12606 = (1-t12605);
float t12607 = (t12560*t12606);
float t12608 = (t12557*t12607);
float t12609 = (t12545+t12608);
float t12610 = (-float(1.5));
float t12611 = (t12610*t180);
float t12612 = (t12611*t12505);
float t12613 = pow(t12524,float(2.5));
float t12614 = (t12612/t12613);
float t12615 = (t12614*float(0.16));
float t12616 = (t12503+t12615);
float t12617 = (t12616*float(0.16));
float t12618 = (t12505+t12617);
float t12619 = (t12618*t12618);
float t12620 = (t12611*t12512);
float t12621 = (t12620/t12613);
float t12622 = (t12621*float(0.16));
float t12623 = (t12510+t12622);
float t12624 = (t12623*float(0.16));
float t12625 = (t12512+t12624);
float t12626 = (t12625*t12625);
float t12627 = (t12619+t12626);
float t12628 = (t12611*t12520);
float t12629 = (t12628/t12613);
float t12630 = (t12629*float(0.16));
float t12631 = (t12518+t12630);
float t12632 = (t12631*float(0.16));
float t12633 = (t12520+t12632);
float t12634 = (t12633*t12633);
float t12635 = (t12627+t12634);
float t12636 = sqrt(t12635);
float t12637 = (t12636*t12636);
bool t12638 = (t12637<1);
float t12639 = (t12505*t12505);
float t12640 = (t12512*t12512);
float t12641 = (t12639+t12640);
float t12642 = (t12520*t12520);
float t12643 = (t12641+t12642);
float t12644 = sqrt(t12643);
float t12645 = (t12644*t12644);
bool t12646 = (t12645>1);
bool t12647 = (t12638&&t12646);
float t12648;
float t12649;
float t12650;
float t12651;
if(t12647){
t12648 = 0;
t12649 = 0;
t12650 = 0;
t12651 = 1;
} else {
t12648 = 0;
t12649 = 0;
t12650 = 0;
t12651 = 0;
}
float t12652 = (1-t12605);
float t12653 = (t12560*t12652);
float t12654 = (t12605+t12653);
float t12655 = (1-t12654);
float t12656 = (t12651*t12655);
float t12657 = (t12648*t12656);
float t12658 = (t12609+t12657);
bool t12659 = (t12512>0);
bool t12660 = (t12625>0);
bool t12661 = (!t12660);
bool t12662 = (t12659&&t12661);
bool t12663 = (!t12659);
bool t12664 = (t12660&&t12663);
bool t12665 = (t12662||t12664);
bool t12666 = (t12637<196);
bool t12667 = (t12637>float(6.76));
bool t12668 = (t12666&&t12667);
bool t12669 = (t12665&&t12668);
float t12670;
float t12671;
float t12672;
float t12673;
if(t12669){
float t12674 = (t12625/t12623);
float t12675 = (-t12674);
float t12676 = (t12616*t12675);
float t12677 = (t12618+t12676);
float t12678 = atan(t12677,t12633);
float t12679 = (u1.u0/30);
float t12680 = (t12678+t12679);
float t12681 = (2*3.1415927);
float t12682 = (t12680+t12681);
float t12683 = mod(t12682,2);
float t12684 = (t12683*3.1415927);
float t12685 = (2*3.1415927);
float t12686 = (t12684/t12685);
float t12687 = (t12677*t12677);
float t12688 = (t12623*t12675);
float t12689 = (t12625+t12688);
float t12690 = (t12689*t12689);
float t12691 = (t12687+t12690);
float t12692 = (t12631*t12675);
float t12693 = (t12633+t12692);
float t12694 = (t12693*t12693);
float t12695 = (t12691+t12694);
float t12696 = sqrt(t12695);
float t12697 = (t12696*t12696);
float t12698 = sqrt(t12697);
float t12699 = (t12698-float(2.6));
float t12700 = (t12699/float(11.4));
vec4 t12701 = texture(s4,vec2(t12686,t12700));
t12670 = t12701.x;
t12671 = t12701.y;
t12672 = t12701.z;
float t12702;
if(t12669){
t12702 = 1;
} else {
t12702 = 0;
}
float t12703 = (t12701.x*t12701.x);
float t12704 = (t12701.y*t12701.y);
float t12705 = (t12703+t12704);
float t12706 = (t12701.z*t12701.z);
float t12707 = (t12705+t12706);
float t12708 = sqrt(t12707);
float t12709 = (t12708*t12708);
float t12710 = (t12709/float(3.0));
bool t12711 = (t12710<=1);
float t12712;
if(t12711){
t12712 = t12710;
} else {
t12712 = 1;
}
bool t12713 = (t12712>=0);
float t12714;
if(t12713){
t12714 = t12712;
} else {
t12714 = 0;
}
float t12715 = (t12702*t12714);
t12673 = t12715;
} else {
t12670 = 0;
t12671 = 0;
t12672 = 0;
t12673 = 0;
}
float t12716 = (1-t12654);
float t12717 = (t12651*t12716);
float t12718 = (t12654+t12717);
float t12719 = (1-t12718);
float t12720 = (t12673*t12719);
float t12721 = (t12670*t12720);
float t12722 = (t12658+t12721);
float t12723 = (-float(1.5));
float t12724 = (t12723*t180);
float t12725 = (t12724*t12618);
float t12726 = pow(t12637,float(2.5));
float t12727 = (t12725/t12726);
float t12728 = (t12727*float(0.16));
float t12729 = (t12616+t12728);
float t12730 = (t12729*float(0.16));
float t12731 = (t12618+t12730);
float t12732 = (t12731*t12731);
float t12733 = (t12724*t12625);
float t12734 = (t12733/t12726);
float t12735 = (t12734*float(0.16));
float t12736 = (t12623+t12735);
float t12737 = (t12736*float(0.16));
float t12738 = (t12625+t12737);
float t12739 = (t12738*t12738);
float t12740 = (t12732+t12739);
float t12741 = (t12724*t12633);
float t12742 = (t12741/t12726);
float t12743 = (t12742*float(0.16));
float t12744 = (t12631+t12743);
float t12745 = (t12744*float(0.16));
float t12746 = (t12633+t12745);
float t12747 = (t12746*t12746);
float t12748 = (t12740+t12747);
float t12749 = sqrt(t12748);
float t12750 = (t12749*t12749);
bool t12751 = (t12750<1);
float t12752 = (t12618*t12618);
float t12753 = (t12625*t12625);
float t12754 = (t12752+t12753);
float t12755 = (t12633*t12633);
float t12756 = (t12754+t12755);
float t12757 = sqrt(t12756);
float t12758 = (t12757*t12757);
bool t12759 = (t12758>1);
bool t12760 = (t12751&&t12759);
float t12761;
float t12762;
float t12763;
float t12764;
if(t12760){
t12761 = 0;
t12762 = 0;
t12763 = 0;
t12764 = 1;
} else {
t12761 = 0;
t12762 = 0;
t12763 = 0;
t12764 = 0;
}
float t12765 = (1-t12718);
float t12766 = (t12673*t12765);
float t12767 = (t12718+t12766);
float t12768 = (1-t12767);
float t12769 = (t12764*t12768);
float t12770 = (t12761*t12769);
float t12771 = (t12722+t12770);
bool t12772 = (t12625>0);
bool t12773 = (t12738>0);
bool t12774 = (!t12773);
bool t12775 = (t12772&&t12774);
bool t12776 = (!t12772);
bool t12777 = (t12773&&t12776);
bool t12778 = (t12775||t12777);
bool t12779 = (t12750<196);
bool t12780 = (t12750>float(6.76));
bool t12781 = (t12779&&t12780);
bool t12782 = (t12778&&t12781);
float t12783;
float t12784;
float t12785;
float t12786;
if(t12782){
float t12787 = (t12738/t12736);
float t12788 = (-t12787);
float t12789 = (t12729*t12788);
float t12790 = (t12731+t12789);
float t12791 = atan(t12790,t12746);
float t12792 = (u1.u0/30);
float t12793 = (t12791+t12792);
float t12794 = (2*3.1415927);
float t12795 = (t12793+t12794);
float t12796 = mod(t12795,2);
float t12797 = (t12796*3.1415927);
float t12798 = (2*3.1415927);
float t12799 = (t12797/t12798);
float t12800 = (t12790*t12790);
float t12801 = (t12736*t12788);
float t12802 = (t12738+t12801);
float t12803 = (t12802*t12802);
float t12804 = (t12800+t12803);
float t12805 = (t12744*t12788);
float t12806 = (t12746+t12805);
float t12807 = (t12806*t12806);
float t12808 = (t12804+t12807);
float t12809 = sqrt(t12808);
float t12810 = (t12809*t12809);
float t12811 = sqrt(t12810);
float t12812 = (t12811-float(2.6));
float t12813 = (t12812/float(11.4));
vec4 t12814 = texture(s4,vec2(t12799,t12813));
t12783 = t12814.x;
t12784 = t12814.y;
t12785 = t12814.z;
float t12815;
if(t12782){
t12815 = 1;
} else {
t12815 = 0;
}
float t12816 = (t12814.x*t12814.x);
float t12817 = (t12814.y*t12814.y);
float t12818 = (t12816+t12817);
float t12819 = (t12814.z*t12814.z);
float t12820 = (t12818+t12819);
float t12821 = sqrt(t12820);
float t12822 = (t12821*t12821);
float t12823 = (t12822/float(3.0));
bool t12824 = (t12823<=1);
float t12825;
if(t12824){
t12825 = t12823;
} else {
t12825 = 1;
}
bool t12826 = (t12825>=0);
float t12827;
if(t12826){
t12827 = t12825;
} else {
t12827 = 0;
}
float t12828 = (t12815*t12827);
t12786 = t12828;
} else {
t12783 = 0;
t12784 = 0;
t12785 = 0;
t12786 = 0;
}
float t12829 = (1-t12767);
float t12830 = (t12764*t12829);
float t12831 = (t12767+t12830);
float t12832 = (1-t12831);
float t12833 = (t12786*t12832);
float t12834 = (t12783*t12833);
float t12835 = (t12771+t12834);
float t12836 = (-float(1.5));
float t12837 = (t12836*t180);
float t12838 = (t12837*t12731);
float t12839 = pow(t12750,float(2.5));
float t12840 = (t12838/t12839);
float t12841 = (t12840*float(0.16));
float t12842 = (t12729+t12841);
float t12843 = (t12842*float(0.16));
float t12844 = (t12731+t12843);
float t12845 = (t12844*t12844);
float t12846 = (t12837*t12738);
float t12847 = (t12846/t12839);
float t12848 = (t12847*float(0.16));
float t12849 = (t12736+t12848);
float t12850 = (t12849*float(0.16));
float t12851 = (t12738+t12850);
float t12852 = (t12851*t12851);
float t12853 = (t12845+t12852);
float t12854 = (t12837*t12746);
float t12855 = (t12854/t12839);
float t12856 = (t12855*float(0.16));
float t12857 = (t12744+t12856);
float t12858 = (t12857*float(0.16));
float t12859 = (t12746+t12858);
float t12860 = (t12859*t12859);
float t12861 = (t12853+t12860);
float t12862 = sqrt(t12861);
float t12863 = (t12862*t12862);
bool t12864 = (t12863<1);
float t12865 = (t12731*t12731);
float t12866 = (t12738*t12738);
float t12867 = (t12865+t12866);
float t12868 = (t12746*t12746);
float t12869 = (t12867+t12868);
float t12870 = sqrt(t12869);
float t12871 = (t12870*t12870);
bool t12872 = (t12871>1);
bool t12873 = (t12864&&t12872);
float t12874;
float t12875;
float t12876;
float t12877;
if(t12873){
t12874 = 0;
t12875 = 0;
t12876 = 0;
t12877 = 1;
} else {
t12874 = 0;
t12875 = 0;
t12876 = 0;
t12877 = 0;
}
float t12878 = (1-t12831);
float t12879 = (t12786*t12878);
float t12880 = (t12831+t12879);
float t12881 = (1-t12880);
float t12882 = (t12877*t12881);
float t12883 = (t12874*t12882);
float t12884 = (t12835+t12883);
bool t12885 = (t12738>0);
bool t12886 = (t12851>0);
bool t12887 = (!t12886);
bool t12888 = (t12885&&t12887);
bool t12889 = (!t12885);
bool t12890 = (t12886&&t12889);
bool t12891 = (t12888||t12890);
bool t12892 = (t12863<196);
bool t12893 = (t12863>float(6.76));
bool t12894 = (t12892&&t12893);
bool t12895 = (t12891&&t12894);
float t12896;
float t12897;
float t12898;
float t12899;
if(t12895){
float t12900 = (t12851/t12849);
float t12901 = (-t12900);
float t12902 = (t12842*t12901);
float t12903 = (t12844+t12902);
float t12904 = atan(t12903,t12859);
float t12905 = (u1.u0/30);
float t12906 = (t12904+t12905);
float t12907 = (2*3.1415927);
float t12908 = (t12906+t12907);
float t12909 = mod(t12908,2);
float t12910 = (t12909*3.1415927);
float t12911 = (2*3.1415927);
float t12912 = (t12910/t12911);
float t12913 = (t12903*t12903);
float t12914 = (t12849*t12901);
float t12915 = (t12851+t12914);
float t12916 = (t12915*t12915);
float t12917 = (t12913+t12916);
float t12918 = (t12857*t12901);
float t12919 = (t12859+t12918);
float t12920 = (t12919*t12919);
float t12921 = (t12917+t12920);
float t12922 = sqrt(t12921);
float t12923 = (t12922*t12922);
float t12924 = sqrt(t12923);
float t12925 = (t12924-float(2.6));
float t12926 = (t12925/float(11.4));
vec4 t12927 = texture(s4,vec2(t12912,t12926));
t12896 = t12927.x;
t12897 = t12927.y;
t12898 = t12927.z;
float t12928;
if(t12895){
t12928 = 1;
} else {
t12928 = 0;
}
float t12929 = (t12927.x*t12927.x);
float t12930 = (t12927.y*t12927.y);
float t12931 = (t12929+t12930);
float t12932 = (t12927.z*t12927.z);
float t12933 = (t12931+t12932);
float t12934 = sqrt(t12933);
float t12935 = (t12934*t12934);
float t12936 = (t12935/float(3.0));
bool t12937 = (t12936<=1);
float t12938;
if(t12937){
t12938 = t12936;
} else {
t12938 = 1;
}
bool t12939 = (t12938>=0);
float t12940;
if(t12939){
t12940 = t12938;
} else {
t12940 = 0;
}
float t12941 = (t12928*t12940);
t12899 = t12941;
} else {
t12896 = 0;
t12897 = 0;
t12898 = 0;
t12899 = 0;
}
float t12942 = (1-t12880);
float t12943 = (t12877*t12942);
float t12944 = (t12880+t12943);
float t12945 = (1-t12944);
float t12946 = (t12899*t12945);
float t12947 = (t12896*t12946);
float t12948 = (t12884+t12947);
float t12949 = (-float(1.5));
float t12950 = (t12949*t180);
float t12951 = (t12950*t12844);
float t12952 = pow(t12863,float(2.5));
float t12953 = (t12951/t12952);
float t12954 = (t12953*float(0.16));
float t12955 = (t12842+t12954);
float t12956 = (t12955*float(0.16));
float t12957 = (t12844+t12956);
float t12958 = (t12957*t12957);
float t12959 = (t12950*t12851);
float t12960 = (t12959/t12952);
float t12961 = (t12960*float(0.16));
float t12962 = (t12849+t12961);
float t12963 = (t12962*float(0.16));
float t12964 = (t12851+t12963);
float t12965 = (t12964*t12964);
float t12966 = (t12958+t12965);
float t12967 = (t12950*t12859);
float t12968 = (t12967/t12952);
float t12969 = (t12968*float(0.16));
float t12970 = (t12857+t12969);
float t12971 = (t12970*float(0.16));
float t12972 = (t12859+t12971);
float t12973 = (t12972*t12972);
float t12974 = (t12966+t12973);
float t12975 = sqrt(t12974);
float t12976 = (t12975*t12975);
bool t12977 = (t12976<1);
float t12978 = (t12844*t12844);
float t12979 = (t12851*t12851);
float t12980 = (t12978+t12979);
float t12981 = (t12859*t12859);
float t12982 = (t12980+t12981);
float t12983 = sqrt(t12982);
float t12984 = (t12983*t12983);
bool t12985 = (t12984>1);
bool t12986 = (t12977&&t12985);
float t12987;
float t12988;
float t12989;
float t12990;
if(t12986){
t12987 = 0;
t12988 = 0;
t12989 = 0;
t12990 = 1;
} else {
t12987 = 0;
t12988 = 0;
t12989 = 0;
t12990 = 0;
}
float t12991 = (1-t12944);
float t12992 = (t12899*t12991);
float t12993 = (t12944+t12992);
float t12994 = (1-t12993);
float t12995 = (t12990*t12994);
float t12996 = (t12987*t12995);
float t12997 = (t12948+t12996);
bool t12998 = (t12851>0);
bool t12999 = (t12964>0);
bool t13000 = (!t12999);
bool t13001 = (t12998&&t13000);
bool t13002 = (!t12998);
bool t13003 = (t12999&&t13002);
bool t13004 = (t13001||t13003);
bool t13005 = (t12976<196);
bool t13006 = (t12976>float(6.76));
bool t13007 = (t13005&&t13006);
bool t13008 = (t13004&&t13007);
float t13009;
float t13010;
float t13011;
float t13012;
if(t13008){
float t13013 = (t12964/t12962);
float t13014 = (-t13013);
float t13015 = (t12955*t13014);
float t13016 = (t12957+t13015);
float t13017 = atan(t13016,t12972);
float t13018 = (u1.u0/30);
float t13019 = (t13017+t13018);
float t13020 = (2*3.1415927);
float t13021 = (t13019+t13020);
float t13022 = mod(t13021,2);
float t13023 = (t13022*3.1415927);
float t13024 = (2*3.1415927);
float t13025 = (t13023/t13024);
float t13026 = (t13016*t13016);
float t13027 = (t12962*t13014);
float t13028 = (t12964+t13027);
float t13029 = (t13028*t13028);
float t13030 = (t13026+t13029);
float t13031 = (t12970*t13014);
float t13032 = (t12972+t13031);
float t13033 = (t13032*t13032);
float t13034 = (t13030+t13033);
float t13035 = sqrt(t13034);
float t13036 = (t13035*t13035);
float t13037 = sqrt(t13036);
float t13038 = (t13037-float(2.6));
float t13039 = (t13038/float(11.4));
vec4 t13040 = texture(s4,vec2(t13025,t13039));
t13009 = t13040.x;
t13010 = t13040.y;
t13011 = t13040.z;
float t13041;
if(t13008){
t13041 = 1;
} else {
t13041 = 0;
}
float t13042 = (t13040.x*t13040.x);
float t13043 = (t13040.y*t13040.y);
float t13044 = (t13042+t13043);
float t13045 = (t13040.z*t13040.z);
float t13046 = (t13044+t13045);
float t13047 = sqrt(t13046);
float t13048 = (t13047*t13047);
float t13049 = (t13048/float(3.0));
bool t13050 = (t13049<=1);
float t13051;
if(t13050){
t13051 = t13049;
} else {
t13051 = 1;
}
bool t13052 = (t13051>=0);
float t13053;
if(t13052){
t13053 = t13051;
} else {
t13053 = 0;
}
float t13054 = (t13041*t13053);
t13012 = t13054;
} else {
t13009 = 0;
t13010 = 0;
t13011 = 0;
t13012 = 0;
}
float t13055 = (1-t12993);
float t13056 = (t12990*t13055);
float t13057 = (t12993+t13056);
float t13058 = (1-t13057);
float t13059 = (t13012*t13058);
float t13060 = (t13009*t13059);
float t13061 = (t12997+t13060);
float t13062 = (-float(1.5));
float t13063 = (t13062*t180);
float t13064 = (t13063*t12957);
float t13065 = pow(t12976,float(2.5));
float t13066 = (t13064/t13065);
float t13067 = (t13066*float(0.16));
float t13068 = (t12955+t13067);
float t13069 = (t13068*float(0.16));
float t13070 = (t12957+t13069);
float t13071 = (t13070*t13070);
float t13072 = (t13063*t12964);
float t13073 = (t13072/t13065);
float t13074 = (t13073*float(0.16));
float t13075 = (t12962+t13074);
float t13076 = (t13075*float(0.16));
float t13077 = (t12964+t13076);
float t13078 = (t13077*t13077);
float t13079 = (t13071+t13078);
float t13080 = (t13063*t12972);
float t13081 = (t13080/t13065);
float t13082 = (t13081*float(0.16));
float t13083 = (t12970+t13082);
float t13084 = (t13083*float(0.16));
float t13085 = (t12972+t13084);
float t13086 = (t13085*t13085);
float t13087 = (t13079+t13086);
float t13088 = sqrt(t13087);
float t13089 = (t13088*t13088);
bool t13090 = (t13089<1);
float t13091 = (t12957*t12957);
float t13092 = (t12964*t12964);
float t13093 = (t13091+t13092);
float t13094 = (t12972*t12972);
float t13095 = (t13093+t13094);
float t13096 = sqrt(t13095);
float t13097 = (t13096*t13096);
bool t13098 = (t13097>1);
bool t13099 = (t13090&&t13098);
float t13100;
float t13101;
float t13102;
float t13103;
if(t13099){
t13100 = 0;
t13101 = 0;
t13102 = 0;
t13103 = 1;
} else {
t13100 = 0;
t13101 = 0;
t13102 = 0;
t13103 = 0;
}
float t13104 = (1-t13057);
float t13105 = (t13012*t13104);
float t13106 = (t13057+t13105);
float t13107 = (1-t13106);
float t13108 = (t13103*t13107);
float t13109 = (t13100*t13108);
float t13110 = (t13061+t13109);
bool t13111 = (t12964>0);
bool t13112 = (t13077>0);
bool t13113 = (!t13112);
bool t13114 = (t13111&&t13113);
bool t13115 = (!t13111);
bool t13116 = (t13112&&t13115);
bool t13117 = (t13114||t13116);
bool t13118 = (t13089<196);
bool t13119 = (t13089>float(6.76));
bool t13120 = (t13118&&t13119);
bool t13121 = (t13117&&t13120);
float t13122;
float t13123;
float t13124;
float t13125;
if(t13121){
float t13126 = (t13077/t13075);
float t13127 = (-t13126);
float t13128 = (t13068*t13127);
float t13129 = (t13070+t13128);
float t13130 = atan(t13129,t13085);
float t13131 = (u1.u0/30);
float t13132 = (t13130+t13131);
float t13133 = (2*3.1415927);
float t13134 = (t13132+t13133);
float t13135 = mod(t13134,2);
float t13136 = (t13135*3.1415927);
float t13137 = (2*3.1415927);
float t13138 = (t13136/t13137);
float t13139 = (t13129*t13129);
float t13140 = (t13075*t13127);
float t13141 = (t13077+t13140);
float t13142 = (t13141*t13141);
float t13143 = (t13139+t13142);
float t13144 = (t13083*t13127);
float t13145 = (t13085+t13144);
float t13146 = (t13145*t13145);
float t13147 = (t13143+t13146);
float t13148 = sqrt(t13147);
float t13149 = (t13148*t13148);
float t13150 = sqrt(t13149);
float t13151 = (t13150-float(2.6));
float t13152 = (t13151/float(11.4));
vec4 t13153 = texture(s4,vec2(t13138,t13152));
t13122 = t13153.x;
t13123 = t13153.y;
t13124 = t13153.z;
float t13154;
if(t13121){
t13154 = 1;
} else {
t13154 = 0;
}
float t13155 = (t13153.x*t13153.x);
float t13156 = (t13153.y*t13153.y);
float t13157 = (t13155+t13156);
float t13158 = (t13153.z*t13153.z);
float t13159 = (t13157+t13158);
float t13160 = sqrt(t13159);
float t13161 = (t13160*t13160);
float t13162 = (t13161/float(3.0));
bool t13163 = (t13162<=1);
float t13164;
if(t13163){
t13164 = t13162;
} else {
t13164 = 1;
}
bool t13165 = (t13164>=0);
float t13166;
if(t13165){
t13166 = t13164;
} else {
t13166 = 0;
}
float t13167 = (t13154*t13166);
t13125 = t13167;
} else {
t13122 = 0;
t13123 = 0;
t13124 = 0;
t13125 = 0;
}
float t13168 = (1-t13106);
float t13169 = (t13103*t13168);
float t13170 = (t13106+t13169);
float t13171 = (1-t13170);
float t13172 = (t13125*t13171);
float t13173 = (t13122*t13172);
float t13174 = (t13110+t13173);
float t13175 = (-float(1.5));
float t13176 = (t13175*t180);
float t13177 = (t13176*t13070);
float t13178 = pow(t13089,float(2.5));
float t13179 = (t13177/t13178);
float t13180 = (t13179*float(0.16));
float t13181 = (t13068+t13180);
float t13182 = (t13181*float(0.16));
float t13183 = (t13070+t13182);
float t13184 = (t13183*t13183);
float t13185 = (t13176*t13077);
float t13186 = (t13185/t13178);
float t13187 = (t13186*float(0.16));
float t13188 = (t13075+t13187);
float t13189 = (t13188*float(0.16));
float t13190 = (t13077+t13189);
float t13191 = (t13190*t13190);
float t13192 = (t13184+t13191);
float t13193 = (t13176*t13085);
float t13194 = (t13193/t13178);
float t13195 = (t13194*float(0.16));
float t13196 = (t13083+t13195);
float t13197 = (t13196*float(0.16));
float t13198 = (t13085+t13197);
float t13199 = (t13198*t13198);
float t13200 = (t13192+t13199);
float t13201 = sqrt(t13200);
float t13202 = (t13201*t13201);
bool t13203 = (t13202<1);
float t13204 = (t13070*t13070);
float t13205 = (t13077*t13077);
float t13206 = (t13204+t13205);
float t13207 = (t13085*t13085);
float t13208 = (t13206+t13207);
float t13209 = sqrt(t13208);
float t13210 = (t13209*t13209);
bool t13211 = (t13210>1);
bool t13212 = (t13203&&t13211);
float t13213;
float t13214;
float t13215;
float t13216;
if(t13212){
t13213 = 0;
t13214 = 0;
t13215 = 0;
t13216 = 1;
} else {
t13213 = 0;
t13214 = 0;
t13215 = 0;
t13216 = 0;
}
float t13217 = (1-t13170);
float t13218 = (t13125*t13217);
float t13219 = (t13170+t13218);
float t13220 = (1-t13219);
float t13221 = (t13216*t13220);
float t13222 = (t13213*t13221);
float t13223 = (t13174+t13222);
bool t13224 = (t13077>0);
bool t13225 = (t13190>0);
bool t13226 = (!t13225);
bool t13227 = (t13224&&t13226);
bool t13228 = (!t13224);
bool t13229 = (t13225&&t13228);
bool t13230 = (t13227||t13229);
bool t13231 = (t13202<196);
bool t13232 = (t13202>float(6.76));
bool t13233 = (t13231&&t13232);
bool t13234 = (t13230&&t13233);
float t13235;
float t13236;
float t13237;
float t13238;
if(t13234){
float t13239 = (t13190/t13188);
float t13240 = (-t13239);
float t13241 = (t13181*t13240);
float t13242 = (t13183+t13241);
float t13243 = atan(t13242,t13198);
float t13244 = (u1.u0/30);
float t13245 = (t13243+t13244);
float t13246 = (2*3.1415927);
float t13247 = (t13245+t13246);
float t13248 = mod(t13247,2);
float t13249 = (t13248*3.1415927);
float t13250 = (2*3.1415927);
float t13251 = (t13249/t13250);
float t13252 = (t13242*t13242);
float t13253 = (t13188*t13240);
float t13254 = (t13190+t13253);
float t13255 = (t13254*t13254);
float t13256 = (t13252+t13255);
float t13257 = (t13196*t13240);
float t13258 = (t13198+t13257);
float t13259 = (t13258*t13258);
float t13260 = (t13256+t13259);
float t13261 = sqrt(t13260);
float t13262 = (t13261*t13261);
float t13263 = sqrt(t13262);
float t13264 = (t13263-float(2.6));
float t13265 = (t13264/float(11.4));
vec4 t13266 = texture(s4,vec2(t13251,t13265));
t13235 = t13266.x;
t13236 = t13266.y;
t13237 = t13266.z;
float t13267;
if(t13234){
t13267 = 1;
} else {
t13267 = 0;
}
float t13268 = (t13266.x*t13266.x);
float t13269 = (t13266.y*t13266.y);
float t13270 = (t13268+t13269);
float t13271 = (t13266.z*t13266.z);
float t13272 = (t13270+t13271);
float t13273 = sqrt(t13272);
float t13274 = (t13273*t13273);
float t13275 = (t13274/float(3.0));
bool t13276 = (t13275<=1);
float t13277;
if(t13276){
t13277 = t13275;
} else {
t13277 = 1;
}
bool t13278 = (t13277>=0);
float t13279;
if(t13278){
t13279 = t13277;
} else {
t13279 = 0;
}
float t13280 = (t13267*t13279);
t13238 = t13280;
} else {
t13235 = 0;
t13236 = 0;
t13237 = 0;
t13238 = 0;
}
float t13281 = (1-t13219);
float t13282 = (t13216*t13281);
float t13283 = (t13219+t13282);
float t13284 = (1-t13283);
float t13285 = (t13238*t13284);
float t13286 = (t13235*t13285);
float t13287 = (t13223+t13286);
float t13288 = (-float(1.5));
float t13289 = (t13288*t180);
float t13290 = (t13289*t13183);
float t13291 = pow(t13202,float(2.5));
float t13292 = (t13290/t13291);
float t13293 = (t13292*float(0.16));
float t13294 = (t13181+t13293);
float t13295 = (t13294*float(0.16));
float t13296 = (t13183+t13295);
float t13297 = (t13296*t13296);
float t13298 = (t13289*t13190);
float t13299 = (t13298/t13291);
float t13300 = (t13299*float(0.16));
float t13301 = (t13188+t13300);
float t13302 = (t13301*float(0.16));
float t13303 = (t13190+t13302);
float t13304 = (t13303*t13303);
float t13305 = (t13297+t13304);
float t13306 = (t13289*t13198);
float t13307 = (t13306/t13291);
float t13308 = (t13307*float(0.16));
float t13309 = (t13196+t13308);
float t13310 = (t13309*float(0.16));
float t13311 = (t13198+t13310);
float t13312 = (t13311*t13311);
float t13313 = (t13305+t13312);
float t13314 = sqrt(t13313);
float t13315 = (t13314*t13314);
bool t13316 = (t13315<1);
float t13317 = (t13183*t13183);
float t13318 = (t13190*t13190);
float t13319 = (t13317+t13318);
float t13320 = (t13198*t13198);
float t13321 = (t13319+t13320);
float t13322 = sqrt(t13321);
float t13323 = (t13322*t13322);
bool t13324 = (t13323>1);
bool t13325 = (t13316&&t13324);
float t13326;
float t13327;
float t13328;
float t13329;
if(t13325){
t13326 = 0;
t13327 = 0;
t13328 = 0;
t13329 = 1;
} else {
t13326 = 0;
t13327 = 0;
t13328 = 0;
t13329 = 0;
}
float t13330 = (1-t13283);
float t13331 = (t13238*t13330);
float t13332 = (t13283+t13331);
float t13333 = (1-t13332);
float t13334 = (t13329*t13333);
float t13335 = (t13326*t13334);
float t13336 = (t13287+t13335);
bool t13337 = (t13190>0);
bool t13338 = (t13303>0);
bool t13339 = (!t13338);
bool t13340 = (t13337&&t13339);
bool t13341 = (!t13337);
bool t13342 = (t13338&&t13341);
bool t13343 = (t13340||t13342);
bool t13344 = (t13315<196);
bool t13345 = (t13315>float(6.76));
bool t13346 = (t13344&&t13345);
bool t13347 = (t13343&&t13346);
float t13348;
float t13349;
float t13350;
float t13351;
if(t13347){
float t13352 = (t13303/t13301);
float t13353 = (-t13352);
float t13354 = (t13294*t13353);
float t13355 = (t13296+t13354);
float t13356 = atan(t13355,t13311);
float t13357 = (u1.u0/30);
float t13358 = (t13356+t13357);
float t13359 = (2*3.1415927);
float t13360 = (t13358+t13359);
float t13361 = mod(t13360,2);
float t13362 = (t13361*3.1415927);
float t13363 = (2*3.1415927);
float t13364 = (t13362/t13363);
float t13365 = (t13355*t13355);
float t13366 = (t13301*t13353);
float t13367 = (t13303+t13366);
float t13368 = (t13367*t13367);
float t13369 = (t13365+t13368);
float t13370 = (t13309*t13353);
float t13371 = (t13311+t13370);
float t13372 = (t13371*t13371);
float t13373 = (t13369+t13372);
float t13374 = sqrt(t13373);
float t13375 = (t13374*t13374);
float t13376 = sqrt(t13375);
float t13377 = (t13376-float(2.6));
float t13378 = (t13377/float(11.4));
vec4 t13379 = texture(s4,vec2(t13364,t13378));
t13348 = t13379.x;
t13349 = t13379.y;
t13350 = t13379.z;
float t13380;
if(t13347){
t13380 = 1;
} else {
t13380 = 0;
}
float t13381 = (t13379.x*t13379.x);
float t13382 = (t13379.y*t13379.y);
float t13383 = (t13381+t13382);
float t13384 = (t13379.z*t13379.z);
float t13385 = (t13383+t13384);
float t13386 = sqrt(t13385);
float t13387 = (t13386*t13386);
float t13388 = (t13387/float(3.0));
bool t13389 = (t13388<=1);
float t13390;
if(t13389){
t13390 = t13388;
} else {
t13390 = 1;
}
bool t13391 = (t13390>=0);
float t13392;
if(t13391){
t13392 = t13390;
} else {
t13392 = 0;
}
float t13393 = (t13380*t13392);
t13351 = t13393;
} else {
t13348 = 0;
t13349 = 0;
t13350 = 0;
t13351 = 0;
}
float t13394 = (1-t13332);
float t13395 = (t13329*t13394);
float t13396 = (t13332+t13395);
float t13397 = (1-t13396);
float t13398 = (t13351*t13397);
float t13399 = (t13348*t13398);
float t13400 = (t13336+t13399);
float t13401 = (-float(1.5));
float t13402 = (t13401*t180);
float t13403 = (t13402*t13296);
float t13404 = pow(t13315,float(2.5));
float t13405 = (t13403/t13404);
float t13406 = (t13405*float(0.16));
float t13407 = (t13294+t13406);
float t13408 = (t13407*float(0.16));
float t13409 = (t13296+t13408);
float t13410 = (t13409*t13409);
float t13411 = (t13402*t13303);
float t13412 = (t13411/t13404);
float t13413 = (t13412*float(0.16));
float t13414 = (t13301+t13413);
float t13415 = (t13414*float(0.16));
float t13416 = (t13303+t13415);
float t13417 = (t13416*t13416);
float t13418 = (t13410+t13417);
float t13419 = (t13402*t13311);
float t13420 = (t13419/t13404);
float t13421 = (t13420*float(0.16));
float t13422 = (t13309+t13421);
float t13423 = (t13422*float(0.16));
float t13424 = (t13311+t13423);
float t13425 = (t13424*t13424);
float t13426 = (t13418+t13425);
float t13427 = sqrt(t13426);
float t13428 = (t13427*t13427);
bool t13429 = (t13428<1);
float t13430 = (t13296*t13296);
float t13431 = (t13303*t13303);
float t13432 = (t13430+t13431);
float t13433 = (t13311*t13311);
float t13434 = (t13432+t13433);
float t13435 = sqrt(t13434);
float t13436 = (t13435*t13435);
bool t13437 = (t13436>1);
bool t13438 = (t13429&&t13437);
float t13439;
float t13440;
float t13441;
float t13442;
if(t13438){
t13439 = 0;
t13440 = 0;
t13441 = 0;
t13442 = 1;
} else {
t13439 = 0;
t13440 = 0;
t13441 = 0;
t13442 = 0;
}
float t13443 = (1-t13396);
float t13444 = (t13351*t13443);
float t13445 = (t13396+t13444);
float t13446 = (1-t13445);
float t13447 = (t13442*t13446);
float t13448 = (t13439*t13447);
float t13449 = (t13400+t13448);
bool t13450 = (t13303>0);
bool t13451 = (t13416>0);
bool t13452 = (!t13451);
bool t13453 = (t13450&&t13452);
bool t13454 = (!t13450);
bool t13455 = (t13451&&t13454);
bool t13456 = (t13453||t13455);
bool t13457 = (t13428<196);
bool t13458 = (t13428>float(6.76));
bool t13459 = (t13457&&t13458);
bool t13460 = (t13456&&t13459);
float t13461;
float t13462;
float t13463;
float t13464;
if(t13460){
float t13465 = (t13416/t13414);
float t13466 = (-t13465);
float t13467 = (t13407*t13466);
float t13468 = (t13409+t13467);
float t13469 = atan(t13468,t13424);
float t13470 = (u1.u0/30);
float t13471 = (t13469+t13470);
float t13472 = (2*3.1415927);
float t13473 = (t13471+t13472);
float t13474 = mod(t13473,2);
float t13475 = (t13474*3.1415927);
float t13476 = (2*3.1415927);
float t13477 = (t13475/t13476);
float t13478 = (t13468*t13468);
float t13479 = (t13414*t13466);
float t13480 = (t13416+t13479);
float t13481 = (t13480*t13480);
float t13482 = (t13478+t13481);
float t13483 = (t13422*t13466);
float t13484 = (t13424+t13483);
float t13485 = (t13484*t13484);
float t13486 = (t13482+t13485);
float t13487 = sqrt(t13486);
float t13488 = (t13487*t13487);
float t13489 = sqrt(t13488);
float t13490 = (t13489-float(2.6));
float t13491 = (t13490/float(11.4));
vec4 t13492 = texture(s4,vec2(t13477,t13491));
t13461 = t13492.x;
t13462 = t13492.y;
t13463 = t13492.z;
float t13493;
if(t13460){
t13493 = 1;
} else {
t13493 = 0;
}
float t13494 = (t13492.x*t13492.x);
float t13495 = (t13492.y*t13492.y);
float t13496 = (t13494+t13495);
float t13497 = (t13492.z*t13492.z);
float t13498 = (t13496+t13497);
float t13499 = sqrt(t13498);
float t13500 = (t13499*t13499);
float t13501 = (t13500/float(3.0));
bool t13502 = (t13501<=1);
float t13503;
if(t13502){
t13503 = t13501;
} else {
t13503 = 1;
}
bool t13504 = (t13503>=0);
float t13505;
if(t13504){
t13505 = t13503;
} else {
t13505 = 0;
}
float t13506 = (t13493*t13505);
t13464 = t13506;
} else {
t13461 = 0;
t13462 = 0;
t13463 = 0;
t13464 = 0;
}
float t13507 = (1-t13445);
float t13508 = (t13442*t13507);
float t13509 = (t13445+t13508);
float t13510 = (1-t13509);
float t13511 = (t13464*t13510);
float t13512 = (t13461*t13511);
float t13513 = (t13449+t13512);
float t13514 = (-float(1.5));
float t13515 = (t13514*t180);
float t13516 = (t13515*t13409);
float t13517 = pow(t13428,float(2.5));
float t13518 = (t13516/t13517);
float t13519 = (t13518*float(0.16));
float t13520 = (t13407+t13519);
float t13521 = (t13520*float(0.16));
float t13522 = (t13409+t13521);
float t13523 = (t13522*t13522);
float t13524 = (t13515*t13416);
float t13525 = (t13524/t13517);
float t13526 = (t13525*float(0.16));
float t13527 = (t13414+t13526);
float t13528 = (t13527*float(0.16));
float t13529 = (t13416+t13528);
float t13530 = (t13529*t13529);
float t13531 = (t13523+t13530);
float t13532 = (t13515*t13424);
float t13533 = (t13532/t13517);
float t13534 = (t13533*float(0.16));
float t13535 = (t13422+t13534);
float t13536 = (t13535*float(0.16));
float t13537 = (t13424+t13536);
float t13538 = (t13537*t13537);
float t13539 = (t13531+t13538);
float t13540 = sqrt(t13539);
float t13541 = (t13540*t13540);
bool t13542 = (t13541<1);
float t13543 = (t13409*t13409);
float t13544 = (t13416*t13416);
float t13545 = (t13543+t13544);
float t13546 = (t13424*t13424);
float t13547 = (t13545+t13546);
float t13548 = sqrt(t13547);
float t13549 = (t13548*t13548);
bool t13550 = (t13549>1);
bool t13551 = (t13542&&t13550);
float t13552;
float t13553;
float t13554;
float t13555;
if(t13551){
t13552 = 0;
t13553 = 0;
t13554 = 0;
t13555 = 1;
} else {
t13552 = 0;
t13553 = 0;
t13554 = 0;
t13555 = 0;
}
float t13556 = (1-t13509);
float t13557 = (t13464*t13556);
float t13558 = (t13509+t13557);
float t13559 = (1-t13558);
float t13560 = (t13555*t13559);
float t13561 = (t13552*t13560);
float t13562 = (t13513+t13561);
bool t13563 = (t13416>0);
bool t13564 = (t13529>0);
bool t13565 = (!t13564);
bool t13566 = (t13563&&t13565);
bool t13567 = (!t13563);
bool t13568 = (t13564&&t13567);
bool t13569 = (t13566||t13568);
bool t13570 = (t13541<196);
bool t13571 = (t13541>float(6.76));
bool t13572 = (t13570&&t13571);
bool t13573 = (t13569&&t13572);
float t13574;
float t13575;
float t13576;
float t13577;
if(t13573){
float t13578 = (t13529/t13527);
float t13579 = (-t13578);
float t13580 = (t13520*t13579);
float t13581 = (t13522+t13580);
float t13582 = atan(t13581,t13537);
float t13583 = (u1.u0/30);
float t13584 = (t13582+t13583);
float t13585 = (2*3.1415927);
float t13586 = (t13584+t13585);
float t13587 = mod(t13586,2);
float t13588 = (t13587*3.1415927);
float t13589 = (2*3.1415927);
float t13590 = (t13588/t13589);
float t13591 = (t13581*t13581);
float t13592 = (t13527*t13579);
float t13593 = (t13529+t13592);
float t13594 = (t13593*t13593);
float t13595 = (t13591+t13594);
float t13596 = (t13535*t13579);
float t13597 = (t13537+t13596);
float t13598 = (t13597*t13597);
float t13599 = (t13595+t13598);
float t13600 = sqrt(t13599);
float t13601 = (t13600*t13600);
float t13602 = sqrt(t13601);
float t13603 = (t13602-float(2.6));
float t13604 = (t13603/float(11.4));
vec4 t13605 = texture(s4,vec2(t13590,t13604));
t13574 = t13605.x;
t13575 = t13605.y;
t13576 = t13605.z;
float t13606;
if(t13573){
t13606 = 1;
} else {
t13606 = 0;
}
float t13607 = (t13605.x*t13605.x);
float t13608 = (t13605.y*t13605.y);
float t13609 = (t13607+t13608);
float t13610 = (t13605.z*t13605.z);
float t13611 = (t13609+t13610);
float t13612 = sqrt(t13611);
float t13613 = (t13612*t13612);
float t13614 = (t13613/float(3.0));
bool t13615 = (t13614<=1);
float t13616;
if(t13615){
t13616 = t13614;
} else {
t13616 = 1;
}
bool t13617 = (t13616>=0);
float t13618;
if(t13617){
t13618 = t13616;
} else {
t13618 = 0;
}
float t13619 = (t13606*t13618);
t13577 = t13619;
} else {
t13574 = 0;
t13575 = 0;
t13576 = 0;
t13577 = 0;
}
float t13620 = (1-t13558);
float t13621 = (t13555*t13620);
float t13622 = (t13558+t13621);
float t13623 = (1-t13622);
float t13624 = (t13577*t13623);
float t13625 = (t13574*t13624);
float t13626 = (t13562+t13625);
float t13627 = (-float(1.5));
float t13628 = (t13627*t180);
float t13629 = (t13628*t13522);
float t13630 = pow(t13541,float(2.5));
float t13631 = (t13629/t13630);
float t13632 = (t13631*float(0.16));
float t13633 = (t13520+t13632);
float t13634 = (t13633*float(0.16));
float t13635 = (t13522+t13634);
float t13636 = (t13635*t13635);
float t13637 = (t13628*t13529);
float t13638 = (t13637/t13630);
float t13639 = (t13638*float(0.16));
float t13640 = (t13527+t13639);
float t13641 = (t13640*float(0.16));
float t13642 = (t13529+t13641);
float t13643 = (t13642*t13642);
float t13644 = (t13636+t13643);
float t13645 = (t13628*t13537);
float t13646 = (t13645/t13630);
float t13647 = (t13646*float(0.16));
float t13648 = (t13535+t13647);
float t13649 = (t13648*float(0.16));
float t13650 = (t13537+t13649);
float t13651 = (t13650*t13650);
float t13652 = (t13644+t13651);
float t13653 = sqrt(t13652);
float t13654 = (t13653*t13653);
bool t13655 = (t13654<1);
float t13656 = (t13522*t13522);
float t13657 = (t13529*t13529);
float t13658 = (t13656+t13657);
float t13659 = (t13537*t13537);
float t13660 = (t13658+t13659);
float t13661 = sqrt(t13660);
float t13662 = (t13661*t13661);
bool t13663 = (t13662>1);
bool t13664 = (t13655&&t13663);
float t13665;
float t13666;
float t13667;
float t13668;
if(t13664){
t13665 = 0;
t13666 = 0;
t13667 = 0;
t13668 = 1;
} else {
t13665 = 0;
t13666 = 0;
t13667 = 0;
t13668 = 0;
}
float t13669 = (1-t13622);
float t13670 = (t13577*t13669);
float t13671 = (t13622+t13670);
float t13672 = (1-t13671);
float t13673 = (t13668*t13672);
float t13674 = (t13665*t13673);
float t13675 = (t13626+t13674);
bool t13676 = (t13529>0);
bool t13677 = (t13642>0);
bool t13678 = (!t13677);
bool t13679 = (t13676&&t13678);
bool t13680 = (!t13676);
bool t13681 = (t13677&&t13680);
bool t13682 = (t13679||t13681);
bool t13683 = (t13654<196);
bool t13684 = (t13654>float(6.76));
bool t13685 = (t13683&&t13684);
bool t13686 = (t13682&&t13685);
float t13687;
float t13688;
float t13689;
float t13690;
if(t13686){
float t13691 = (t13642/t13640);
float t13692 = (-t13691);
float t13693 = (t13633*t13692);
float t13694 = (t13635+t13693);
float t13695 = atan(t13694,t13650);
float t13696 = (u1.u0/30);
float t13697 = (t13695+t13696);
float t13698 = (2*3.1415927);
float t13699 = (t13697+t13698);
float t13700 = mod(t13699,2);
float t13701 = (t13700*3.1415927);
float t13702 = (2*3.1415927);
float t13703 = (t13701/t13702);
float t13704 = (t13694*t13694);
float t13705 = (t13640*t13692);
float t13706 = (t13642+t13705);
float t13707 = (t13706*t13706);
float t13708 = (t13704+t13707);
float t13709 = (t13648*t13692);
float t13710 = (t13650+t13709);
float t13711 = (t13710*t13710);
float t13712 = (t13708+t13711);
float t13713 = sqrt(t13712);
float t13714 = (t13713*t13713);
float t13715 = sqrt(t13714);
float t13716 = (t13715-float(2.6));
float t13717 = (t13716/float(11.4));
vec4 t13718 = texture(s4,vec2(t13703,t13717));
t13687 = t13718.x;
t13688 = t13718.y;
t13689 = t13718.z;
float t13719;
if(t13686){
t13719 = 1;
} else {
t13719 = 0;
}
float t13720 = (t13718.x*t13718.x);
float t13721 = (t13718.y*t13718.y);
float t13722 = (t13720+t13721);
float t13723 = (t13718.z*t13718.z);
float t13724 = (t13722+t13723);
float t13725 = sqrt(t13724);
float t13726 = (t13725*t13725);
float t13727 = (t13726/float(3.0));
bool t13728 = (t13727<=1);
float t13729;
if(t13728){
t13729 = t13727;
} else {
t13729 = 1;
}
bool t13730 = (t13729>=0);
float t13731;
if(t13730){
t13731 = t13729;
} else {
t13731 = 0;
}
float t13732 = (t13719*t13731);
t13690 = t13732;
} else {
t13687 = 0;
t13688 = 0;
t13689 = 0;
t13690 = 0;
}
float t13733 = (1-t13671);
float t13734 = (t13668*t13733);
float t13735 = (t13671+t13734);
float t13736 = (1-t13735);
float t13737 = (t13690*t13736);
float t13738 = (t13687*t13737);
float t13739 = (t13675+t13738);
float t13740 = (-float(1.5));
float t13741 = (t13740*t180);
float t13742 = (t13741*t13635);
float t13743 = pow(t13654,float(2.5));
float t13744 = (t13742/t13743);
float t13745 = (t13744*float(0.16));
float t13746 = (t13633+t13745);
float t13747 = (t13746*float(0.16));
float t13748 = (t13635+t13747);
float t13749 = (t13748*t13748);
float t13750 = (t13741*t13642);
float t13751 = (t13750/t13743);
float t13752 = (t13751*float(0.16));
float t13753 = (t13640+t13752);
float t13754 = (t13753*float(0.16));
float t13755 = (t13642+t13754);
float t13756 = (t13755*t13755);
float t13757 = (t13749+t13756);
float t13758 = (t13741*t13650);
float t13759 = (t13758/t13743);
float t13760 = (t13759*float(0.16));
float t13761 = (t13648+t13760);
float t13762 = (t13761*float(0.16));
float t13763 = (t13650+t13762);
float t13764 = (t13763*t13763);
float t13765 = (t13757+t13764);
float t13766 = sqrt(t13765);
float t13767 = (t13766*t13766);
bool t13768 = (t13767<1);
float t13769 = (t13635*t13635);
float t13770 = (t13642*t13642);
float t13771 = (t13769+t13770);
float t13772 = (t13650*t13650);
float t13773 = (t13771+t13772);
float t13774 = sqrt(t13773);
float t13775 = (t13774*t13774);
bool t13776 = (t13775>1);
bool t13777 = (t13768&&t13776);
float t13778;
float t13779;
float t13780;
float t13781;
if(t13777){
t13778 = 0;
t13779 = 0;
t13780 = 0;
t13781 = 1;
} else {
t13778 = 0;
t13779 = 0;
t13780 = 0;
t13781 = 0;
}
float t13782 = (1-t13735);
float t13783 = (t13690*t13782);
float t13784 = (t13735+t13783);
float t13785 = (1-t13784);
float t13786 = (t13781*t13785);
float t13787 = (t13778*t13786);
float t13788 = (t13739+t13787);
bool t13789 = (t13642>0);
bool t13790 = (t13755>0);
bool t13791 = (!t13790);
bool t13792 = (t13789&&t13791);
bool t13793 = (!t13789);
bool t13794 = (t13790&&t13793);
bool t13795 = (t13792||t13794);
bool t13796 = (t13767<196);
bool t13797 = (t13767>float(6.76));
bool t13798 = (t13796&&t13797);
bool t13799 = (t13795&&t13798);
float t13800;
float t13801;
float t13802;
float t13803;
if(t13799){
float t13804 = (t13755/t13753);
float t13805 = (-t13804);
float t13806 = (t13746*t13805);
float t13807 = (t13748+t13806);
float t13808 = atan(t13807,t13763);
float t13809 = (u1.u0/30);
float t13810 = (t13808+t13809);
float t13811 = (2*3.1415927);
float t13812 = (t13810+t13811);
float t13813 = mod(t13812,2);
float t13814 = (t13813*3.1415927);
float t13815 = (2*3.1415927);
float t13816 = (t13814/t13815);
float t13817 = (t13807*t13807);
float t13818 = (t13753*t13805);
float t13819 = (t13755+t13818);
float t13820 = (t13819*t13819);
float t13821 = (t13817+t13820);
float t13822 = (t13761*t13805);
float t13823 = (t13763+t13822);
float t13824 = (t13823*t13823);
float t13825 = (t13821+t13824);
float t13826 = sqrt(t13825);
float t13827 = (t13826*t13826);
float t13828 = sqrt(t13827);
float t13829 = (t13828-float(2.6));
float t13830 = (t13829/float(11.4));
vec4 t13831 = texture(s4,vec2(t13816,t13830));
t13800 = t13831.x;
t13801 = t13831.y;
t13802 = t13831.z;
float t13832;
if(t13799){
t13832 = 1;
} else {
t13832 = 0;
}
float t13833 = (t13831.x*t13831.x);
float t13834 = (t13831.y*t13831.y);
float t13835 = (t13833+t13834);
float t13836 = (t13831.z*t13831.z);
float t13837 = (t13835+t13836);
float t13838 = sqrt(t13837);
float t13839 = (t13838*t13838);
float t13840 = (t13839/float(3.0));
bool t13841 = (t13840<=1);
float t13842;
if(t13841){
t13842 = t13840;
} else {
t13842 = 1;
}
bool t13843 = (t13842>=0);
float t13844;
if(t13843){
t13844 = t13842;
} else {
t13844 = 0;
}
float t13845 = (t13832*t13844);
t13803 = t13845;
} else {
t13800 = 0;
t13801 = 0;
t13802 = 0;
t13803 = 0;
}
float t13846 = (1-t13784);
float t13847 = (t13781*t13846);
float t13848 = (t13784+t13847);
float t13849 = (1-t13848);
float t13850 = (t13803*t13849);
float t13851 = (t13800*t13850);
float t13852 = (t13788+t13851);
float t13853 = (-float(1.5));
float t13854 = (t13853*t180);
float t13855 = (t13854*t13748);
float t13856 = pow(t13767,float(2.5));
float t13857 = (t13855/t13856);
float t13858 = (t13857*float(0.16));
float t13859 = (t13746+t13858);
float t13860 = (t13859*float(0.16));
float t13861 = (t13748+t13860);
float t13862 = (t13861*t13861);
float t13863 = (t13854*t13755);
float t13864 = (t13863/t13856);
float t13865 = (t13864*float(0.16));
float t13866 = (t13753+t13865);
float t13867 = (t13866*float(0.16));
float t13868 = (t13755+t13867);
float t13869 = (t13868*t13868);
float t13870 = (t13862+t13869);
float t13871 = (t13854*t13763);
float t13872 = (t13871/t13856);
float t13873 = (t13872*float(0.16));
float t13874 = (t13761+t13873);
float t13875 = (t13874*float(0.16));
float t13876 = (t13763+t13875);
float t13877 = (t13876*t13876);
float t13878 = (t13870+t13877);
float t13879 = sqrt(t13878);
float t13880 = (t13879*t13879);
bool t13881 = (t13880<1);
float t13882 = (t13748*t13748);
float t13883 = (t13755*t13755);
float t13884 = (t13882+t13883);
float t13885 = (t13763*t13763);
float t13886 = (t13884+t13885);
float t13887 = sqrt(t13886);
float t13888 = (t13887*t13887);
bool t13889 = (t13888>1);
bool t13890 = (t13881&&t13889);
float t13891;
float t13892;
float t13893;
float t13894;
if(t13890){
t13891 = 0;
t13892 = 0;
t13893 = 0;
t13894 = 1;
} else {
t13891 = 0;
t13892 = 0;
t13893 = 0;
t13894 = 0;
}
float t13895 = (1-t13848);
float t13896 = (t13803*t13895);
float t13897 = (t13848+t13896);
float t13898 = (1-t13897);
float t13899 = (t13894*t13898);
float t13900 = (t13891*t13899);
float t13901 = (t13852+t13900);
bool t13902 = (t13755>0);
bool t13903 = (t13868>0);
bool t13904 = (!t13903);
bool t13905 = (t13902&&t13904);
bool t13906 = (!t13902);
bool t13907 = (t13903&&t13906);
bool t13908 = (t13905||t13907);
bool t13909 = (t13880<196);
bool t13910 = (t13880>float(6.76));
bool t13911 = (t13909&&t13910);
bool t13912 = (t13908&&t13911);
float t13913;
float t13914;
float t13915;
float t13916;
if(t13912){
float t13917 = (t13868/t13866);
float t13918 = (-t13917);
float t13919 = (t13859*t13918);
float t13920 = (t13861+t13919);
float t13921 = atan(t13920,t13876);
float t13922 = (u1.u0/30);
float t13923 = (t13921+t13922);
float t13924 = (2*3.1415927);
float t13925 = (t13923+t13924);
float t13926 = mod(t13925,2);
float t13927 = (t13926*3.1415927);
float t13928 = (2*3.1415927);
float t13929 = (t13927/t13928);
float t13930 = (t13920*t13920);
float t13931 = (t13866*t13918);
float t13932 = (t13868+t13931);
float t13933 = (t13932*t13932);
float t13934 = (t13930+t13933);
float t13935 = (t13874*t13918);
float t13936 = (t13876+t13935);
float t13937 = (t13936*t13936);
float t13938 = (t13934+t13937);
float t13939 = sqrt(t13938);
float t13940 = (t13939*t13939);
float t13941 = sqrt(t13940);
float t13942 = (t13941-float(2.6));
float t13943 = (t13942/float(11.4));
vec4 t13944 = texture(s4,vec2(t13929,t13943));
t13913 = t13944.x;
t13914 = t13944.y;
t13915 = t13944.z;
float t13945;
if(t13912){
t13945 = 1;
} else {
t13945 = 0;
}
float t13946 = (t13944.x*t13944.x);
float t13947 = (t13944.y*t13944.y);
float t13948 = (t13946+t13947);
float t13949 = (t13944.z*t13944.z);
float t13950 = (t13948+t13949);
float t13951 = sqrt(t13950);
float t13952 = (t13951*t13951);
float t13953 = (t13952/float(3.0));
bool t13954 = (t13953<=1);
float t13955;
if(t13954){
t13955 = t13953;
} else {
t13955 = 1;
}
bool t13956 = (t13955>=0);
float t13957;
if(t13956){
t13957 = t13955;
} else {
t13957 = 0;
}
float t13958 = (t13945*t13957);
t13916 = t13958;
} else {
t13913 = 0;
t13914 = 0;
t13915 = 0;
t13916 = 0;
}
float t13959 = (1-t13897);
float t13960 = (t13894*t13959);
float t13961 = (t13897+t13960);
float t13962 = (1-t13961);
float t13963 = (t13916*t13962);
float t13964 = (t13913*t13963);
float t13965 = (t13901+t13964);
float t13966 = (-float(1.5));
float t13967 = (t13966*t180);
float t13968 = (t13967*t13861);
float t13969 = pow(t13880,float(2.5));
float t13970 = (t13968/t13969);
float t13971 = (t13970*float(0.16));
float t13972 = (t13859+t13971);
float t13973 = (t13972*float(0.16));
float t13974 = (t13861+t13973);
float t13975 = (t13974*t13974);
float t13976 = (t13967*t13868);
float t13977 = (t13976/t13969);
float t13978 = (t13977*float(0.16));
float t13979 = (t13866+t13978);
float t13980 = (t13979*float(0.16));
float t13981 = (t13868+t13980);
float t13982 = (t13981*t13981);
float t13983 = (t13975+t13982);
float t13984 = (t13967*t13876);
float t13985 = (t13984/t13969);
float t13986 = (t13985*float(0.16));
float t13987 = (t13874+t13986);
float t13988 = (t13987*float(0.16));
float t13989 = (t13876+t13988);
float t13990 = (t13989*t13989);
float t13991 = (t13983+t13990);
float t13992 = sqrt(t13991);
float t13993 = (t13992*t13992);
bool t13994 = (t13993<1);
float t13995 = (t13861*t13861);
float t13996 = (t13868*t13868);
float t13997 = (t13995+t13996);
float t13998 = (t13876*t13876);
float t13999 = (t13997+t13998);
float t14000 = sqrt(t13999);
float t14001 = (t14000*t14000);
bool t14002 = (t14001>1);
bool t14003 = (t13994&&t14002);
float t14004;
float t14005;
float t14006;
float t14007;
if(t14003){
t14004 = 0;
t14005 = 0;
t14006 = 0;
t14007 = 1;
} else {
t14004 = 0;
t14005 = 0;
t14006 = 0;
t14007 = 0;
}
float t14008 = (1-t13961);
float t14009 = (t13916*t14008);
float t14010 = (t13961+t14009);
float t14011 = (1-t14010);
float t14012 = (t14007*t14011);
float t14013 = (t14004*t14012);
float t14014 = (t13965+t14013);
bool t14015 = (t13868>0);
bool t14016 = (t13981>0);
bool t14017 = (!t14016);
bool t14018 = (t14015&&t14017);
bool t14019 = (!t14015);
bool t14020 = (t14016&&t14019);
bool t14021 = (t14018||t14020);
bool t14022 = (t13993<196);
bool t14023 = (t13993>float(6.76));
bool t14024 = (t14022&&t14023);
bool t14025 = (t14021&&t14024);
float t14026;
float t14027;
float t14028;
float t14029;
if(t14025){
float t14030 = (t13981/t13979);
float t14031 = (-t14030);
float t14032 = (t13972*t14031);
float t14033 = (t13974+t14032);
float t14034 = atan(t14033,t13989);
float t14035 = (u1.u0/30);
float t14036 = (t14034+t14035);
float t14037 = (2*3.1415927);
float t14038 = (t14036+t14037);
float t14039 = mod(t14038,2);
float t14040 = (t14039*3.1415927);
float t14041 = (2*3.1415927);
float t14042 = (t14040/t14041);
float t14043 = (t14033*t14033);
float t14044 = (t13979*t14031);
float t14045 = (t13981+t14044);
float t14046 = (t14045*t14045);
float t14047 = (t14043+t14046);
float t14048 = (t13987*t14031);
float t14049 = (t13989+t14048);
float t14050 = (t14049*t14049);
float t14051 = (t14047+t14050);
float t14052 = sqrt(t14051);
float t14053 = (t14052*t14052);
float t14054 = sqrt(t14053);
float t14055 = (t14054-float(2.6));
float t14056 = (t14055/float(11.4));
vec4 t14057 = texture(s4,vec2(t14042,t14056));
t14026 = t14057.x;
t14027 = t14057.y;
t14028 = t14057.z;
float t14058;
if(t14025){
t14058 = 1;
} else {
t14058 = 0;
}
float t14059 = (t14057.x*t14057.x);
float t14060 = (t14057.y*t14057.y);
float t14061 = (t14059+t14060);
float t14062 = (t14057.z*t14057.z);
float t14063 = (t14061+t14062);
float t14064 = sqrt(t14063);
float t14065 = (t14064*t14064);
float t14066 = (t14065/float(3.0));
bool t14067 = (t14066<=1);
float t14068;
if(t14067){
t14068 = t14066;
} else {
t14068 = 1;
}
bool t14069 = (t14068>=0);
float t14070;
if(t14069){
t14070 = t14068;
} else {
t14070 = 0;
}
float t14071 = (t14058*t14070);
t14029 = t14071;
} else {
t14026 = 0;
t14027 = 0;
t14028 = 0;
t14029 = 0;
}
float t14072 = (1-t14010);
float t14073 = (t14007*t14072);
float t14074 = (t14010+t14073);
float t14075 = (1-t14074);
float t14076 = (t14029*t14075);
float t14077 = (t14026*t14076);
float t14078 = (t14014+t14077);
float t14079 = (-float(1.5));
float t14080 = (t14079*t180);
float t14081 = (t14080*t13974);
float t14082 = pow(t13993,float(2.5));
float t14083 = (t14081/t14082);
float t14084 = (t14083*float(0.16));
float t14085 = (t13972+t14084);
float t14086 = (t14085*float(0.16));
float t14087 = (t13974+t14086);
float t14088 = (t14087*t14087);
float t14089 = (t14080*t13981);
float t14090 = (t14089/t14082);
float t14091 = (t14090*float(0.16));
float t14092 = (t13979+t14091);
float t14093 = (t14092*float(0.16));
float t14094 = (t13981+t14093);
float t14095 = (t14094*t14094);
float t14096 = (t14088+t14095);
float t14097 = (t14080*t13989);
float t14098 = (t14097/t14082);
float t14099 = (t14098*float(0.16));
float t14100 = (t13987+t14099);
float t14101 = (t14100*float(0.16));
float t14102 = (t13989+t14101);
float t14103 = (t14102*t14102);
float t14104 = (t14096+t14103);
float t14105 = sqrt(t14104);
float t14106 = (t14105*t14105);
bool t14107 = (t14106<1);
float t14108 = (t13974*t13974);
float t14109 = (t13981*t13981);
float t14110 = (t14108+t14109);
float t14111 = (t13989*t13989);
float t14112 = (t14110+t14111);
float t14113 = sqrt(t14112);
float t14114 = (t14113*t14113);
bool t14115 = (t14114>1);
bool t14116 = (t14107&&t14115);
float t14117;
float t14118;
float t14119;
float t14120;
if(t14116){
t14117 = 0;
t14118 = 0;
t14119 = 0;
t14120 = 1;
} else {
t14117 = 0;
t14118 = 0;
t14119 = 0;
t14120 = 0;
}
float t14121 = (1-t14074);
float t14122 = (t14029*t14121);
float t14123 = (t14074+t14122);
float t14124 = (1-t14123);
float t14125 = (t14120*t14124);
float t14126 = (t14117*t14125);
float t14127 = (t14078+t14126);
bool t14128 = (t13981>0);
bool t14129 = (t14094>0);
bool t14130 = (!t14129);
bool t14131 = (t14128&&t14130);
bool t14132 = (!t14128);
bool t14133 = (t14129&&t14132);
bool t14134 = (t14131||t14133);
bool t14135 = (t14106<196);
bool t14136 = (t14106>float(6.76));
bool t14137 = (t14135&&t14136);
bool t14138 = (t14134&&t14137);
float t14139;
float t14140;
float t14141;
float t14142;
if(t14138){
float t14143 = (t14094/t14092);
float t14144 = (-t14143);
float t14145 = (t14085*t14144);
float t14146 = (t14087+t14145);
float t14147 = atan(t14146,t14102);
float t14148 = (u1.u0/30);
float t14149 = (t14147+t14148);
float t14150 = (2*3.1415927);
float t14151 = (t14149+t14150);
float t14152 = mod(t14151,2);
float t14153 = (t14152*3.1415927);
float t14154 = (2*3.1415927);
float t14155 = (t14153/t14154);
float t14156 = (t14146*t14146);
float t14157 = (t14092*t14144);
float t14158 = (t14094+t14157);
float t14159 = (t14158*t14158);
float t14160 = (t14156+t14159);
float t14161 = (t14100*t14144);
float t14162 = (t14102+t14161);
float t14163 = (t14162*t14162);
float t14164 = (t14160+t14163);
float t14165 = sqrt(t14164);
float t14166 = (t14165*t14165);
float t14167 = sqrt(t14166);
float t14168 = (t14167-float(2.6));
float t14169 = (t14168/float(11.4));
vec4 t14170 = texture(s4,vec2(t14155,t14169));
t14139 = t14170.x;
t14140 = t14170.y;
t14141 = t14170.z;
float t14171;
if(t14138){
t14171 = 1;
} else {
t14171 = 0;
}
float t14172 = (t14170.x*t14170.x);
float t14173 = (t14170.y*t14170.y);
float t14174 = (t14172+t14173);
float t14175 = (t14170.z*t14170.z);
float t14176 = (t14174+t14175);
float t14177 = sqrt(t14176);
float t14178 = (t14177*t14177);
float t14179 = (t14178/float(3.0));
bool t14180 = (t14179<=1);
float t14181;
if(t14180){
t14181 = t14179;
} else {
t14181 = 1;
}
bool t14182 = (t14181>=0);
float t14183;
if(t14182){
t14183 = t14181;
} else {
t14183 = 0;
}
float t14184 = (t14171*t14183);
t14142 = t14184;
} else {
t14139 = 0;
t14140 = 0;
t14141 = 0;
t14142 = 0;
}
float t14185 = (1-t14123);
float t14186 = (t14120*t14185);
float t14187 = (t14123+t14186);
float t14188 = (1-t14187);
float t14189 = (t14142*t14188);
float t14190 = (t14139*t14189);
float t14191 = (t14127+t14190);
float t14192 = (-float(1.5));
float t14193 = (t14192*t180);
float t14194 = (t14193*t14087);
float t14195 = pow(t14106,float(2.5));
float t14196 = (t14194/t14195);
float t14197 = (t14196*float(0.16));
float t14198 = (t14085+t14197);
float t14199 = (t14198*float(0.16));
float t14200 = (t14087+t14199);
float t14201 = (t14200*t14200);
float t14202 = (t14193*t14094);
float t14203 = (t14202/t14195);
float t14204 = (t14203*float(0.16));
float t14205 = (t14092+t14204);
float t14206 = (t14205*float(0.16));
float t14207 = (t14094+t14206);
float t14208 = (t14207*t14207);
float t14209 = (t14201+t14208);
float t14210 = (t14193*t14102);
float t14211 = (t14210/t14195);
float t14212 = (t14211*float(0.16));
float t14213 = (t14100+t14212);
float t14214 = (t14213*float(0.16));
float t14215 = (t14102+t14214);
float t14216 = (t14215*t14215);
float t14217 = (t14209+t14216);
float t14218 = sqrt(t14217);
float t14219 = (t14218*t14218);
bool t14220 = (t14219<1);
float t14221 = (t14087*t14087);
float t14222 = (t14094*t14094);
float t14223 = (t14221+t14222);
float t14224 = (t14102*t14102);
float t14225 = (t14223+t14224);
float t14226 = sqrt(t14225);
float t14227 = (t14226*t14226);
bool t14228 = (t14227>1);
bool t14229 = (t14220&&t14228);
float t14230;
float t14231;
float t14232;
float t14233;
if(t14229){
t14230 = 0;
t14231 = 0;
t14232 = 0;
t14233 = 1;
} else {
t14230 = 0;
t14231 = 0;
t14232 = 0;
t14233 = 0;
}
float t14234 = (1-t14187);
float t14235 = (t14142*t14234);
float t14236 = (t14187+t14235);
float t14237 = (1-t14236);
float t14238 = (t14233*t14237);
float t14239 = (t14230*t14238);
float t14240 = (t14191+t14239);
bool t14241 = (t14094>0);
bool t14242 = (t14207>0);
bool t14243 = (!t14242);
bool t14244 = (t14241&&t14243);
bool t14245 = (!t14241);
bool t14246 = (t14242&&t14245);
bool t14247 = (t14244||t14246);
bool t14248 = (t14219<196);
bool t14249 = (t14219>float(6.76));
bool t14250 = (t14248&&t14249);
bool t14251 = (t14247&&t14250);
float t14252;
float t14253;
float t14254;
float t14255;
if(t14251){
float t14256 = (t14207/t14205);
float t14257 = (-t14256);
float t14258 = (t14198*t14257);
float t14259 = (t14200+t14258);
float t14260 = atan(t14259,t14215);
float t14261 = (u1.u0/30);
float t14262 = (t14260+t14261);
float t14263 = (2*3.1415927);
float t14264 = (t14262+t14263);
float t14265 = mod(t14264,2);
float t14266 = (t14265*3.1415927);
float t14267 = (2*3.1415927);
float t14268 = (t14266/t14267);
float t14269 = (t14259*t14259);
float t14270 = (t14205*t14257);
float t14271 = (t14207+t14270);
float t14272 = (t14271*t14271);
float t14273 = (t14269+t14272);
float t14274 = (t14213*t14257);
float t14275 = (t14215+t14274);
float t14276 = (t14275*t14275);
float t14277 = (t14273+t14276);
float t14278 = sqrt(t14277);
float t14279 = (t14278*t14278);
float t14280 = sqrt(t14279);
float t14281 = (t14280-float(2.6));
float t14282 = (t14281/float(11.4));
vec4 t14283 = texture(s4,vec2(t14268,t14282));
t14252 = t14283.x;
t14253 = t14283.y;
t14254 = t14283.z;
float t14284;
if(t14251){
t14284 = 1;
} else {
t14284 = 0;
}
float t14285 = (t14283.x*t14283.x);
float t14286 = (t14283.y*t14283.y);
float t14287 = (t14285+t14286);
float t14288 = (t14283.z*t14283.z);
float t14289 = (t14287+t14288);
float t14290 = sqrt(t14289);
float t14291 = (t14290*t14290);
float t14292 = (t14291/float(3.0));
bool t14293 = (t14292<=1);
float t14294;
if(t14293){
t14294 = t14292;
} else {
t14294 = 1;
}
bool t14295 = (t14294>=0);
float t14296;
if(t14295){
t14296 = t14294;
} else {
t14296 = 0;
}
float t14297 = (t14284*t14296);
t14255 = t14297;
} else {
t14252 = 0;
t14253 = 0;
t14254 = 0;
t14255 = 0;
}
float t14298 = (1-t14236);
float t14299 = (t14233*t14298);
float t14300 = (t14236+t14299);
float t14301 = (1-t14300);
float t14302 = (t14255*t14301);
float t14303 = (t14252*t14302);
float t14304 = (t14240+t14303);
float t14305 = (-float(1.5));
float t14306 = (t14305*t180);
float t14307 = (t14306*t14200);
float t14308 = pow(t14219,float(2.5));
float t14309 = (t14307/t14308);
float t14310 = (t14309*float(0.16));
float t14311 = (t14198+t14310);
float t14312 = (t14311*float(0.16));
float t14313 = (t14200+t14312);
float t14314 = (t14313*t14313);
float t14315 = (t14306*t14207);
float t14316 = (t14315/t14308);
float t14317 = (t14316*float(0.16));
float t14318 = (t14205+t14317);
float t14319 = (t14318*float(0.16));
float t14320 = (t14207+t14319);
float t14321 = (t14320*t14320);
float t14322 = (t14314+t14321);
float t14323 = (t14306*t14215);
float t14324 = (t14323/t14308);
float t14325 = (t14324*float(0.16));
float t14326 = (t14213+t14325);
float t14327 = (t14326*float(0.16));
float t14328 = (t14215+t14327);
float t14329 = (t14328*t14328);
float t14330 = (t14322+t14329);
float t14331 = sqrt(t14330);
float t14332 = (t14331*t14331);
bool t14333 = (t14332<1);
float t14334 = (t14200*t14200);
float t14335 = (t14207*t14207);
float t14336 = (t14334+t14335);
float t14337 = (t14215*t14215);
float t14338 = (t14336+t14337);
float t14339 = sqrt(t14338);
float t14340 = (t14339*t14339);
bool t14341 = (t14340>1);
bool t14342 = (t14333&&t14341);
float t14343;
float t14344;
float t14345;
float t14346;
if(t14342){
t14343 = 0;
t14344 = 0;
t14345 = 0;
t14346 = 1;
} else {
t14343 = 0;
t14344 = 0;
t14345 = 0;
t14346 = 0;
}
float t14347 = (1-t14300);
float t14348 = (t14255*t14347);
float t14349 = (t14300+t14348);
float t14350 = (1-t14349);
float t14351 = (t14346*t14350);
float t14352 = (t14343*t14351);
float t14353 = (t14304+t14352);
bool t14354 = (t14207>0);
bool t14355 = (t14320>0);
bool t14356 = (!t14355);
bool t14357 = (t14354&&t14356);
bool t14358 = (!t14354);
bool t14359 = (t14355&&t14358);
bool t14360 = (t14357||t14359);
bool t14361 = (t14332<196);
bool t14362 = (t14332>float(6.76));
bool t14363 = (t14361&&t14362);
bool t14364 = (t14360&&t14363);
float t14365;
float t14366;
float t14367;
float t14368;
if(t14364){
float t14369 = (t14320/t14318);
float t14370 = (-t14369);
float t14371 = (t14311*t14370);
float t14372 = (t14313+t14371);
float t14373 = atan(t14372,t14328);
float t14374 = (u1.u0/30);
float t14375 = (t14373+t14374);
float t14376 = (2*3.1415927);
float t14377 = (t14375+t14376);
float t14378 = mod(t14377,2);
float t14379 = (t14378*3.1415927);
float t14380 = (2*3.1415927);
float t14381 = (t14379/t14380);
float t14382 = (t14372*t14372);
float t14383 = (t14318*t14370);
float t14384 = (t14320+t14383);
float t14385 = (t14384*t14384);
float t14386 = (t14382+t14385);
float t14387 = (t14326*t14370);
float t14388 = (t14328+t14387);
float t14389 = (t14388*t14388);
float t14390 = (t14386+t14389);
float t14391 = sqrt(t14390);
float t14392 = (t14391*t14391);
float t14393 = sqrt(t14392);
float t14394 = (t14393-float(2.6));
float t14395 = (t14394/float(11.4));
vec4 t14396 = texture(s4,vec2(t14381,t14395));
t14365 = t14396.x;
t14366 = t14396.y;
t14367 = t14396.z;
float t14397;
if(t14364){
t14397 = 1;
} else {
t14397 = 0;
}
float t14398 = (t14396.x*t14396.x);
float t14399 = (t14396.y*t14396.y);
float t14400 = (t14398+t14399);
float t14401 = (t14396.z*t14396.z);
float t14402 = (t14400+t14401);
float t14403 = sqrt(t14402);
float t14404 = (t14403*t14403);
float t14405 = (t14404/float(3.0));
bool t14406 = (t14405<=1);
float t14407;
if(t14406){
t14407 = t14405;
} else {
t14407 = 1;
}
bool t14408 = (t14407>=0);
float t14409;
if(t14408){
t14409 = t14407;
} else {
t14409 = 0;
}
float t14410 = (t14397*t14409);
t14368 = t14410;
} else {
t14365 = 0;
t14366 = 0;
t14367 = 0;
t14368 = 0;
}
float t14411 = (1-t14349);
float t14412 = (t14346*t14411);
float t14413 = (t14349+t14412);
float t14414 = (1-t14413);
float t14415 = (t14368*t14414);
float t14416 = (t14365*t14415);
float t14417 = (t14353+t14416);
float t14418 = (-float(1.5));
float t14419 = (t14418*t180);
float t14420 = (t14419*t14313);
float t14421 = pow(t14332,float(2.5));
float t14422 = (t14420/t14421);
float t14423 = (t14422*float(0.16));
float t14424 = (t14311+t14423);
float t14425 = (t14424*float(0.16));
float t14426 = (t14313+t14425);
float t14427 = (t14426*t14426);
float t14428 = (t14419*t14320);
float t14429 = (t14428/t14421);
float t14430 = (t14429*float(0.16));
float t14431 = (t14318+t14430);
float t14432 = (t14431*float(0.16));
float t14433 = (t14320+t14432);
float t14434 = (t14433*t14433);
float t14435 = (t14427+t14434);
float t14436 = (t14419*t14328);
float t14437 = (t14436/t14421);
float t14438 = (t14437*float(0.16));
float t14439 = (t14326+t14438);
float t14440 = (t14439*float(0.16));
float t14441 = (t14328+t14440);
float t14442 = (t14441*t14441);
float t14443 = (t14435+t14442);
float t14444 = sqrt(t14443);
float t14445 = (t14444*t14444);
bool t14446 = (t14445<1);
float t14447 = (t14313*t14313);
float t14448 = (t14320*t14320);
float t14449 = (t14447+t14448);
float t14450 = (t14328*t14328);
float t14451 = (t14449+t14450);
float t14452 = sqrt(t14451);
float t14453 = (t14452*t14452);
bool t14454 = (t14453>1);
bool t14455 = (t14446&&t14454);
float t14456;
float t14457;
float t14458;
float t14459;
if(t14455){
t14456 = 0;
t14457 = 0;
t14458 = 0;
t14459 = 1;
} else {
t14456 = 0;
t14457 = 0;
t14458 = 0;
t14459 = 0;
}
float t14460 = (1-t14413);
float t14461 = (t14368*t14460);
float t14462 = (t14413+t14461);
float t14463 = (1-t14462);
float t14464 = (t14459*t14463);
float t14465 = (t14456*t14464);
float t14466 = (t14417+t14465);
bool t14467 = (t14320>0);
bool t14468 = (t14433>0);
bool t14469 = (!t14468);
bool t14470 = (t14467&&t14469);
bool t14471 = (!t14467);
bool t14472 = (t14468&&t14471);
bool t14473 = (t14470||t14472);
bool t14474 = (t14445<196);
bool t14475 = (t14445>float(6.76));
bool t14476 = (t14474&&t14475);
bool t14477 = (t14473&&t14476);
float t14478;
float t14479;
float t14480;
float t14481;
if(t14477){
float t14482 = (t14433/t14431);
float t14483 = (-t14482);
float t14484 = (t14424*t14483);
float t14485 = (t14426+t14484);
float t14486 = atan(t14485,t14441);
float t14487 = (u1.u0/30);
float t14488 = (t14486+t14487);
float t14489 = (2*3.1415927);
float t14490 = (t14488+t14489);
float t14491 = mod(t14490,2);
float t14492 = (t14491*3.1415927);
float t14493 = (2*3.1415927);
float t14494 = (t14492/t14493);
float t14495 = (t14485*t14485);
float t14496 = (t14431*t14483);
float t14497 = (t14433+t14496);
float t14498 = (t14497*t14497);
float t14499 = (t14495+t14498);
float t14500 = (t14439*t14483);
float t14501 = (t14441+t14500);
float t14502 = (t14501*t14501);
float t14503 = (t14499+t14502);
float t14504 = sqrt(t14503);
float t14505 = (t14504*t14504);
float t14506 = sqrt(t14505);
float t14507 = (t14506-float(2.6));
float t14508 = (t14507/float(11.4));
vec4 t14509 = texture(s4,vec2(t14494,t14508));
t14478 = t14509.x;
t14479 = t14509.y;
t14480 = t14509.z;
float t14510;
if(t14477){
t14510 = 1;
} else {
t14510 = 0;
}
float t14511 = (t14509.x*t14509.x);
float t14512 = (t14509.y*t14509.y);
float t14513 = (t14511+t14512);
float t14514 = (t14509.z*t14509.z);
float t14515 = (t14513+t14514);
float t14516 = sqrt(t14515);
float t14517 = (t14516*t14516);
float t14518 = (t14517/float(3.0));
bool t14519 = (t14518<=1);
float t14520;
if(t14519){
t14520 = t14518;
} else {
t14520 = 1;
}
bool t14521 = (t14520>=0);
float t14522;
if(t14521){
t14522 = t14520;
} else {
t14522 = 0;
}
float t14523 = (t14510*t14522);
t14481 = t14523;
} else {
t14478 = 0;
t14479 = 0;
t14480 = 0;
t14481 = 0;
}
float t14524 = (1-t14462);
float t14525 = (t14459*t14524);
float t14526 = (t14462+t14525);
float t14527 = (1-t14526);
float t14528 = (t14481*t14527);
float t14529 = (t14478*t14528);
float t14530 = (t14466+t14529);
float t14531 = (-float(1.5));
float t14532 = (t14531*t180);
float t14533 = (t14532*t14426);
float t14534 = pow(t14445,float(2.5));
float t14535 = (t14533/t14534);
float t14536 = (t14535*float(0.16));
float t14537 = (t14424+t14536);
float t14538 = (t14537*float(0.16));
float t14539 = (t14426+t14538);
float t14540 = (t14539*t14539);
float t14541 = (t14532*t14433);
float t14542 = (t14541/t14534);
float t14543 = (t14542*float(0.16));
float t14544 = (t14431+t14543);
float t14545 = (t14544*float(0.16));
float t14546 = (t14433+t14545);
float t14547 = (t14546*t14546);
float t14548 = (t14540+t14547);
float t14549 = (t14532*t14441);
float t14550 = (t14549/t14534);
float t14551 = (t14550*float(0.16));
float t14552 = (t14439+t14551);
float t14553 = (t14552*float(0.16));
float t14554 = (t14441+t14553);
float t14555 = (t14554*t14554);
float t14556 = (t14548+t14555);
float t14557 = sqrt(t14556);
float t14558 = (t14557*t14557);
bool t14559 = (t14558<1);
float t14560 = (t14426*t14426);
float t14561 = (t14433*t14433);
float t14562 = (t14560+t14561);
float t14563 = (t14441*t14441);
float t14564 = (t14562+t14563);
float t14565 = sqrt(t14564);
float t14566 = (t14565*t14565);
bool t14567 = (t14566>1);
bool t14568 = (t14559&&t14567);
float t14569;
float t14570;
float t14571;
float t14572;
if(t14568){
t14569 = 0;
t14570 = 0;
t14571 = 0;
t14572 = 1;
} else {
t14569 = 0;
t14570 = 0;
t14571 = 0;
t14572 = 0;
}
float t14573 = (1-t14526);
float t14574 = (t14481*t14573);
float t14575 = (t14526+t14574);
float t14576 = (1-t14575);
float t14577 = (t14572*t14576);
float t14578 = (t14569*t14577);
float t14579 = (t14530+t14578);
bool t14580 = (t14433>0);
bool t14581 = (t14546>0);
bool t14582 = (!t14581);
bool t14583 = (t14580&&t14582);
bool t14584 = (!t14580);
bool t14585 = (t14581&&t14584);
bool t14586 = (t14583||t14585);
bool t14587 = (t14558<196);
bool t14588 = (t14558>float(6.76));
bool t14589 = (t14587&&t14588);
bool t14590 = (t14586&&t14589);
float t14591;
float t14592;
float t14593;
float t14594;
if(t14590){
float t14595 = (t14546/t14544);
float t14596 = (-t14595);
float t14597 = (t14537*t14596);
float t14598 = (t14539+t14597);
float t14599 = atan(t14598,t14554);
float t14600 = (u1.u0/30);
float t14601 = (t14599+t14600);
float t14602 = (2*3.1415927);
float t14603 = (t14601+t14602);
float t14604 = mod(t14603,2);
float t14605 = (t14604*3.1415927);
float t14606 = (2*3.1415927);
float t14607 = (t14605/t14606);
float t14608 = (t14598*t14598);
float t14609 = (t14544*t14596);
float t14610 = (t14546+t14609);
float t14611 = (t14610*t14610);
float t14612 = (t14608+t14611);
float t14613 = (t14552*t14596);
float t14614 = (t14554+t14613);
float t14615 = (t14614*t14614);
float t14616 = (t14612+t14615);
float t14617 = sqrt(t14616);
float t14618 = (t14617*t14617);
float t14619 = sqrt(t14618);
float t14620 = (t14619-float(2.6));
float t14621 = (t14620/float(11.4));
vec4 t14622 = texture(s4,vec2(t14607,t14621));
t14591 = t14622.x;
t14592 = t14622.y;
t14593 = t14622.z;
float t14623;
if(t14590){
t14623 = 1;
} else {
t14623 = 0;
}
float t14624 = (t14622.x*t14622.x);
float t14625 = (t14622.y*t14622.y);
float t14626 = (t14624+t14625);
float t14627 = (t14622.z*t14622.z);
float t14628 = (t14626+t14627);
float t14629 = sqrt(t14628);
float t14630 = (t14629*t14629);
float t14631 = (t14630/float(3.0));
bool t14632 = (t14631<=1);
float t14633;
if(t14632){
t14633 = t14631;
} else {
t14633 = 1;
}
bool t14634 = (t14633>=0);
float t14635;
if(t14634){
t14635 = t14633;
} else {
t14635 = 0;
}
float t14636 = (t14623*t14635);
t14594 = t14636;
} else {
t14591 = 0;
t14592 = 0;
t14593 = 0;
t14594 = 0;
}
float t14637 = (1-t14575);
float t14638 = (t14572*t14637);
float t14639 = (t14575+t14638);
float t14640 = (1-t14639);
float t14641 = (t14594*t14640);
float t14642 = (t14591*t14641);
float t14643 = (t14579+t14642);
float t14644 = (-float(1.5));
float t14645 = (t14644*t180);
float t14646 = (t14645*t14539);
float t14647 = pow(t14558,float(2.5));
float t14648 = (t14646/t14647);
float t14649 = (t14648*float(0.16));
float t14650 = (t14537+t14649);
float t14651 = (t14650*float(0.16));
float t14652 = (t14539+t14651);
float t14653 = (t14652*t14652);
float t14654 = (t14645*t14546);
float t14655 = (t14654/t14647);
float t14656 = (t14655*float(0.16));
float t14657 = (t14544+t14656);
float t14658 = (t14657*float(0.16));
float t14659 = (t14546+t14658);
float t14660 = (t14659*t14659);
float t14661 = (t14653+t14660);
float t14662 = (t14645*t14554);
float t14663 = (t14662/t14647);
float t14664 = (t14663*float(0.16));
float t14665 = (t14552+t14664);
float t14666 = (t14665*float(0.16));
float t14667 = (t14554+t14666);
float t14668 = (t14667*t14667);
float t14669 = (t14661+t14668);
float t14670 = sqrt(t14669);
float t14671 = (t14670*t14670);
bool t14672 = (t14671<1);
float t14673 = (t14539*t14539);
float t14674 = (t14546*t14546);
float t14675 = (t14673+t14674);
float t14676 = (t14554*t14554);
float t14677 = (t14675+t14676);
float t14678 = sqrt(t14677);
float t14679 = (t14678*t14678);
bool t14680 = (t14679>1);
bool t14681 = (t14672&&t14680);
float t14682;
float t14683;
float t14684;
float t14685;
if(t14681){
t14682 = 0;
t14683 = 0;
t14684 = 0;
t14685 = 1;
} else {
t14682 = 0;
t14683 = 0;
t14684 = 0;
t14685 = 0;
}
float t14686 = (1-t14639);
float t14687 = (t14594*t14686);
float t14688 = (t14639+t14687);
float t14689 = (1-t14688);
float t14690 = (t14685*t14689);
float t14691 = (t14682*t14690);
float t14692 = (t14643+t14691);
bool t14693 = (t14546>0);
bool t14694 = (t14659>0);
bool t14695 = (!t14694);
bool t14696 = (t14693&&t14695);
bool t14697 = (!t14693);
bool t14698 = (t14694&&t14697);
bool t14699 = (t14696||t14698);
bool t14700 = (t14671<196);
bool t14701 = (t14671>float(6.76));
bool t14702 = (t14700&&t14701);
bool t14703 = (t14699&&t14702);
float t14704;
float t14705;
float t14706;
float t14707;
if(t14703){
float t14708 = (t14659/t14657);
float t14709 = (-t14708);
float t14710 = (t14650*t14709);
float t14711 = (t14652+t14710);
float t14712 = atan(t14711,t14667);
float t14713 = (u1.u0/30);
float t14714 = (t14712+t14713);
float t14715 = (2*3.1415927);
float t14716 = (t14714+t14715);
float t14717 = mod(t14716,2);
float t14718 = (t14717*3.1415927);
float t14719 = (2*3.1415927);
float t14720 = (t14718/t14719);
float t14721 = (t14711*t14711);
float t14722 = (t14657*t14709);
float t14723 = (t14659+t14722);
float t14724 = (t14723*t14723);
float t14725 = (t14721+t14724);
float t14726 = (t14665*t14709);
float t14727 = (t14667+t14726);
float t14728 = (t14727*t14727);
float t14729 = (t14725+t14728);
float t14730 = sqrt(t14729);
float t14731 = (t14730*t14730);
float t14732 = sqrt(t14731);
float t14733 = (t14732-float(2.6));
float t14734 = (t14733/float(11.4));
vec4 t14735 = texture(s4,vec2(t14720,t14734));
t14704 = t14735.x;
t14705 = t14735.y;
t14706 = t14735.z;
float t14736;
if(t14703){
t14736 = 1;
} else {
t14736 = 0;
}
float t14737 = (t14735.x*t14735.x);
float t14738 = (t14735.y*t14735.y);
float t14739 = (t14737+t14738);
float t14740 = (t14735.z*t14735.z);
float t14741 = (t14739+t14740);
float t14742 = sqrt(t14741);
float t14743 = (t14742*t14742);
float t14744 = (t14743/float(3.0));
bool t14745 = (t14744<=1);
float t14746;
if(t14745){
t14746 = t14744;
} else {
t14746 = 1;
}
bool t14747 = (t14746>=0);
float t14748;
if(t14747){
t14748 = t14746;
} else {
t14748 = 0;
}
float t14749 = (t14736*t14748);
t14707 = t14749;
} else {
t14704 = 0;
t14705 = 0;
t14706 = 0;
t14707 = 0;
}
float t14750 = (1-t14688);
float t14751 = (t14685*t14750);
float t14752 = (t14688+t14751);
float t14753 = (1-t14752);
float t14754 = (t14707*t14753);
float t14755 = (t14704*t14754);
float t14756 = (t14692+t14755);
float t14757 = (-float(1.5));
float t14758 = (t14757*t180);
float t14759 = (t14758*t14652);
float t14760 = pow(t14671,float(2.5));
float t14761 = (t14759/t14760);
float t14762 = (t14761*float(0.16));
float t14763 = (t14650+t14762);
float t14764 = (t14763*float(0.16));
float t14765 = (t14652+t14764);
float t14766 = (t14765*t14765);
float t14767 = (t14758*t14659);
float t14768 = (t14767/t14760);
float t14769 = (t14768*float(0.16));
float t14770 = (t14657+t14769);
float t14771 = (t14770*float(0.16));
float t14772 = (t14659+t14771);
float t14773 = (t14772*t14772);
float t14774 = (t14766+t14773);
float t14775 = (t14758*t14667);
float t14776 = (t14775/t14760);
float t14777 = (t14776*float(0.16));
float t14778 = (t14665+t14777);
float t14779 = (t14778*float(0.16));
float t14780 = (t14667+t14779);
float t14781 = (t14780*t14780);
float t14782 = (t14774+t14781);
float t14783 = sqrt(t14782);
float t14784 = (t14783*t14783);
bool t14785 = (t14784<1);
float t14786 = (t14652*t14652);
float t14787 = (t14659*t14659);
float t14788 = (t14786+t14787);
float t14789 = (t14667*t14667);
float t14790 = (t14788+t14789);
float t14791 = sqrt(t14790);
float t14792 = (t14791*t14791);
bool t14793 = (t14792>1);
bool t14794 = (t14785&&t14793);
float t14795;
float t14796;
float t14797;
float t14798;
if(t14794){
t14795 = 0;
t14796 = 0;
t14797 = 0;
t14798 = 1;
} else {
t14795 = 0;
t14796 = 0;
t14797 = 0;
t14798 = 0;
}
float t14799 = (1-t14752);
float t14800 = (t14707*t14799);
float t14801 = (t14752+t14800);
float t14802 = (1-t14801);
float t14803 = (t14798*t14802);
float t14804 = (t14795*t14803);
float t14805 = (t14756+t14804);
bool t14806 = (t14659>0);
bool t14807 = (t14772>0);
bool t14808 = (!t14807);
bool t14809 = (t14806&&t14808);
bool t14810 = (!t14806);
bool t14811 = (t14807&&t14810);
bool t14812 = (t14809||t14811);
bool t14813 = (t14784<196);
bool t14814 = (t14784>float(6.76));
bool t14815 = (t14813&&t14814);
bool t14816 = (t14812&&t14815);
float t14817;
float t14818;
float t14819;
float t14820;
if(t14816){
float t14821 = (t14772/t14770);
float t14822 = (-t14821);
float t14823 = (t14763*t14822);
float t14824 = (t14765+t14823);
float t14825 = atan(t14824,t14780);
float t14826 = (u1.u0/30);
float t14827 = (t14825+t14826);
float t14828 = (2*3.1415927);
float t14829 = (t14827+t14828);
float t14830 = mod(t14829,2);
float t14831 = (t14830*3.1415927);
float t14832 = (2*3.1415927);
float t14833 = (t14831/t14832);
float t14834 = (t14824*t14824);
float t14835 = (t14770*t14822);
float t14836 = (t14772+t14835);
float t14837 = (t14836*t14836);
float t14838 = (t14834+t14837);
float t14839 = (t14778*t14822);
float t14840 = (t14780+t14839);
float t14841 = (t14840*t14840);
float t14842 = (t14838+t14841);
float t14843 = sqrt(t14842);
float t14844 = (t14843*t14843);
float t14845 = sqrt(t14844);
float t14846 = (t14845-float(2.6));
float t14847 = (t14846/float(11.4));
vec4 t14848 = texture(s4,vec2(t14833,t14847));
t14817 = t14848.x;
t14818 = t14848.y;
t14819 = t14848.z;
float t14849;
if(t14816){
t14849 = 1;
} else {
t14849 = 0;
}
float t14850 = (t14848.x*t14848.x);
float t14851 = (t14848.y*t14848.y);
float t14852 = (t14850+t14851);
float t14853 = (t14848.z*t14848.z);
float t14854 = (t14852+t14853);
float t14855 = sqrt(t14854);
float t14856 = (t14855*t14855);
float t14857 = (t14856/float(3.0));
bool t14858 = (t14857<=1);
float t14859;
if(t14858){
t14859 = t14857;
} else {
t14859 = 1;
}
bool t14860 = (t14859>=0);
float t14861;
if(t14860){
t14861 = t14859;
} else {
t14861 = 0;
}
float t14862 = (t14849*t14861);
t14820 = t14862;
} else {
t14817 = 0;
t14818 = 0;
t14819 = 0;
t14820 = 0;
}
float t14863 = (1-t14801);
float t14864 = (t14798*t14863);
float t14865 = (t14801+t14864);
float t14866 = (1-t14865);
float t14867 = (t14820*t14866);
float t14868 = (t14817*t14867);
float t14869 = (t14805+t14868);
float t14870 = (-float(1.5));
float t14871 = (t14870*t180);
float t14872 = (t14871*t14765);
float t14873 = pow(t14784,float(2.5));
float t14874 = (t14872/t14873);
float t14875 = (t14874*float(0.16));
float t14876 = (t14763+t14875);
float t14877 = (t14876*float(0.16));
float t14878 = (t14765+t14877);
float t14879 = (t14878*t14878);
float t14880 = (t14871*t14772);
float t14881 = (t14880/t14873);
float t14882 = (t14881*float(0.16));
float t14883 = (t14770+t14882);
float t14884 = (t14883*float(0.16));
float t14885 = (t14772+t14884);
float t14886 = (t14885*t14885);
float t14887 = (t14879+t14886);
float t14888 = (t14871*t14780);
float t14889 = (t14888/t14873);
float t14890 = (t14889*float(0.16));
float t14891 = (t14778+t14890);
float t14892 = (t14891*float(0.16));
float t14893 = (t14780+t14892);
float t14894 = (t14893*t14893);
float t14895 = (t14887+t14894);
float t14896 = sqrt(t14895);
float t14897 = (t14896*t14896);
bool t14898 = (t14897<1);
float t14899 = (t14765*t14765);
float t14900 = (t14772*t14772);
float t14901 = (t14899+t14900);
float t14902 = (t14780*t14780);
float t14903 = (t14901+t14902);
float t14904 = sqrt(t14903);
float t14905 = (t14904*t14904);
bool t14906 = (t14905>1);
bool t14907 = (t14898&&t14906);
float t14908;
float t14909;
float t14910;
float t14911;
if(t14907){
t14908 = 0;
t14909 = 0;
t14910 = 0;
t14911 = 1;
} else {
t14908 = 0;
t14909 = 0;
t14910 = 0;
t14911 = 0;
}
float t14912 = (1-t14865);
float t14913 = (t14820*t14912);
float t14914 = (t14865+t14913);
float t14915 = (1-t14914);
float t14916 = (t14911*t14915);
float t14917 = (t14908*t14916);
float t14918 = (t14869+t14917);
bool t14919 = (t14772>0);
bool t14920 = (t14885>0);
bool t14921 = (!t14920);
bool t14922 = (t14919&&t14921);
bool t14923 = (!t14919);
bool t14924 = (t14920&&t14923);
bool t14925 = (t14922||t14924);
bool t14926 = (t14897<196);
bool t14927 = (t14897>float(6.76));
bool t14928 = (t14926&&t14927);
bool t14929 = (t14925&&t14928);
float t14930;
float t14931;
float t14932;
float t14933;
if(t14929){
float t14934 = (t14885/t14883);
float t14935 = (-t14934);
float t14936 = (t14876*t14935);
float t14937 = (t14878+t14936);
float t14938 = atan(t14937,t14893);
float t14939 = (u1.u0/30);
float t14940 = (t14938+t14939);
float t14941 = (2*3.1415927);
float t14942 = (t14940+t14941);
float t14943 = mod(t14942,2);
float t14944 = (t14943*3.1415927);
float t14945 = (2*3.1415927);
float t14946 = (t14944/t14945);
float t14947 = (t14937*t14937);
float t14948 = (t14883*t14935);
float t14949 = (t14885+t14948);
float t14950 = (t14949*t14949);
float t14951 = (t14947+t14950);
float t14952 = (t14891*t14935);
float t14953 = (t14893+t14952);
float t14954 = (t14953*t14953);
float t14955 = (t14951+t14954);
float t14956 = sqrt(t14955);
float t14957 = (t14956*t14956);
float t14958 = sqrt(t14957);
float t14959 = (t14958-float(2.6));
float t14960 = (t14959/float(11.4));
vec4 t14961 = texture(s4,vec2(t14946,t14960));
t14930 = t14961.x;
t14931 = t14961.y;
t14932 = t14961.z;
float t14962;
if(t14929){
t14962 = 1;
} else {
t14962 = 0;
}
float t14963 = (t14961.x*t14961.x);
float t14964 = (t14961.y*t14961.y);
float t14965 = (t14963+t14964);
float t14966 = (t14961.z*t14961.z);
float t14967 = (t14965+t14966);
float t14968 = sqrt(t14967);
float t14969 = (t14968*t14968);
float t14970 = (t14969/float(3.0));
bool t14971 = (t14970<=1);
float t14972;
if(t14971){
t14972 = t14970;
} else {
t14972 = 1;
}
bool t14973 = (t14972>=0);
float t14974;
if(t14973){
t14974 = t14972;
} else {
t14974 = 0;
}
float t14975 = (t14962*t14974);
t14933 = t14975;
} else {
t14930 = 0;
t14931 = 0;
t14932 = 0;
t14933 = 0;
}
float t14976 = (1-t14914);
float t14977 = (t14911*t14976);
float t14978 = (t14914+t14977);
float t14979 = (1-t14978);
float t14980 = (t14933*t14979);
float t14981 = (t14930*t14980);
float t14982 = (t14918+t14981);
float t14983 = (-float(1.5));
float t14984 = (t14983*t180);
float t14985 = (t14984*t14878);
float t14986 = pow(t14897,float(2.5));
float t14987 = (t14985/t14986);
float t14988 = (t14987*float(0.16));
float t14989 = (t14876+t14988);
float t14990 = (t14989*float(0.16));
float t14991 = (t14878+t14990);
float t14992 = (t14991*t14991);
float t14993 = (t14984*t14885);
float t14994 = (t14993/t14986);
float t14995 = (t14994*float(0.16));
float t14996 = (t14883+t14995);
float t14997 = (t14996*float(0.16));
float t14998 = (t14885+t14997);
float t14999 = (t14998*t14998);
float t15000 = (t14992+t14999);
float t15001 = (t14984*t14893);
float t15002 = (t15001/t14986);
float t15003 = (t15002*float(0.16));
float t15004 = (t14891+t15003);
float t15005 = (t15004*float(0.16));
float t15006 = (t14893+t15005);
float t15007 = (t15006*t15006);
float t15008 = (t15000+t15007);
float t15009 = sqrt(t15008);
float t15010 = (t15009*t15009);
bool t15011 = (t15010<1);
float t15012 = (t14878*t14878);
float t15013 = (t14885*t14885);
float t15014 = (t15012+t15013);
float t15015 = (t14893*t14893);
float t15016 = (t15014+t15015);
float t15017 = sqrt(t15016);
float t15018 = (t15017*t15017);
bool t15019 = (t15018>1);
bool t15020 = (t15011&&t15019);
float t15021;
float t15022;
float t15023;
float t15024;
if(t15020){
t15021 = 0;
t15022 = 0;
t15023 = 0;
t15024 = 1;
} else {
t15021 = 0;
t15022 = 0;
t15023 = 0;
t15024 = 0;
}
float t15025 = (1-t14978);
float t15026 = (t14933*t15025);
float t15027 = (t14978+t15026);
float t15028 = (1-t15027);
float t15029 = (t15024*t15028);
float t15030 = (t15021*t15029);
float t15031 = (t14982+t15030);
bool t15032 = (t14885>0);
bool t15033 = (t14998>0);
bool t15034 = (!t15033);
bool t15035 = (t15032&&t15034);
bool t15036 = (!t15032);
bool t15037 = (t15033&&t15036);
bool t15038 = (t15035||t15037);
bool t15039 = (t15010<196);
bool t15040 = (t15010>float(6.76));
bool t15041 = (t15039&&t15040);
bool t15042 = (t15038&&t15041);
float t15043;
float t15044;
float t15045;
float t15046;
if(t15042){
float t15047 = (t14998/t14996);
float t15048 = (-t15047);
float t15049 = (t14989*t15048);
float t15050 = (t14991+t15049);
float t15051 = atan(t15050,t15006);
float t15052 = (u1.u0/30);
float t15053 = (t15051+t15052);
float t15054 = (2*3.1415927);
float t15055 = (t15053+t15054);
float t15056 = mod(t15055,2);
float t15057 = (t15056*3.1415927);
float t15058 = (2*3.1415927);
float t15059 = (t15057/t15058);
float t15060 = (t15050*t15050);
float t15061 = (t14996*t15048);
float t15062 = (t14998+t15061);
float t15063 = (t15062*t15062);
float t15064 = (t15060+t15063);
float t15065 = (t15004*t15048);
float t15066 = (t15006+t15065);
float t15067 = (t15066*t15066);
float t15068 = (t15064+t15067);
float t15069 = sqrt(t15068);
float t15070 = (t15069*t15069);
float t15071 = sqrt(t15070);
float t15072 = (t15071-float(2.6));
float t15073 = (t15072/float(11.4));
vec4 t15074 = texture(s4,vec2(t15059,t15073));
t15043 = t15074.x;
t15044 = t15074.y;
t15045 = t15074.z;
float t15075;
if(t15042){
t15075 = 1;
} else {
t15075 = 0;
}
float t15076 = (t15074.x*t15074.x);
float t15077 = (t15074.y*t15074.y);
float t15078 = (t15076+t15077);
float t15079 = (t15074.z*t15074.z);
float t15080 = (t15078+t15079);
float t15081 = sqrt(t15080);
float t15082 = (t15081*t15081);
float t15083 = (t15082/float(3.0));
bool t15084 = (t15083<=1);
float t15085;
if(t15084){
t15085 = t15083;
} else {
t15085 = 1;
}
bool t15086 = (t15085>=0);
float t15087;
if(t15086){
t15087 = t15085;
} else {
t15087 = 0;
}
float t15088 = (t15075*t15087);
t15046 = t15088;
} else {
t15043 = 0;
t15044 = 0;
t15045 = 0;
t15046 = 0;
}
float t15089 = (1-t15027);
float t15090 = (t15024*t15089);
float t15091 = (t15027+t15090);
float t15092 = (1-t15091);
float t15093 = (t15046*t15092);
float t15094 = (t15043*t15093);
float t15095 = (t15031+t15094);
float t15096 = (-float(1.5));
float t15097 = (t15096*t180);
float t15098 = (t15097*t14991);
float t15099 = pow(t15010,float(2.5));
float t15100 = (t15098/t15099);
float t15101 = (t15100*float(0.16));
float t15102 = (t14989+t15101);
float t15103 = (t15102*float(0.16));
float t15104 = (t14991+t15103);
float t15105 = (t15104*t15104);
float t15106 = (t15097*t14998);
float t15107 = (t15106/t15099);
float t15108 = (t15107*float(0.16));
float t15109 = (t14996+t15108);
float t15110 = (t15109*float(0.16));
float t15111 = (t14998+t15110);
float t15112 = (t15111*t15111);
float t15113 = (t15105+t15112);
float t15114 = (t15097*t15006);
float t15115 = (t15114/t15099);
float t15116 = (t15115*float(0.16));
float t15117 = (t15004+t15116);
float t15118 = (t15117*float(0.16));
float t15119 = (t15006+t15118);
float t15120 = (t15119*t15119);
float t15121 = (t15113+t15120);
float t15122 = sqrt(t15121);
float t15123 = (t15122*t15122);
bool t15124 = (t15123<1);
float t15125 = (t14991*t14991);
float t15126 = (t14998*t14998);
float t15127 = (t15125+t15126);
float t15128 = (t15006*t15006);
float t15129 = (t15127+t15128);
float t15130 = sqrt(t15129);
float t15131 = (t15130*t15130);
bool t15132 = (t15131>1);
bool t15133 = (t15124&&t15132);
float t15134;
float t15135;
float t15136;
float t15137;
if(t15133){
t15134 = 0;
t15135 = 0;
t15136 = 0;
t15137 = 1;
} else {
t15134 = 0;
t15135 = 0;
t15136 = 0;
t15137 = 0;
}
float t15138 = (1-t15091);
float t15139 = (t15046*t15138);
float t15140 = (t15091+t15139);
float t15141 = (1-t15140);
float t15142 = (t15137*t15141);
float t15143 = (t15134*t15142);
float t15144 = (t15095+t15143);
bool t15145 = (t14998>0);
bool t15146 = (t15111>0);
bool t15147 = (!t15146);
bool t15148 = (t15145&&t15147);
bool t15149 = (!t15145);
bool t15150 = (t15146&&t15149);
bool t15151 = (t15148||t15150);
bool t15152 = (t15123<196);
bool t15153 = (t15123>float(6.76));
bool t15154 = (t15152&&t15153);
bool t15155 = (t15151&&t15154);
float t15156;
float t15157;
float t15158;
float t15159;
if(t15155){
float t15160 = (t15111/t15109);
float t15161 = (-t15160);
float t15162 = (t15102*t15161);
float t15163 = (t15104+t15162);
float t15164 = atan(t15163,t15119);
float t15165 = (u1.u0/30);
float t15166 = (t15164+t15165);
float t15167 = (2*3.1415927);
float t15168 = (t15166+t15167);
float t15169 = mod(t15168,2);
float t15170 = (t15169*3.1415927);
float t15171 = (2*3.1415927);
float t15172 = (t15170/t15171);
float t15173 = (t15163*t15163);
float t15174 = (t15109*t15161);
float t15175 = (t15111+t15174);
float t15176 = (t15175*t15175);
float t15177 = (t15173+t15176);
float t15178 = (t15117*t15161);
float t15179 = (t15119+t15178);
float t15180 = (t15179*t15179);
float t15181 = (t15177+t15180);
float t15182 = sqrt(t15181);
float t15183 = (t15182*t15182);
float t15184 = sqrt(t15183);
float t15185 = (t15184-float(2.6));
float t15186 = (t15185/float(11.4));
vec4 t15187 = texture(s4,vec2(t15172,t15186));
t15156 = t15187.x;
t15157 = t15187.y;
t15158 = t15187.z;
float t15188;
if(t15155){
t15188 = 1;
} else {
t15188 = 0;
}
float t15189 = (t15187.x*t15187.x);
float t15190 = (t15187.y*t15187.y);
float t15191 = (t15189+t15190);
float t15192 = (t15187.z*t15187.z);
float t15193 = (t15191+t15192);
float t15194 = sqrt(t15193);
float t15195 = (t15194*t15194);
float t15196 = (t15195/float(3.0));
bool t15197 = (t15196<=1);
float t15198;
if(t15197){
t15198 = t15196;
} else {
t15198 = 1;
}
bool t15199 = (t15198>=0);
float t15200;
if(t15199){
t15200 = t15198;
} else {
t15200 = 0;
}
float t15201 = (t15188*t15200);
t15159 = t15201;
} else {
t15156 = 0;
t15157 = 0;
t15158 = 0;
t15159 = 0;
}
float t15202 = (1-t15140);
float t15203 = (t15137*t15202);
float t15204 = (t15140+t15203);
float t15205 = (1-t15204);
float t15206 = (t15159*t15205);
float t15207 = (t15156*t15206);
float t15208 = (t15144+t15207);
float t15209 = (-float(1.5));
float t15210 = (t15209*t180);
float t15211 = (t15210*t15104);
float t15212 = pow(t15123,float(2.5));
float t15213 = (t15211/t15212);
float t15214 = (t15213*float(0.16));
float t15215 = (t15102+t15214);
float t15216 = (t15215*float(0.16));
float t15217 = (t15104+t15216);
float t15218 = (t15217*t15217);
float t15219 = (t15210*t15111);
float t15220 = (t15219/t15212);
float t15221 = (t15220*float(0.16));
float t15222 = (t15109+t15221);
float t15223 = (t15222*float(0.16));
float t15224 = (t15111+t15223);
float t15225 = (t15224*t15224);
float t15226 = (t15218+t15225);
float t15227 = (t15210*t15119);
float t15228 = (t15227/t15212);
float t15229 = (t15228*float(0.16));
float t15230 = (t15117+t15229);
float t15231 = (t15230*float(0.16));
float t15232 = (t15119+t15231);
float t15233 = (t15232*t15232);
float t15234 = (t15226+t15233);
float t15235 = sqrt(t15234);
float t15236 = (t15235*t15235);
bool t15237 = (t15236<1);
float t15238 = (t15104*t15104);
float t15239 = (t15111*t15111);
float t15240 = (t15238+t15239);
float t15241 = (t15119*t15119);
float t15242 = (t15240+t15241);
float t15243 = sqrt(t15242);
float t15244 = (t15243*t15243);
bool t15245 = (t15244>1);
bool t15246 = (t15237&&t15245);
float t15247;
float t15248;
float t15249;
float t15250;
if(t15246){
t15247 = 0;
t15248 = 0;
t15249 = 0;
t15250 = 1;
} else {
t15247 = 0;
t15248 = 0;
t15249 = 0;
t15250 = 0;
}
float t15251 = (1-t15204);
float t15252 = (t15159*t15251);
float t15253 = (t15204+t15252);
float t15254 = (1-t15253);
float t15255 = (t15250*t15254);
float t15256 = (t15247*t15255);
float t15257 = (t15208+t15256);
bool t15258 = (t15111>0);
bool t15259 = (t15224>0);
bool t15260 = (!t15259);
bool t15261 = (t15258&&t15260);
bool t15262 = (!t15258);
bool t15263 = (t15259&&t15262);
bool t15264 = (t15261||t15263);
bool t15265 = (t15236<196);
bool t15266 = (t15236>float(6.76));
bool t15267 = (t15265&&t15266);
bool t15268 = (t15264&&t15267);
float t15269;
float t15270;
float t15271;
float t15272;
if(t15268){
float t15273 = (t15224/t15222);
float t15274 = (-t15273);
float t15275 = (t15215*t15274);
float t15276 = (t15217+t15275);
float t15277 = atan(t15276,t15232);
float t15278 = (u1.u0/30);
float t15279 = (t15277+t15278);
float t15280 = (2*3.1415927);
float t15281 = (t15279+t15280);
float t15282 = mod(t15281,2);
float t15283 = (t15282*3.1415927);
float t15284 = (2*3.1415927);
float t15285 = (t15283/t15284);
float t15286 = (t15276*t15276);
float t15287 = (t15222*t15274);
float t15288 = (t15224+t15287);
float t15289 = (t15288*t15288);
float t15290 = (t15286+t15289);
float t15291 = (t15230*t15274);
float t15292 = (t15232+t15291);
float t15293 = (t15292*t15292);
float t15294 = (t15290+t15293);
float t15295 = sqrt(t15294);
float t15296 = (t15295*t15295);
float t15297 = sqrt(t15296);
float t15298 = (t15297-float(2.6));
float t15299 = (t15298/float(11.4));
vec4 t15300 = texture(s4,vec2(t15285,t15299));
t15269 = t15300.x;
t15270 = t15300.y;
t15271 = t15300.z;
float t15301;
if(t15268){
t15301 = 1;
} else {
t15301 = 0;
}
float t15302 = (t15300.x*t15300.x);
float t15303 = (t15300.y*t15300.y);
float t15304 = (t15302+t15303);
float t15305 = (t15300.z*t15300.z);
float t15306 = (t15304+t15305);
float t15307 = sqrt(t15306);
float t15308 = (t15307*t15307);
float t15309 = (t15308/float(3.0));
bool t15310 = (t15309<=1);
float t15311;
if(t15310){
t15311 = t15309;
} else {
t15311 = 1;
}
bool t15312 = (t15311>=0);
float t15313;
if(t15312){
t15313 = t15311;
} else {
t15313 = 0;
}
float t15314 = (t15301*t15313);
t15272 = t15314;
} else {
t15269 = 0;
t15270 = 0;
t15271 = 0;
t15272 = 0;
}
float t15315 = (1-t15253);
float t15316 = (t15250*t15315);
float t15317 = (t15253+t15316);
float t15318 = (1-t15317);
float t15319 = (t15272*t15318);
float t15320 = (t15269*t15319);
float t15321 = (t15257+t15320);
float t15322 = (-float(1.5));
float t15323 = (t15322*t180);
float t15324 = (t15323*t15217);
float t15325 = pow(t15236,float(2.5));
float t15326 = (t15324/t15325);
float t15327 = (t15326*float(0.16));
float t15328 = (t15215+t15327);
float t15329 = (t15328*float(0.16));
float t15330 = (t15217+t15329);
float t15331 = (t15330*t15330);
float t15332 = (t15323*t15224);
float t15333 = (t15332/t15325);
float t15334 = (t15333*float(0.16));
float t15335 = (t15222+t15334);
float t15336 = (t15335*float(0.16));
float t15337 = (t15224+t15336);
float t15338 = (t15337*t15337);
float t15339 = (t15331+t15338);
float t15340 = (t15323*t15232);
float t15341 = (t15340/t15325);
float t15342 = (t15341*float(0.16));
float t15343 = (t15230+t15342);
float t15344 = (t15343*float(0.16));
float t15345 = (t15232+t15344);
float t15346 = (t15345*t15345);
float t15347 = (t15339+t15346);
float t15348 = sqrt(t15347);
float t15349 = (t15348*t15348);
bool t15350 = (t15349<1);
float t15351 = (t15217*t15217);
float t15352 = (t15224*t15224);
float t15353 = (t15351+t15352);
float t15354 = (t15232*t15232);
float t15355 = (t15353+t15354);
float t15356 = sqrt(t15355);
float t15357 = (t15356*t15356);
bool t15358 = (t15357>1);
bool t15359 = (t15350&&t15358);
float t15360;
float t15361;
float t15362;
float t15363;
if(t15359){
t15360 = 0;
t15361 = 0;
t15362 = 0;
t15363 = 1;
} else {
t15360 = 0;
t15361 = 0;
t15362 = 0;
t15363 = 0;
}
float t15364 = (1-t15317);
float t15365 = (t15272*t15364);
float t15366 = (t15317+t15365);
float t15367 = (1-t15366);
float t15368 = (t15363*t15367);
float t15369 = (t15360*t15368);
float t15370 = (t15321+t15369);
bool t15371 = (t15224>0);
bool t15372 = (t15337>0);
bool t15373 = (!t15372);
bool t15374 = (t15371&&t15373);
bool t15375 = (!t15371);
bool t15376 = (t15372&&t15375);
bool t15377 = (t15374||t15376);
bool t15378 = (t15349<196);
bool t15379 = (t15349>float(6.76));
bool t15380 = (t15378&&t15379);
bool t15381 = (t15377&&t15380);
float t15382;
float t15383;
float t15384;
float t15385;
if(t15381){
float t15386 = (t15337/t15335);
float t15387 = (-t15386);
float t15388 = (t15328*t15387);
float t15389 = (t15330+t15388);
float t15390 = atan(t15389,t15345);
float t15391 = (u1.u0/30);
float t15392 = (t15390+t15391);
float t15393 = (2*3.1415927);
float t15394 = (t15392+t15393);
float t15395 = mod(t15394,2);
float t15396 = (t15395*3.1415927);
float t15397 = (2*3.1415927);
float t15398 = (t15396/t15397);
float t15399 = (t15389*t15389);
float t15400 = (t15335*t15387);
float t15401 = (t15337+t15400);
float t15402 = (t15401*t15401);
float t15403 = (t15399+t15402);
float t15404 = (t15343*t15387);
float t15405 = (t15345+t15404);
float t15406 = (t15405*t15405);
float t15407 = (t15403+t15406);
float t15408 = sqrt(t15407);
float t15409 = (t15408*t15408);
float t15410 = sqrt(t15409);
float t15411 = (t15410-float(2.6));
float t15412 = (t15411/float(11.4));
vec4 t15413 = texture(s4,vec2(t15398,t15412));
t15382 = t15413.x;
t15383 = t15413.y;
t15384 = t15413.z;
float t15414;
if(t15381){
t15414 = 1;
} else {
t15414 = 0;
}
float t15415 = (t15413.x*t15413.x);
float t15416 = (t15413.y*t15413.y);
float t15417 = (t15415+t15416);
float t15418 = (t15413.z*t15413.z);
float t15419 = (t15417+t15418);
float t15420 = sqrt(t15419);
float t15421 = (t15420*t15420);
float t15422 = (t15421/float(3.0));
bool t15423 = (t15422<=1);
float t15424;
if(t15423){
t15424 = t15422;
} else {
t15424 = 1;
}
bool t15425 = (t15424>=0);
float t15426;
if(t15425){
t15426 = t15424;
} else {
t15426 = 0;
}
float t15427 = (t15414*t15426);
t15385 = t15427;
} else {
t15382 = 0;
t15383 = 0;
t15384 = 0;
t15385 = 0;
}
float t15428 = (1-t15366);
float t15429 = (t15363*t15428);
float t15430 = (t15366+t15429);
float t15431 = (1-t15430);
float t15432 = (t15385*t15431);
float t15433 = (t15382*t15432);
float t15434 = (t15370+t15433);
float t15435 = (-float(1.5));
float t15436 = (t15435*t180);
float t15437 = (t15436*t15330);
float t15438 = pow(t15349,float(2.5));
float t15439 = (t15437/t15438);
float t15440 = (t15439*float(0.16));
float t15441 = (t15328+t15440);
float t15442 = (t15441*float(0.16));
float t15443 = (t15330+t15442);
float t15444 = (t15443*t15443);
float t15445 = (t15436*t15337);
float t15446 = (t15445/t15438);
float t15447 = (t15446*float(0.16));
float t15448 = (t15335+t15447);
float t15449 = (t15448*float(0.16));
float t15450 = (t15337+t15449);
float t15451 = (t15450*t15450);
float t15452 = (t15444+t15451);
float t15453 = (t15436*t15345);
float t15454 = (t15453/t15438);
float t15455 = (t15454*float(0.16));
float t15456 = (t15343+t15455);
float t15457 = (t15456*float(0.16));
float t15458 = (t15345+t15457);
float t15459 = (t15458*t15458);
float t15460 = (t15452+t15459);
float t15461 = sqrt(t15460);
float t15462 = (t15461*t15461);
bool t15463 = (t15462<1);
float t15464 = (t15330*t15330);
float t15465 = (t15337*t15337);
float t15466 = (t15464+t15465);
float t15467 = (t15345*t15345);
float t15468 = (t15466+t15467);
float t15469 = sqrt(t15468);
float t15470 = (t15469*t15469);
bool t15471 = (t15470>1);
bool t15472 = (t15463&&t15471);
float t15473;
float t15474;
float t15475;
float t15476;
if(t15472){
t15473 = 0;
t15474 = 0;
t15475 = 0;
t15476 = 1;
} else {
t15473 = 0;
t15474 = 0;
t15475 = 0;
t15476 = 0;
}
float t15477 = (1-t15430);
float t15478 = (t15385*t15477);
float t15479 = (t15430+t15478);
float t15480 = (1-t15479);
float t15481 = (t15476*t15480);
float t15482 = (t15473*t15481);
float t15483 = (t15434+t15482);
bool t15484 = (t15337>0);
bool t15485 = (t15450>0);
bool t15486 = (!t15485);
bool t15487 = (t15484&&t15486);
bool t15488 = (!t15484);
bool t15489 = (t15485&&t15488);
bool t15490 = (t15487||t15489);
bool t15491 = (t15462<196);
bool t15492 = (t15462>float(6.76));
bool t15493 = (t15491&&t15492);
bool t15494 = (t15490&&t15493);
float t15495;
float t15496;
float t15497;
float t15498;
if(t15494){
float t15499 = (t15450/t15448);
float t15500 = (-t15499);
float t15501 = (t15441*t15500);
float t15502 = (t15443+t15501);
float t15503 = atan(t15502,t15458);
float t15504 = (u1.u0/30);
float t15505 = (t15503+t15504);
float t15506 = (2*3.1415927);
float t15507 = (t15505+t15506);
float t15508 = mod(t15507,2);
float t15509 = (t15508*3.1415927);
float t15510 = (2*3.1415927);
float t15511 = (t15509/t15510);
float t15512 = (t15502*t15502);
float t15513 = (t15448*t15500);
float t15514 = (t15450+t15513);
float t15515 = (t15514*t15514);
float t15516 = (t15512+t15515);
float t15517 = (t15456*t15500);
float t15518 = (t15458+t15517);
float t15519 = (t15518*t15518);
float t15520 = (t15516+t15519);
float t15521 = sqrt(t15520);
float t15522 = (t15521*t15521);
float t15523 = sqrt(t15522);
float t15524 = (t15523-float(2.6));
float t15525 = (t15524/float(11.4));
vec4 t15526 = texture(s4,vec2(t15511,t15525));
t15495 = t15526.x;
t15496 = t15526.y;
t15497 = t15526.z;
float t15527;
if(t15494){
t15527 = 1;
} else {
t15527 = 0;
}
float t15528 = (t15526.x*t15526.x);
float t15529 = (t15526.y*t15526.y);
float t15530 = (t15528+t15529);
float t15531 = (t15526.z*t15526.z);
float t15532 = (t15530+t15531);
float t15533 = sqrt(t15532);
float t15534 = (t15533*t15533);
float t15535 = (t15534/float(3.0));
bool t15536 = (t15535<=1);
float t15537;
if(t15536){
t15537 = t15535;
} else {
t15537 = 1;
}
bool t15538 = (t15537>=0);
float t15539;
if(t15538){
t15539 = t15537;
} else {
t15539 = 0;
}
float t15540 = (t15527*t15539);
t15498 = t15540;
} else {
t15495 = 0;
t15496 = 0;
t15497 = 0;
t15498 = 0;
}
float t15541 = (1-t15479);
float t15542 = (t15476*t15541);
float t15543 = (t15479+t15542);
float t15544 = (1-t15543);
float t15545 = (t15498*t15544);
float t15546 = (t15495*t15545);
float t15547 = (t15483+t15546);
float t15548 = (-float(1.5));
float t15549 = (t15548*t180);
float t15550 = (t15549*t15443);
float t15551 = pow(t15462,float(2.5));
float t15552 = (t15550/t15551);
float t15553 = (t15552*float(0.16));
float t15554 = (t15441+t15553);
float t15555 = (t15554*float(0.16));
float t15556 = (t15443+t15555);
float t15557 = (t15556*t15556);
float t15558 = (t15549*t15450);
float t15559 = (t15558/t15551);
float t15560 = (t15559*float(0.16));
float t15561 = (t15448+t15560);
float t15562 = (t15561*float(0.16));
float t15563 = (t15450+t15562);
float t15564 = (t15563*t15563);
float t15565 = (t15557+t15564);
float t15566 = (t15549*t15458);
float t15567 = (t15566/t15551);
float t15568 = (t15567*float(0.16));
float t15569 = (t15456+t15568);
float t15570 = (t15569*float(0.16));
float t15571 = (t15458+t15570);
float t15572 = (t15571*t15571);
float t15573 = (t15565+t15572);
float t15574 = sqrt(t15573);
float t15575 = (t15574*t15574);
bool t15576 = (t15575<1);
float t15577 = (t15443*t15443);
float t15578 = (t15450*t15450);
float t15579 = (t15577+t15578);
float t15580 = (t15458*t15458);
float t15581 = (t15579+t15580);
float t15582 = sqrt(t15581);
float t15583 = (t15582*t15582);
bool t15584 = (t15583>1);
bool t15585 = (t15576&&t15584);
float t15586;
float t15587;
float t15588;
float t15589;
if(t15585){
t15586 = 0;
t15587 = 0;
t15588 = 0;
t15589 = 1;
} else {
t15586 = 0;
t15587 = 0;
t15588 = 0;
t15589 = 0;
}
float t15590 = (1-t15543);
float t15591 = (t15498*t15590);
float t15592 = (t15543+t15591);
float t15593 = (1-t15592);
float t15594 = (t15589*t15593);
float t15595 = (t15586*t15594);
float t15596 = (t15547+t15595);
bool t15597 = (t15450>0);
bool t15598 = (t15563>0);
bool t15599 = (!t15598);
bool t15600 = (t15597&&t15599);
bool t15601 = (!t15597);
bool t15602 = (t15598&&t15601);
bool t15603 = (t15600||t15602);
bool t15604 = (t15575<196);
bool t15605 = (t15575>float(6.76));
bool t15606 = (t15604&&t15605);
bool t15607 = (t15603&&t15606);
float t15608;
float t15609;
float t15610;
float t15611;
if(t15607){
float t15612 = (t15563/t15561);
float t15613 = (-t15612);
float t15614 = (t15554*t15613);
float t15615 = (t15556+t15614);
float t15616 = atan(t15615,t15571);
float t15617 = (u1.u0/30);
float t15618 = (t15616+t15617);
float t15619 = (2*3.1415927);
float t15620 = (t15618+t15619);
float t15621 = mod(t15620,2);
float t15622 = (t15621*3.1415927);
float t15623 = (2*3.1415927);
float t15624 = (t15622/t15623);
float t15625 = (t15615*t15615);
float t15626 = (t15561*t15613);
float t15627 = (t15563+t15626);
float t15628 = (t15627*t15627);
float t15629 = (t15625+t15628);
float t15630 = (t15569*t15613);
float t15631 = (t15571+t15630);
float t15632 = (t15631*t15631);
float t15633 = (t15629+t15632);
float t15634 = sqrt(t15633);
float t15635 = (t15634*t15634);
float t15636 = sqrt(t15635);
float t15637 = (t15636-float(2.6));
float t15638 = (t15637/float(11.4));
vec4 t15639 = texture(s4,vec2(t15624,t15638));
t15608 = t15639.x;
t15609 = t15639.y;
t15610 = t15639.z;
float t15640;
if(t15607){
t15640 = 1;
} else {
t15640 = 0;
}
float t15641 = (t15639.x*t15639.x);
float t15642 = (t15639.y*t15639.y);
float t15643 = (t15641+t15642);
float t15644 = (t15639.z*t15639.z);
float t15645 = (t15643+t15644);
float t15646 = sqrt(t15645);
float t15647 = (t15646*t15646);
float t15648 = (t15647/float(3.0));
bool t15649 = (t15648<=1);
float t15650;
if(t15649){
t15650 = t15648;
} else {
t15650 = 1;
}
bool t15651 = (t15650>=0);
float t15652;
if(t15651){
t15652 = t15650;
} else {
t15652 = 0;
}
float t15653 = (t15640*t15652);
t15611 = t15653;
} else {
t15608 = 0;
t15609 = 0;
t15610 = 0;
t15611 = 0;
}
float t15654 = (1-t15592);
float t15655 = (t15589*t15654);
float t15656 = (t15592+t15655);
float t15657 = (1-t15656);
float t15658 = (t15611*t15657);
float t15659 = (t15608*t15658);
float t15660 = (t15596+t15659);
float t15661 = (-float(1.5));
float t15662 = (t15661*t180);
float t15663 = (t15662*t15556);
float t15664 = pow(t15575,float(2.5));
float t15665 = (t15663/t15664);
float t15666 = (t15665*float(0.16));
float t15667 = (t15554+t15666);
float t15668 = (t15667*float(0.16));
float t15669 = (t15556+t15668);
float t15670 = (t15669*t15669);
float t15671 = (t15662*t15563);
float t15672 = (t15671/t15664);
float t15673 = (t15672*float(0.16));
float t15674 = (t15561+t15673);
float t15675 = (t15674*float(0.16));
float t15676 = (t15563+t15675);
float t15677 = (t15676*t15676);
float t15678 = (t15670+t15677);
float t15679 = (t15662*t15571);
float t15680 = (t15679/t15664);
float t15681 = (t15680*float(0.16));
float t15682 = (t15569+t15681);
float t15683 = (t15682*float(0.16));
float t15684 = (t15571+t15683);
float t15685 = (t15684*t15684);
float t15686 = (t15678+t15685);
float t15687 = sqrt(t15686);
float t15688 = (t15687*t15687);
bool t15689 = (t15688<1);
float t15690 = (t15556*t15556);
float t15691 = (t15563*t15563);
float t15692 = (t15690+t15691);
float t15693 = (t15571*t15571);
float t15694 = (t15692+t15693);
float t15695 = sqrt(t15694);
float t15696 = (t15695*t15695);
bool t15697 = (t15696>1);
bool t15698 = (t15689&&t15697);
float t15699;
float t15700;
float t15701;
float t15702;
if(t15698){
t15699 = 0;
t15700 = 0;
t15701 = 0;
t15702 = 1;
} else {
t15699 = 0;
t15700 = 0;
t15701 = 0;
t15702 = 0;
}
float t15703 = (1-t15656);
float t15704 = (t15611*t15703);
float t15705 = (t15656+t15704);
float t15706 = (1-t15705);
float t15707 = (t15702*t15706);
float t15708 = (t15699*t15707);
float t15709 = (t15660+t15708);
bool t15710 = (t15563>0);
bool t15711 = (t15676>0);
bool t15712 = (!t15711);
bool t15713 = (t15710&&t15712);
bool t15714 = (!t15710);
bool t15715 = (t15711&&t15714);
bool t15716 = (t15713||t15715);
bool t15717 = (t15688<196);
bool t15718 = (t15688>float(6.76));
bool t15719 = (t15717&&t15718);
bool t15720 = (t15716&&t15719);
float t15721;
float t15722;
float t15723;
float t15724;
if(t15720){
float t15725 = (t15676/t15674);
float t15726 = (-t15725);
float t15727 = (t15667*t15726);
float t15728 = (t15669+t15727);
float t15729 = atan(t15728,t15684);
float t15730 = (u1.u0/30);
float t15731 = (t15729+t15730);
float t15732 = (2*3.1415927);
float t15733 = (t15731+t15732);
float t15734 = mod(t15733,2);
float t15735 = (t15734*3.1415927);
float t15736 = (2*3.1415927);
float t15737 = (t15735/t15736);
float t15738 = (t15728*t15728);
float t15739 = (t15674*t15726);
float t15740 = (t15676+t15739);
float t15741 = (t15740*t15740);
float t15742 = (t15738+t15741);
float t15743 = (t15682*t15726);
float t15744 = (t15684+t15743);
float t15745 = (t15744*t15744);
float t15746 = (t15742+t15745);
float t15747 = sqrt(t15746);
float t15748 = (t15747*t15747);
float t15749 = sqrt(t15748);
float t15750 = (t15749-float(2.6));
float t15751 = (t15750/float(11.4));
vec4 t15752 = texture(s4,vec2(t15737,t15751));
t15721 = t15752.x;
t15722 = t15752.y;
t15723 = t15752.z;
float t15753;
if(t15720){
t15753 = 1;
} else {
t15753 = 0;
}
float t15754 = (t15752.x*t15752.x);
float t15755 = (t15752.y*t15752.y);
float t15756 = (t15754+t15755);
float t15757 = (t15752.z*t15752.z);
float t15758 = (t15756+t15757);
float t15759 = sqrt(t15758);
float t15760 = (t15759*t15759);
float t15761 = (t15760/float(3.0));
bool t15762 = (t15761<=1);
float t15763;
if(t15762){
t15763 = t15761;
} else {
t15763 = 1;
}
bool t15764 = (t15763>=0);
float t15765;
if(t15764){
t15765 = t15763;
} else {
t15765 = 0;
}
float t15766 = (t15753*t15765);
t15724 = t15766;
} else {
t15721 = 0;
t15722 = 0;
t15723 = 0;
t15724 = 0;
}
float t15767 = (1-t15705);
float t15768 = (t15702*t15767);
float t15769 = (t15705+t15768);
float t15770 = (1-t15769);
float t15771 = (t15724*t15770);
float t15772 = (t15721*t15771);
float t15773 = (t15709+t15772);
float t15774 = (-float(1.5));
float t15775 = (t15774*t180);
float t15776 = (t15775*t15669);
float t15777 = pow(t15688,float(2.5));
float t15778 = (t15776/t15777);
float t15779 = (t15778*float(0.16));
float t15780 = (t15667+t15779);
float t15781 = (t15780*float(0.16));
float t15782 = (t15669+t15781);
float t15783 = (t15782*t15782);
float t15784 = (t15775*t15676);
float t15785 = (t15784/t15777);
float t15786 = (t15785*float(0.16));
float t15787 = (t15674+t15786);
float t15788 = (t15787*float(0.16));
float t15789 = (t15676+t15788);
float t15790 = (t15789*t15789);
float t15791 = (t15783+t15790);
float t15792 = (t15775*t15684);
float t15793 = (t15792/t15777);
float t15794 = (t15793*float(0.16));
float t15795 = (t15682+t15794);
float t15796 = (t15795*float(0.16));
float t15797 = (t15684+t15796);
float t15798 = (t15797*t15797);
float t15799 = (t15791+t15798);
float t15800 = sqrt(t15799);
float t15801 = (t15800*t15800);
bool t15802 = (t15801<1);
float t15803 = (t15669*t15669);
float t15804 = (t15676*t15676);
float t15805 = (t15803+t15804);
float t15806 = (t15684*t15684);
float t15807 = (t15805+t15806);
float t15808 = sqrt(t15807);
float t15809 = (t15808*t15808);
bool t15810 = (t15809>1);
bool t15811 = (t15802&&t15810);
float t15812;
float t15813;
float t15814;
float t15815;
if(t15811){
t15812 = 0;
t15813 = 0;
t15814 = 0;
t15815 = 1;
} else {
t15812 = 0;
t15813 = 0;
t15814 = 0;
t15815 = 0;
}
float t15816 = (1-t15769);
float t15817 = (t15724*t15816);
float t15818 = (t15769+t15817);
float t15819 = (1-t15818);
float t15820 = (t15815*t15819);
float t15821 = (t15812*t15820);
float t15822 = (t15773+t15821);
bool t15823 = (t15676>0);
bool t15824 = (t15789>0);
bool t15825 = (!t15824);
bool t15826 = (t15823&&t15825);
bool t15827 = (!t15823);
bool t15828 = (t15824&&t15827);
bool t15829 = (t15826||t15828);
bool t15830 = (t15801<196);
bool t15831 = (t15801>float(6.76));
bool t15832 = (t15830&&t15831);
bool t15833 = (t15829&&t15832);
float t15834;
float t15835;
float t15836;
float t15837;
if(t15833){
float t15838 = (t15789/t15787);
float t15839 = (-t15838);
float t15840 = (t15780*t15839);
float t15841 = (t15782+t15840);
float t15842 = atan(t15841,t15797);
float t15843 = (u1.u0/30);
float t15844 = (t15842+t15843);
float t15845 = (2*3.1415927);
float t15846 = (t15844+t15845);
float t15847 = mod(t15846,2);
float t15848 = (t15847*3.1415927);
float t15849 = (2*3.1415927);
float t15850 = (t15848/t15849);
float t15851 = (t15841*t15841);
float t15852 = (t15787*t15839);
float t15853 = (t15789+t15852);
float t15854 = (t15853*t15853);
float t15855 = (t15851+t15854);
float t15856 = (t15795*t15839);
float t15857 = (t15797+t15856);
float t15858 = (t15857*t15857);
float t15859 = (t15855+t15858);
float t15860 = sqrt(t15859);
float t15861 = (t15860*t15860);
float t15862 = sqrt(t15861);
float t15863 = (t15862-float(2.6));
float t15864 = (t15863/float(11.4));
vec4 t15865 = texture(s4,vec2(t15850,t15864));
t15834 = t15865.x;
t15835 = t15865.y;
t15836 = t15865.z;
float t15866;
if(t15833){
t15866 = 1;
} else {
t15866 = 0;
}
float t15867 = (t15865.x*t15865.x);
float t15868 = (t15865.y*t15865.y);
float t15869 = (t15867+t15868);
float t15870 = (t15865.z*t15865.z);
float t15871 = (t15869+t15870);
float t15872 = sqrt(t15871);
float t15873 = (t15872*t15872);
float t15874 = (t15873/float(3.0));
bool t15875 = (t15874<=1);
float t15876;
if(t15875){
t15876 = t15874;
} else {
t15876 = 1;
}
bool t15877 = (t15876>=0);
float t15878;
if(t15877){
t15878 = t15876;
} else {
t15878 = 0;
}
float t15879 = (t15866*t15878);
t15837 = t15879;
} else {
t15834 = 0;
t15835 = 0;
t15836 = 0;
t15837 = 0;
}
float t15880 = (1-t15818);
float t15881 = (t15815*t15880);
float t15882 = (t15818+t15881);
float t15883 = (1-t15882);
float t15884 = (t15837*t15883);
float t15885 = (t15834*t15884);
float t15886 = (t15822+t15885);
float t15887 = (-float(1.5));
float t15888 = (t15887*t180);
float t15889 = (t15888*t15782);
float t15890 = pow(t15801,float(2.5));
float t15891 = (t15889/t15890);
float t15892 = (t15891*float(0.16));
float t15893 = (t15780+t15892);
float t15894 = (t15893*float(0.16));
float t15895 = (t15782+t15894);
float t15896 = (t15895*t15895);
float t15897 = (t15888*t15789);
float t15898 = (t15897/t15890);
float t15899 = (t15898*float(0.16));
float t15900 = (t15787+t15899);
float t15901 = (t15900*float(0.16));
float t15902 = (t15789+t15901);
float t15903 = (t15902*t15902);
float t15904 = (t15896+t15903);
float t15905 = (t15888*t15797);
float t15906 = (t15905/t15890);
float t15907 = (t15906*float(0.16));
float t15908 = (t15795+t15907);
float t15909 = (t15908*float(0.16));
float t15910 = (t15797+t15909);
float t15911 = (t15910*t15910);
float t15912 = (t15904+t15911);
float t15913 = sqrt(t15912);
float t15914 = (t15913*t15913);
bool t15915 = (t15914<1);
float t15916 = (t15782*t15782);
float t15917 = (t15789*t15789);
float t15918 = (t15916+t15917);
float t15919 = (t15797*t15797);
float t15920 = (t15918+t15919);
float t15921 = sqrt(t15920);
float t15922 = (t15921*t15921);
bool t15923 = (t15922>1);
bool t15924 = (t15915&&t15923);
float t15925;
float t15926;
float t15927;
float t15928;
if(t15924){
t15925 = 0;
t15926 = 0;
t15927 = 0;
t15928 = 1;
} else {
t15925 = 0;
t15926 = 0;
t15927 = 0;
t15928 = 0;
}
float t15929 = (1-t15882);
float t15930 = (t15837*t15929);
float t15931 = (t15882+t15930);
float t15932 = (1-t15931);
float t15933 = (t15928*t15932);
float t15934 = (t15925*t15933);
float t15935 = (t15886+t15934);
bool t15936 = (t15789>0);
bool t15937 = (t15902>0);
bool t15938 = (!t15937);
bool t15939 = (t15936&&t15938);
bool t15940 = (!t15936);
bool t15941 = (t15937&&t15940);
bool t15942 = (t15939||t15941);
bool t15943 = (t15914<196);
bool t15944 = (t15914>float(6.76));
bool t15945 = (t15943&&t15944);
bool t15946 = (t15942&&t15945);
float t15947;
float t15948;
float t15949;
float t15950;
if(t15946){
float t15951 = (t15902/t15900);
float t15952 = (-t15951);
float t15953 = (t15893*t15952);
float t15954 = (t15895+t15953);
float t15955 = atan(t15954,t15910);
float t15956 = (u1.u0/30);
float t15957 = (t15955+t15956);
float t15958 = (2*3.1415927);
float t15959 = (t15957+t15958);
float t15960 = mod(t15959,2);
float t15961 = (t15960*3.1415927);
float t15962 = (2*3.1415927);
float t15963 = (t15961/t15962);
float t15964 = (t15954*t15954);
float t15965 = (t15900*t15952);
float t15966 = (t15902+t15965);
float t15967 = (t15966*t15966);
float t15968 = (t15964+t15967);
float t15969 = (t15908*t15952);
float t15970 = (t15910+t15969);
float t15971 = (t15970*t15970);
float t15972 = (t15968+t15971);
float t15973 = sqrt(t15972);
float t15974 = (t15973*t15973);
float t15975 = sqrt(t15974);
float t15976 = (t15975-float(2.6));
float t15977 = (t15976/float(11.4));
vec4 t15978 = texture(s4,vec2(t15963,t15977));
t15947 = t15978.x;
t15948 = t15978.y;
t15949 = t15978.z;
float t15979;
if(t15946){
t15979 = 1;
} else {
t15979 = 0;
}
float t15980 = (t15978.x*t15978.x);
float t15981 = (t15978.y*t15978.y);
float t15982 = (t15980+t15981);
float t15983 = (t15978.z*t15978.z);
float t15984 = (t15982+t15983);
float t15985 = sqrt(t15984);
float t15986 = (t15985*t15985);
float t15987 = (t15986/float(3.0));
bool t15988 = (t15987<=1);
float t15989;
if(t15988){
t15989 = t15987;
} else {
t15989 = 1;
}
bool t15990 = (t15989>=0);
float t15991;
if(t15990){
t15991 = t15989;
} else {
t15991 = 0;
}
float t15992 = (t15979*t15991);
t15950 = t15992;
} else {
t15947 = 0;
t15948 = 0;
t15949 = 0;
t15950 = 0;
}
float t15993 = (1-t15931);
float t15994 = (t15928*t15993);
float t15995 = (t15931+t15994);
float t15996 = (1-t15995);
float t15997 = (t15950*t15996);
float t15998 = (t15947*t15997);
float t15999 = (t15935+t15998);
float t16000 = (-float(1.5));
float t16001 = (t16000*t180);
float t16002 = (t16001*t15895);
float t16003 = pow(t15914,float(2.5));
float t16004 = (t16002/t16003);
float t16005 = (t16004*float(0.16));
float t16006 = (t15893+t16005);
float t16007 = (t16006*float(0.16));
float t16008 = (t15895+t16007);
float t16009 = (t16008*t16008);
float t16010 = (t16001*t15902);
float t16011 = (t16010/t16003);
float t16012 = (t16011*float(0.16));
float t16013 = (t15900+t16012);
float t16014 = (t16013*float(0.16));
float t16015 = (t15902+t16014);
float t16016 = (t16015*t16015);
float t16017 = (t16009+t16016);
float t16018 = (t16001*t15910);
float t16019 = (t16018/t16003);
float t16020 = (t16019*float(0.16));
float t16021 = (t15908+t16020);
float t16022 = (t16021*float(0.16));
float t16023 = (t15910+t16022);
float t16024 = (t16023*t16023);
float t16025 = (t16017+t16024);
float t16026 = sqrt(t16025);
float t16027 = (t16026*t16026);
bool t16028 = (t16027<1);
float t16029 = (t15895*t15895);
float t16030 = (t15902*t15902);
float t16031 = (t16029+t16030);
float t16032 = (t15910*t15910);
float t16033 = (t16031+t16032);
float t16034 = sqrt(t16033);
float t16035 = (t16034*t16034);
bool t16036 = (t16035>1);
bool t16037 = (t16028&&t16036);
float t16038;
float t16039;
float t16040;
float t16041;
if(t16037){
t16038 = 0;
t16039 = 0;
t16040 = 0;
t16041 = 1;
} else {
t16038 = 0;
t16039 = 0;
t16040 = 0;
t16041 = 0;
}
float t16042 = (1-t15995);
float t16043 = (t15950*t16042);
float t16044 = (t15995+t16043);
float t16045 = (1-t16044);
float t16046 = (t16041*t16045);
float t16047 = (t16038*t16046);
float t16048 = (t15999+t16047);
bool t16049 = (t15902>0);
bool t16050 = (t16015>0);
bool t16051 = (!t16050);
bool t16052 = (t16049&&t16051);
bool t16053 = (!t16049);
bool t16054 = (t16050&&t16053);
bool t16055 = (t16052||t16054);
bool t16056 = (t16027<196);
bool t16057 = (t16027>float(6.76));
bool t16058 = (t16056&&t16057);
bool t16059 = (t16055&&t16058);
float t16060;
float t16061;
float t16062;
float t16063;
if(t16059){
float t16064 = (t16015/t16013);
float t16065 = (-t16064);
float t16066 = (t16006*t16065);
float t16067 = (t16008+t16066);
float t16068 = atan(t16067,t16023);
float t16069 = (u1.u0/30);
float t16070 = (t16068+t16069);
float t16071 = (2*3.1415927);
float t16072 = (t16070+t16071);
float t16073 = mod(t16072,2);
float t16074 = (t16073*3.1415927);
float t16075 = (2*3.1415927);
float t16076 = (t16074/t16075);
float t16077 = (t16067*t16067);
float t16078 = (t16013*t16065);
float t16079 = (t16015+t16078);
float t16080 = (t16079*t16079);
float t16081 = (t16077+t16080);
float t16082 = (t16021*t16065);
float t16083 = (t16023+t16082);
float t16084 = (t16083*t16083);
float t16085 = (t16081+t16084);
float t16086 = sqrt(t16085);
float t16087 = (t16086*t16086);
float t16088 = sqrt(t16087);
float t16089 = (t16088-float(2.6));
float t16090 = (t16089/float(11.4));
vec4 t16091 = texture(s4,vec2(t16076,t16090));
t16060 = t16091.x;
t16061 = t16091.y;
t16062 = t16091.z;
float t16092;
if(t16059){
t16092 = 1;
} else {
t16092 = 0;
}
float t16093 = (t16091.x*t16091.x);
float t16094 = (t16091.y*t16091.y);
float t16095 = (t16093+t16094);
float t16096 = (t16091.z*t16091.z);
float t16097 = (t16095+t16096);
float t16098 = sqrt(t16097);
float t16099 = (t16098*t16098);
float t16100 = (t16099/float(3.0));
bool t16101 = (t16100<=1);
float t16102;
if(t16101){
t16102 = t16100;
} else {
t16102 = 1;
}
bool t16103 = (t16102>=0);
float t16104;
if(t16103){
t16104 = t16102;
} else {
t16104 = 0;
}
float t16105 = (t16092*t16104);
t16063 = t16105;
} else {
t16060 = 0;
t16061 = 0;
t16062 = 0;
t16063 = 0;
}
float t16106 = (1-t16044);
float t16107 = (t16041*t16106);
float t16108 = (t16044+t16107);
float t16109 = (1-t16108);
float t16110 = (t16063*t16109);
float t16111 = (t16060*t16110);
float t16112 = (t16048+t16111);
float t16113 = (-float(1.5));
float t16114 = (t16113*t180);
float t16115 = (t16114*t16008);
float t16116 = pow(t16027,float(2.5));
float t16117 = (t16115/t16116);
float t16118 = (t16117*float(0.16));
float t16119 = (t16006+t16118);
float t16120 = (t16119*float(0.16));
float t16121 = (t16008+t16120);
float t16122 = (t16121*t16121);
float t16123 = (t16114*t16015);
float t16124 = (t16123/t16116);
float t16125 = (t16124*float(0.16));
float t16126 = (t16013+t16125);
float t16127 = (t16126*float(0.16));
float t16128 = (t16015+t16127);
float t16129 = (t16128*t16128);
float t16130 = (t16122+t16129);
float t16131 = (t16114*t16023);
float t16132 = (t16131/t16116);
float t16133 = (t16132*float(0.16));
float t16134 = (t16021+t16133);
float t16135 = (t16134*float(0.16));
float t16136 = (t16023+t16135);
float t16137 = (t16136*t16136);
float t16138 = (t16130+t16137);
float t16139 = sqrt(t16138);
float t16140 = (t16139*t16139);
bool t16141 = (t16140<1);
float t16142 = (t16008*t16008);
float t16143 = (t16015*t16015);
float t16144 = (t16142+t16143);
float t16145 = (t16023*t16023);
float t16146 = (t16144+t16145);
float t16147 = sqrt(t16146);
float t16148 = (t16147*t16147);
bool t16149 = (t16148>1);
bool t16150 = (t16141&&t16149);
float t16151;
float t16152;
float t16153;
float t16154;
if(t16150){
t16151 = 0;
t16152 = 0;
t16153 = 0;
t16154 = 1;
} else {
t16151 = 0;
t16152 = 0;
t16153 = 0;
t16154 = 0;
}
float t16155 = (1-t16108);
float t16156 = (t16063*t16155);
float t16157 = (t16108+t16156);
float t16158 = (1-t16157);
float t16159 = (t16154*t16158);
float t16160 = (t16151*t16159);
float t16161 = (t16112+t16160);
bool t16162 = (t16015>0);
bool t16163 = (t16128>0);
bool t16164 = (!t16163);
bool t16165 = (t16162&&t16164);
bool t16166 = (!t16162);
bool t16167 = (t16163&&t16166);
bool t16168 = (t16165||t16167);
bool t16169 = (t16140<196);
bool t16170 = (t16140>float(6.76));
bool t16171 = (t16169&&t16170);
bool t16172 = (t16168&&t16171);
float t16173;
float t16174;
float t16175;
float t16176;
if(t16172){
float t16177 = (t16128/t16126);
float t16178 = (-t16177);
float t16179 = (t16119*t16178);
float t16180 = (t16121+t16179);
float t16181 = atan(t16180,t16136);
float t16182 = (u1.u0/30);
float t16183 = (t16181+t16182);
float t16184 = (2*3.1415927);
float t16185 = (t16183+t16184);
float t16186 = mod(t16185,2);
float t16187 = (t16186*3.1415927);
float t16188 = (2*3.1415927);
float t16189 = (t16187/t16188);
float t16190 = (t16180*t16180);
float t16191 = (t16126*t16178);
float t16192 = (t16128+t16191);
float t16193 = (t16192*t16192);
float t16194 = (t16190+t16193);
float t16195 = (t16134*t16178);
float t16196 = (t16136+t16195);
float t16197 = (t16196*t16196);
float t16198 = (t16194+t16197);
float t16199 = sqrt(t16198);
float t16200 = (t16199*t16199);
float t16201 = sqrt(t16200);
float t16202 = (t16201-float(2.6));
float t16203 = (t16202/float(11.4));
vec4 t16204 = texture(s4,vec2(t16189,t16203));
t16173 = t16204.x;
t16174 = t16204.y;
t16175 = t16204.z;
float t16205;
if(t16172){
t16205 = 1;
} else {
t16205 = 0;
}
float t16206 = (t16204.x*t16204.x);
float t16207 = (t16204.y*t16204.y);
float t16208 = (t16206+t16207);
float t16209 = (t16204.z*t16204.z);
float t16210 = (t16208+t16209);
float t16211 = sqrt(t16210);
float t16212 = (t16211*t16211);
float t16213 = (t16212/float(3.0));
bool t16214 = (t16213<=1);
float t16215;
if(t16214){
t16215 = t16213;
} else {
t16215 = 1;
}
bool t16216 = (t16215>=0);
float t16217;
if(t16216){
t16217 = t16215;
} else {
t16217 = 0;
}
float t16218 = (t16205*t16217);
t16176 = t16218;
} else {
t16173 = 0;
t16174 = 0;
t16175 = 0;
t16176 = 0;
}
float t16219 = (1-t16157);
float t16220 = (t16154*t16219);
float t16221 = (t16157+t16220);
float t16222 = (1-t16221);
float t16223 = (t16176*t16222);
float t16224 = (t16173*t16223);
float t16225 = (t16161+t16224);
float t16226 = (-float(1.5));
float t16227 = (t16226*t180);
float t16228 = (t16227*t16121);
float t16229 = pow(t16140,float(2.5));
float t16230 = (t16228/t16229);
float t16231 = (t16230*float(0.16));
float t16232 = (t16119+t16231);
float t16233 = (t16232*float(0.16));
float t16234 = (t16121+t16233);
float t16235 = (t16234*t16234);
float t16236 = (t16227*t16128);
float t16237 = (t16236/t16229);
float t16238 = (t16237*float(0.16));
float t16239 = (t16126+t16238);
float t16240 = (t16239*float(0.16));
float t16241 = (t16128+t16240);
float t16242 = (t16241*t16241);
float t16243 = (t16235+t16242);
float t16244 = (t16227*t16136);
float t16245 = (t16244/t16229);
float t16246 = (t16245*float(0.16));
float t16247 = (t16134+t16246);
float t16248 = (t16247*float(0.16));
float t16249 = (t16136+t16248);
float t16250 = (t16249*t16249);
float t16251 = (t16243+t16250);
float t16252 = sqrt(t16251);
float t16253 = (t16252*t16252);
bool t16254 = (t16253<1);
float t16255 = (t16121*t16121);
float t16256 = (t16128*t16128);
float t16257 = (t16255+t16256);
float t16258 = (t16136*t16136);
float t16259 = (t16257+t16258);
float t16260 = sqrt(t16259);
float t16261 = (t16260*t16260);
bool t16262 = (t16261>1);
bool t16263 = (t16254&&t16262);
float t16264;
float t16265;
float t16266;
float t16267;
if(t16263){
t16264 = 0;
t16265 = 0;
t16266 = 0;
t16267 = 1;
} else {
t16264 = 0;
t16265 = 0;
t16266 = 0;
t16267 = 0;
}
float t16268 = (1-t16221);
float t16269 = (t16176*t16268);
float t16270 = (t16221+t16269);
float t16271 = (1-t16270);
float t16272 = (t16267*t16271);
float t16273 = (t16264*t16272);
float t16274 = (t16225+t16273);
bool t16275 = (t16128>0);
bool t16276 = (t16241>0);
bool t16277 = (!t16276);
bool t16278 = (t16275&&t16277);
bool t16279 = (!t16275);
bool t16280 = (t16276&&t16279);
bool t16281 = (t16278||t16280);
bool t16282 = (t16253<196);
bool t16283 = (t16253>float(6.76));
bool t16284 = (t16282&&t16283);
bool t16285 = (t16281&&t16284);
float t16286;
float t16287;
float t16288;
float t16289;
if(t16285){
float t16290 = (t16241/t16239);
float t16291 = (-t16290);
float t16292 = (t16232*t16291);
float t16293 = (t16234+t16292);
float t16294 = atan(t16293,t16249);
float t16295 = (u1.u0/30);
float t16296 = (t16294+t16295);
float t16297 = (2*3.1415927);
float t16298 = (t16296+t16297);
float t16299 = mod(t16298,2);
float t16300 = (t16299*3.1415927);
float t16301 = (2*3.1415927);
float t16302 = (t16300/t16301);
float t16303 = (t16293*t16293);
float t16304 = (t16239*t16291);
float t16305 = (t16241+t16304);
float t16306 = (t16305*t16305);
float t16307 = (t16303+t16306);
float t16308 = (t16247*t16291);
float t16309 = (t16249+t16308);
float t16310 = (t16309*t16309);
float t16311 = (t16307+t16310);
float t16312 = sqrt(t16311);
float t16313 = (t16312*t16312);
float t16314 = sqrt(t16313);
float t16315 = (t16314-float(2.6));
float t16316 = (t16315/float(11.4));
vec4 t16317 = texture(s4,vec2(t16302,t16316));
t16286 = t16317.x;
t16287 = t16317.y;
t16288 = t16317.z;
float t16318;
if(t16285){
t16318 = 1;
} else {
t16318 = 0;
}
float t16319 = (t16317.x*t16317.x);
float t16320 = (t16317.y*t16317.y);
float t16321 = (t16319+t16320);
float t16322 = (t16317.z*t16317.z);
float t16323 = (t16321+t16322);
float t16324 = sqrt(t16323);
float t16325 = (t16324*t16324);
float t16326 = (t16325/float(3.0));
bool t16327 = (t16326<=1);
float t16328;
if(t16327){
t16328 = t16326;
} else {
t16328 = 1;
}
bool t16329 = (t16328>=0);
float t16330;
if(t16329){
t16330 = t16328;
} else {
t16330 = 0;
}
float t16331 = (t16318*t16330);
t16289 = t16331;
} else {
t16286 = 0;
t16287 = 0;
t16288 = 0;
t16289 = 0;
}
float t16332 = (1-t16270);
float t16333 = (t16267*t16332);
float t16334 = (t16270+t16333);
float t16335 = (1-t16334);
float t16336 = (t16289*t16335);
float t16337 = (t16286*t16336);
float t16338 = (t16274+t16337);
float t16339 = (-float(1.5));
float t16340 = (t16339*t180);
float t16341 = (t16340*t16234);
float t16342 = pow(t16253,float(2.5));
float t16343 = (t16341/t16342);
float t16344 = (t16343*float(0.16));
float t16345 = (t16232+t16344);
float t16346 = (t16345*float(0.16));
float t16347 = (t16234+t16346);
float t16348 = (t16347*t16347);
float t16349 = (t16340*t16241);
float t16350 = (t16349/t16342);
float t16351 = (t16350*float(0.16));
float t16352 = (t16239+t16351);
float t16353 = (t16352*float(0.16));
float t16354 = (t16241+t16353);
float t16355 = (t16354*t16354);
float t16356 = (t16348+t16355);
float t16357 = (t16340*t16249);
float t16358 = (t16357/t16342);
float t16359 = (t16358*float(0.16));
float t16360 = (t16247+t16359);
float t16361 = (t16360*float(0.16));
float t16362 = (t16249+t16361);
float t16363 = (t16362*t16362);
float t16364 = (t16356+t16363);
float t16365 = sqrt(t16364);
float t16366 = (t16365*t16365);
bool t16367 = (t16366<1);
float t16368 = (t16234*t16234);
float t16369 = (t16241*t16241);
float t16370 = (t16368+t16369);
float t16371 = (t16249*t16249);
float t16372 = (t16370+t16371);
float t16373 = sqrt(t16372);
float t16374 = (t16373*t16373);
bool t16375 = (t16374>1);
bool t16376 = (t16367&&t16375);
float t16377;
float t16378;
float t16379;
float t16380;
if(t16376){
t16377 = 0;
t16378 = 0;
t16379 = 0;
t16380 = 1;
} else {
t16377 = 0;
t16378 = 0;
t16379 = 0;
t16380 = 0;
}
float t16381 = (1-t16334);
float t16382 = (t16289*t16381);
float t16383 = (t16334+t16382);
float t16384 = (1-t16383);
float t16385 = (t16380*t16384);
float t16386 = (t16377*t16385);
float t16387 = (t16338+t16386);
bool t16388 = (t16241>0);
bool t16389 = (t16354>0);
bool t16390 = (!t16389);
bool t16391 = (t16388&&t16390);
bool t16392 = (!t16388);
bool t16393 = (t16389&&t16392);
bool t16394 = (t16391||t16393);
bool t16395 = (t16366<196);
bool t16396 = (t16366>float(6.76));
bool t16397 = (t16395&&t16396);
bool t16398 = (t16394&&t16397);
float t16399;
float t16400;
float t16401;
float t16402;
if(t16398){
float t16403 = (t16354/t16352);
float t16404 = (-t16403);
float t16405 = (t16345*t16404);
float t16406 = (t16347+t16405);
float t16407 = atan(t16406,t16362);
float t16408 = (u1.u0/30);
float t16409 = (t16407+t16408);
float t16410 = (2*3.1415927);
float t16411 = (t16409+t16410);
float t16412 = mod(t16411,2);
float t16413 = (t16412*3.1415927);
float t16414 = (2*3.1415927);
float t16415 = (t16413/t16414);
float t16416 = (t16406*t16406);
float t16417 = (t16352*t16404);
float t16418 = (t16354+t16417);
float t16419 = (t16418*t16418);
float t16420 = (t16416+t16419);
float t16421 = (t16360*t16404);
float t16422 = (t16362+t16421);
float t16423 = (t16422*t16422);
float t16424 = (t16420+t16423);
float t16425 = sqrt(t16424);
float t16426 = (t16425*t16425);
float t16427 = sqrt(t16426);
float t16428 = (t16427-float(2.6));
float t16429 = (t16428/float(11.4));
vec4 t16430 = texture(s4,vec2(t16415,t16429));
t16399 = t16430.x;
t16400 = t16430.y;
t16401 = t16430.z;
float t16431;
if(t16398){
t16431 = 1;
} else {
t16431 = 0;
}
float t16432 = (t16430.x*t16430.x);
float t16433 = (t16430.y*t16430.y);
float t16434 = (t16432+t16433);
float t16435 = (t16430.z*t16430.z);
float t16436 = (t16434+t16435);
float t16437 = sqrt(t16436);
float t16438 = (t16437*t16437);
float t16439 = (t16438/float(3.0));
bool t16440 = (t16439<=1);
float t16441;
if(t16440){
t16441 = t16439;
} else {
t16441 = 1;
}
bool t16442 = (t16441>=0);
float t16443;
if(t16442){
t16443 = t16441;
} else {
t16443 = 0;
}
float t16444 = (t16431*t16443);
t16402 = t16444;
} else {
t16399 = 0;
t16400 = 0;
t16401 = 0;
t16402 = 0;
}
float t16445 = (1-t16383);
float t16446 = (t16380*t16445);
float t16447 = (t16383+t16446);
float t16448 = (1-t16447);
float t16449 = (t16402*t16448);
float t16450 = (t16399*t16449);
float t16451 = (t16387+t16450);
float t16452 = (-float(1.5));
float t16453 = (t16452*t180);
float t16454 = (t16453*t16347);
float t16455 = pow(t16366,float(2.5));
float t16456 = (t16454/t16455);
float t16457 = (t16456*float(0.16));
float t16458 = (t16345+t16457);
float t16459 = (t16458*float(0.16));
float t16460 = (t16347+t16459);
float t16461 = (t16460*t16460);
float t16462 = (t16453*t16354);
float t16463 = (t16462/t16455);
float t16464 = (t16463*float(0.16));
float t16465 = (t16352+t16464);
float t16466 = (t16465*float(0.16));
float t16467 = (t16354+t16466);
float t16468 = (t16467*t16467);
float t16469 = (t16461+t16468);
float t16470 = (t16453*t16362);
float t16471 = (t16470/t16455);
float t16472 = (t16471*float(0.16));
float t16473 = (t16360+t16472);
float t16474 = (t16473*float(0.16));
float t16475 = (t16362+t16474);
float t16476 = (t16475*t16475);
float t16477 = (t16469+t16476);
float t16478 = sqrt(t16477);
float t16479 = (t16478*t16478);
bool t16480 = (t16479<1);
float t16481 = (t16347*t16347);
float t16482 = (t16354*t16354);
float t16483 = (t16481+t16482);
float t16484 = (t16362*t16362);
float t16485 = (t16483+t16484);
float t16486 = sqrt(t16485);
float t16487 = (t16486*t16486);
bool t16488 = (t16487>1);
bool t16489 = (t16480&&t16488);
float t16490;
float t16491;
float t16492;
float t16493;
if(t16489){
t16490 = 0;
t16491 = 0;
t16492 = 0;
t16493 = 1;
} else {
t16490 = 0;
t16491 = 0;
t16492 = 0;
t16493 = 0;
}
float t16494 = (1-t16447);
float t16495 = (t16402*t16494);
float t16496 = (t16447+t16495);
float t16497 = (1-t16496);
float t16498 = (t16493*t16497);
float t16499 = (t16490*t16498);
float t16500 = (t16451+t16499);
bool t16501 = (t16354>0);
bool t16502 = (t16467>0);
bool t16503 = (!t16502);
bool t16504 = (t16501&&t16503);
bool t16505 = (!t16501);
bool t16506 = (t16502&&t16505);
bool t16507 = (t16504||t16506);
bool t16508 = (t16479<196);
bool t16509 = (t16479>float(6.76));
bool t16510 = (t16508&&t16509);
bool t16511 = (t16507&&t16510);
float t16512;
float t16513;
float t16514;
float t16515;
if(t16511){
float t16516 = (t16467/t16465);
float t16517 = (-t16516);
float t16518 = (t16458*t16517);
float t16519 = (t16460+t16518);
float t16520 = atan(t16519,t16475);
float t16521 = (u1.u0/30);
float t16522 = (t16520+t16521);
float t16523 = (2*3.1415927);
float t16524 = (t16522+t16523);
float t16525 = mod(t16524,2);
float t16526 = (t16525*3.1415927);
float t16527 = (2*3.1415927);
float t16528 = (t16526/t16527);
float t16529 = (t16519*t16519);
float t16530 = (t16465*t16517);
float t16531 = (t16467+t16530);
float t16532 = (t16531*t16531);
float t16533 = (t16529+t16532);
float t16534 = (t16473*t16517);
float t16535 = (t16475+t16534);
float t16536 = (t16535*t16535);
float t16537 = (t16533+t16536);
float t16538 = sqrt(t16537);
float t16539 = (t16538*t16538);
float t16540 = sqrt(t16539);
float t16541 = (t16540-float(2.6));
float t16542 = (t16541/float(11.4));
vec4 t16543 = texture(s4,vec2(t16528,t16542));
t16512 = t16543.x;
t16513 = t16543.y;
t16514 = t16543.z;
float t16544;
if(t16511){
t16544 = 1;
} else {
t16544 = 0;
}
float t16545 = (t16543.x*t16543.x);
float t16546 = (t16543.y*t16543.y);
float t16547 = (t16545+t16546);
float t16548 = (t16543.z*t16543.z);
float t16549 = (t16547+t16548);
float t16550 = sqrt(t16549);
float t16551 = (t16550*t16550);
float t16552 = (t16551/float(3.0));
bool t16553 = (t16552<=1);
float t16554;
if(t16553){
t16554 = t16552;
} else {
t16554 = 1;
}
bool t16555 = (t16554>=0);
float t16556;
if(t16555){
t16556 = t16554;
} else {
t16556 = 0;
}
float t16557 = (t16544*t16556);
t16515 = t16557;
} else {
t16512 = 0;
t16513 = 0;
t16514 = 0;
t16515 = 0;
}
float t16558 = (1-t16496);
float t16559 = (t16493*t16558);
float t16560 = (t16496+t16559);
float t16561 = (1-t16560);
float t16562 = (t16515*t16561);
float t16563 = (t16512*t16562);
float t16564 = (t16500+t16563);
float t16565 = (-float(1.5));
float t16566 = (t16565*t180);
float t16567 = (t16566*t16460);
float t16568 = pow(t16479,float(2.5));
float t16569 = (t16567/t16568);
float t16570 = (t16569*float(0.16));
float t16571 = (t16458+t16570);
float t16572 = (t16571*float(0.16));
float t16573 = (t16460+t16572);
float t16574 = (t16573*t16573);
float t16575 = (t16566*t16467);
float t16576 = (t16575/t16568);
float t16577 = (t16576*float(0.16));
float t16578 = (t16465+t16577);
float t16579 = (t16578*float(0.16));
float t16580 = (t16467+t16579);
float t16581 = (t16580*t16580);
float t16582 = (t16574+t16581);
float t16583 = (t16566*t16475);
float t16584 = (t16583/t16568);
float t16585 = (t16584*float(0.16));
float t16586 = (t16473+t16585);
float t16587 = (t16586*float(0.16));
float t16588 = (t16475+t16587);
float t16589 = (t16588*t16588);
float t16590 = (t16582+t16589);
float t16591 = sqrt(t16590);
float t16592 = (t16591*t16591);
bool t16593 = (t16592<1);
float t16594 = (t16460*t16460);
float t16595 = (t16467*t16467);
float t16596 = (t16594+t16595);
float t16597 = (t16475*t16475);
float t16598 = (t16596+t16597);
float t16599 = sqrt(t16598);
float t16600 = (t16599*t16599);
bool t16601 = (t16600>1);
bool t16602 = (t16593&&t16601);
float t16603;
float t16604;
float t16605;
float t16606;
if(t16602){
t16603 = 0;
t16604 = 0;
t16605 = 0;
t16606 = 1;
} else {
t16603 = 0;
t16604 = 0;
t16605 = 0;
t16606 = 0;
}
float t16607 = (1-t16560);
float t16608 = (t16515*t16607);
float t16609 = (t16560+t16608);
float t16610 = (1-t16609);
float t16611 = (t16606*t16610);
float t16612 = (t16603*t16611);
float t16613 = (t16564+t16612);
bool t16614 = (t16467>0);
bool t16615 = (t16580>0);
bool t16616 = (!t16615);
bool t16617 = (t16614&&t16616);
bool t16618 = (!t16614);
bool t16619 = (t16615&&t16618);
bool t16620 = (t16617||t16619);
bool t16621 = (t16592<196);
bool t16622 = (t16592>float(6.76));
bool t16623 = (t16621&&t16622);
bool t16624 = (t16620&&t16623);
float t16625;
float t16626;
float t16627;
float t16628;
if(t16624){
float t16629 = (t16580/t16578);
float t16630 = (-t16629);
float t16631 = (t16571*t16630);
float t16632 = (t16573+t16631);
float t16633 = atan(t16632,t16588);
float t16634 = (u1.u0/30);
float t16635 = (t16633+t16634);
float t16636 = (2*3.1415927);
float t16637 = (t16635+t16636);
float t16638 = mod(t16637,2);
float t16639 = (t16638*3.1415927);
float t16640 = (2*3.1415927);
float t16641 = (t16639/t16640);
float t16642 = (t16632*t16632);
float t16643 = (t16578*t16630);
float t16644 = (t16580+t16643);
float t16645 = (t16644*t16644);
float t16646 = (t16642+t16645);
float t16647 = (t16586*t16630);
float t16648 = (t16588+t16647);
float t16649 = (t16648*t16648);
float t16650 = (t16646+t16649);
float t16651 = sqrt(t16650);
float t16652 = (t16651*t16651);
float t16653 = sqrt(t16652);
float t16654 = (t16653-float(2.6));
float t16655 = (t16654/float(11.4));
vec4 t16656 = texture(s4,vec2(t16641,t16655));
t16625 = t16656.x;
t16626 = t16656.y;
t16627 = t16656.z;
float t16657;
if(t16624){
t16657 = 1;
} else {
t16657 = 0;
}
float t16658 = (t16656.x*t16656.x);
float t16659 = (t16656.y*t16656.y);
float t16660 = (t16658+t16659);
float t16661 = (t16656.z*t16656.z);
float t16662 = (t16660+t16661);
float t16663 = sqrt(t16662);
float t16664 = (t16663*t16663);
float t16665 = (t16664/float(3.0));
bool t16666 = (t16665<=1);
float t16667;
if(t16666){
t16667 = t16665;
} else {
t16667 = 1;
}
bool t16668 = (t16667>=0);
float t16669;
if(t16668){
t16669 = t16667;
} else {
t16669 = 0;
}
float t16670 = (t16657*t16669);
t16628 = t16670;
} else {
t16625 = 0;
t16626 = 0;
t16627 = 0;
t16628 = 0;
}
float t16671 = (1-t16609);
float t16672 = (t16606*t16671);
float t16673 = (t16609+t16672);
float t16674 = (1-t16673);
float t16675 = (t16628*t16674);
float t16676 = (t16625*t16675);
float t16677 = (t16613+t16676);
float t16678 = (-float(1.5));
float t16679 = (t16678*t180);
float t16680 = (t16679*t16573);
float t16681 = pow(t16592,float(2.5));
float t16682 = (t16680/t16681);
float t16683 = (t16682*float(0.16));
float t16684 = (t16571+t16683);
float t16685 = (t16684*float(0.16));
float t16686 = (t16573+t16685);
float t16687 = (t16686*t16686);
float t16688 = (t16679*t16580);
float t16689 = (t16688/t16681);
float t16690 = (t16689*float(0.16));
float t16691 = (t16578+t16690);
float t16692 = (t16691*float(0.16));
float t16693 = (t16580+t16692);
float t16694 = (t16693*t16693);
float t16695 = (t16687+t16694);
float t16696 = (t16679*t16588);
float t16697 = (t16696/t16681);
float t16698 = (t16697*float(0.16));
float t16699 = (t16586+t16698);
float t16700 = (t16699*float(0.16));
float t16701 = (t16588+t16700);
float t16702 = (t16701*t16701);
float t16703 = (t16695+t16702);
float t16704 = sqrt(t16703);
float t16705 = (t16704*t16704);
bool t16706 = (t16705<1);
float t16707 = (t16573*t16573);
float t16708 = (t16580*t16580);
float t16709 = (t16707+t16708);
float t16710 = (t16588*t16588);
float t16711 = (t16709+t16710);
float t16712 = sqrt(t16711);
float t16713 = (t16712*t16712);
bool t16714 = (t16713>1);
bool t16715 = (t16706&&t16714);
float t16716;
float t16717;
float t16718;
float t16719;
if(t16715){
t16716 = 0;
t16717 = 0;
t16718 = 0;
t16719 = 1;
} else {
t16716 = 0;
t16717 = 0;
t16718 = 0;
t16719 = 0;
}
float t16720 = (1-t16673);
float t16721 = (t16628*t16720);
float t16722 = (t16673+t16721);
float t16723 = (1-t16722);
float t16724 = (t16719*t16723);
float t16725 = (t16716*t16724);
float t16726 = (t16677+t16725);
bool t16727 = (t16580>0);
bool t16728 = (t16693>0);
bool t16729 = (!t16728);
bool t16730 = (t16727&&t16729);
bool t16731 = (!t16727);
bool t16732 = (t16728&&t16731);
bool t16733 = (t16730||t16732);
bool t16734 = (t16705<196);
bool t16735 = (t16705>float(6.76));
bool t16736 = (t16734&&t16735);
bool t16737 = (t16733&&t16736);
float t16738;
float t16739;
float t16740;
float t16741;
if(t16737){
float t16742 = (t16693/t16691);
float t16743 = (-t16742);
float t16744 = (t16684*t16743);
float t16745 = (t16686+t16744);
float t16746 = atan(t16745,t16701);
float t16747 = (u1.u0/30);
float t16748 = (t16746+t16747);
float t16749 = (2*3.1415927);
float t16750 = (t16748+t16749);
float t16751 = mod(t16750,2);
float t16752 = (t16751*3.1415927);
float t16753 = (2*3.1415927);
float t16754 = (t16752/t16753);
float t16755 = (t16745*t16745);
float t16756 = (t16691*t16743);
float t16757 = (t16693+t16756);
float t16758 = (t16757*t16757);
float t16759 = (t16755+t16758);
float t16760 = (t16699*t16743);
float t16761 = (t16701+t16760);
float t16762 = (t16761*t16761);
float t16763 = (t16759+t16762);
float t16764 = sqrt(t16763);
float t16765 = (t16764*t16764);
float t16766 = sqrt(t16765);
float t16767 = (t16766-float(2.6));
float t16768 = (t16767/float(11.4));
vec4 t16769 = texture(s4,vec2(t16754,t16768));
t16738 = t16769.x;
t16739 = t16769.y;
t16740 = t16769.z;
float t16770;
if(t16737){
t16770 = 1;
} else {
t16770 = 0;
}
float t16771 = (t16769.x*t16769.x);
float t16772 = (t16769.y*t16769.y);
float t16773 = (t16771+t16772);
float t16774 = (t16769.z*t16769.z);
float t16775 = (t16773+t16774);
float t16776 = sqrt(t16775);
float t16777 = (t16776*t16776);
float t16778 = (t16777/float(3.0));
bool t16779 = (t16778<=1);
float t16780;
if(t16779){
t16780 = t16778;
} else {
t16780 = 1;
}
bool t16781 = (t16780>=0);
float t16782;
if(t16781){
t16782 = t16780;
} else {
t16782 = 0;
}
float t16783 = (t16770*t16782);
t16741 = t16783;
} else {
t16738 = 0;
t16739 = 0;
t16740 = 0;
t16741 = 0;
}
float t16784 = (1-t16722);
float t16785 = (t16719*t16784);
float t16786 = (t16722+t16785);
float t16787 = (1-t16786);
float t16788 = (t16741*t16787);
float t16789 = (t16738*t16788);
float t16790 = (t16726+t16789);
float t16791 = (-float(1.5));
float t16792 = (t16791*t180);
float t16793 = (t16792*t16686);
float t16794 = pow(t16705,float(2.5));
float t16795 = (t16793/t16794);
float t16796 = (t16795*float(0.16));
float t16797 = (t16684+t16796);
float t16798 = (t16797*float(0.16));
float t16799 = (t16686+t16798);
float t16800 = (t16799*t16799);
float t16801 = (t16792*t16693);
float t16802 = (t16801/t16794);
float t16803 = (t16802*float(0.16));
float t16804 = (t16691+t16803);
float t16805 = (t16804*float(0.16));
float t16806 = (t16693+t16805);
float t16807 = (t16806*t16806);
float t16808 = (t16800+t16807);
float t16809 = (t16792*t16701);
float t16810 = (t16809/t16794);
float t16811 = (t16810*float(0.16));
float t16812 = (t16699+t16811);
float t16813 = (t16812*float(0.16));
float t16814 = (t16701+t16813);
float t16815 = (t16814*t16814);
float t16816 = (t16808+t16815);
float t16817 = sqrt(t16816);
float t16818 = (t16817*t16817);
bool t16819 = (t16818<1);
float t16820 = (t16686*t16686);
float t16821 = (t16693*t16693);
float t16822 = (t16820+t16821);
float t16823 = (t16701*t16701);
float t16824 = (t16822+t16823);
float t16825 = sqrt(t16824);
float t16826 = (t16825*t16825);
bool t16827 = (t16826>1);
bool t16828 = (t16819&&t16827);
float t16829;
float t16830;
float t16831;
float t16832;
if(t16828){
t16829 = 0;
t16830 = 0;
t16831 = 0;
t16832 = 1;
} else {
t16829 = 0;
t16830 = 0;
t16831 = 0;
t16832 = 0;
}
float t16833 = (1-t16786);
float t16834 = (t16741*t16833);
float t16835 = (t16786+t16834);
float t16836 = (1-t16835);
float t16837 = (t16832*t16836);
float t16838 = (t16829*t16837);
float t16839 = (t16790+t16838);
bool t16840 = (t16693>0);
bool t16841 = (t16806>0);
bool t16842 = (!t16841);
bool t16843 = (t16840&&t16842);
bool t16844 = (!t16840);
bool t16845 = (t16841&&t16844);
bool t16846 = (t16843||t16845);
bool t16847 = (t16818<196);
bool t16848 = (t16818>float(6.76));
bool t16849 = (t16847&&t16848);
bool t16850 = (t16846&&t16849);
float t16851;
float t16852;
float t16853;
float t16854;
if(t16850){
float t16855 = (t16806/t16804);
float t16856 = (-t16855);
float t16857 = (t16797*t16856);
float t16858 = (t16799+t16857);
float t16859 = atan(t16858,t16814);
float t16860 = (u1.u0/30);
float t16861 = (t16859+t16860);
float t16862 = (2*3.1415927);
float t16863 = (t16861+t16862);
float t16864 = mod(t16863,2);
float t16865 = (t16864*3.1415927);
float t16866 = (2*3.1415927);
float t16867 = (t16865/t16866);
float t16868 = (t16858*t16858);
float t16869 = (t16804*t16856);
float t16870 = (t16806+t16869);
float t16871 = (t16870*t16870);
float t16872 = (t16868+t16871);
float t16873 = (t16812*t16856);
float t16874 = (t16814+t16873);
float t16875 = (t16874*t16874);
float t16876 = (t16872+t16875);
float t16877 = sqrt(t16876);
float t16878 = (t16877*t16877);
float t16879 = sqrt(t16878);
float t16880 = (t16879-float(2.6));
float t16881 = (t16880/float(11.4));
vec4 t16882 = texture(s4,vec2(t16867,t16881));
t16851 = t16882.x;
t16852 = t16882.y;
t16853 = t16882.z;
float t16883;
if(t16850){
t16883 = 1;
} else {
t16883 = 0;
}
float t16884 = (t16882.x*t16882.x);
float t16885 = (t16882.y*t16882.y);
float t16886 = (t16884+t16885);
float t16887 = (t16882.z*t16882.z);
float t16888 = (t16886+t16887);
float t16889 = sqrt(t16888);
float t16890 = (t16889*t16889);
float t16891 = (t16890/float(3.0));
bool t16892 = (t16891<=1);
float t16893;
if(t16892){
t16893 = t16891;
} else {
t16893 = 1;
}
bool t16894 = (t16893>=0);
float t16895;
if(t16894){
t16895 = t16893;
} else {
t16895 = 0;
}
float t16896 = (t16883*t16895);
t16854 = t16896;
} else {
t16851 = 0;
t16852 = 0;
t16853 = 0;
t16854 = 0;
}
float t16897 = (1-t16835);
float t16898 = (t16832*t16897);
float t16899 = (t16835+t16898);
float t16900 = (1-t16899);
float t16901 = (t16854*t16900);
float t16902 = (t16851*t16901);
float t16903 = (t16839+t16902);
float t16904 = (-float(1.5));
float t16905 = (t16904*t180);
float t16906 = (t16905*t16799);
float t16907 = pow(t16818,float(2.5));
float t16908 = (t16906/t16907);
float t16909 = (t16908*float(0.16));
float t16910 = (t16797+t16909);
float t16911 = (t16910*float(0.16));
float t16912 = (t16799+t16911);
float t16913 = (t16912*t16912);
float t16914 = (t16905*t16806);
float t16915 = (t16914/t16907);
float t16916 = (t16915*float(0.16));
float t16917 = (t16804+t16916);
float t16918 = (t16917*float(0.16));
float t16919 = (t16806+t16918);
float t16920 = (t16919*t16919);
float t16921 = (t16913+t16920);
float t16922 = (t16905*t16814);
float t16923 = (t16922/t16907);
float t16924 = (t16923*float(0.16));
float t16925 = (t16812+t16924);
float t16926 = (t16925*float(0.16));
float t16927 = (t16814+t16926);
float t16928 = (t16927*t16927);
float t16929 = (t16921+t16928);
float t16930 = sqrt(t16929);
float t16931 = (t16930*t16930);
bool t16932 = (t16931<1);
float t16933 = (t16799*t16799);
float t16934 = (t16806*t16806);
float t16935 = (t16933+t16934);
float t16936 = (t16814*t16814);
float t16937 = (t16935+t16936);
float t16938 = sqrt(t16937);
float t16939 = (t16938*t16938);
bool t16940 = (t16939>1);
bool t16941 = (t16932&&t16940);
float t16942;
float t16943;
float t16944;
float t16945;
if(t16941){
t16942 = 0;
t16943 = 0;
t16944 = 0;
t16945 = 1;
} else {
t16942 = 0;
t16943 = 0;
t16944 = 0;
t16945 = 0;
}
float t16946 = (1-t16899);
float t16947 = (t16854*t16946);
float t16948 = (t16899+t16947);
float t16949 = (1-t16948);
float t16950 = (t16945*t16949);
float t16951 = (t16942*t16950);
float t16952 = (t16903+t16951);
bool t16953 = (t16806>0);
bool t16954 = (t16919>0);
bool t16955 = (!t16954);
bool t16956 = (t16953&&t16955);
bool t16957 = (!t16953);
bool t16958 = (t16954&&t16957);
bool t16959 = (t16956||t16958);
bool t16960 = (t16931<196);
bool t16961 = (t16931>float(6.76));
bool t16962 = (t16960&&t16961);
bool t16963 = (t16959&&t16962);
float t16964;
float t16965;
float t16966;
float t16967;
if(t16963){
float t16968 = (t16919/t16917);
float t16969 = (-t16968);
float t16970 = (t16910*t16969);
float t16971 = (t16912+t16970);
float t16972 = atan(t16971,t16927);
float t16973 = (u1.u0/30);
float t16974 = (t16972+t16973);
float t16975 = (2*3.1415927);
float t16976 = (t16974+t16975);
float t16977 = mod(t16976,2);
float t16978 = (t16977*3.1415927);
float t16979 = (2*3.1415927);
float t16980 = (t16978/t16979);
float t16981 = (t16971*t16971);
float t16982 = (t16917*t16969);
float t16983 = (t16919+t16982);
float t16984 = (t16983*t16983);
float t16985 = (t16981+t16984);
float t16986 = (t16925*t16969);
float t16987 = (t16927+t16986);
float t16988 = (t16987*t16987);
float t16989 = (t16985+t16988);
float t16990 = sqrt(t16989);
float t16991 = (t16990*t16990);
float t16992 = sqrt(t16991);
float t16993 = (t16992-float(2.6));
float t16994 = (t16993/float(11.4));
vec4 t16995 = texture(s4,vec2(t16980,t16994));
t16964 = t16995.x;
t16965 = t16995.y;
t16966 = t16995.z;
float t16996;
if(t16963){
t16996 = 1;
} else {
t16996 = 0;
}
float t16997 = (t16995.x*t16995.x);
float t16998 = (t16995.y*t16995.y);
float t16999 = (t16997+t16998);
float t17000 = (t16995.z*t16995.z);
float t17001 = (t16999+t17000);
float t17002 = sqrt(t17001);
float t17003 = (t17002*t17002);
float t17004 = (t17003/float(3.0));
bool t17005 = (t17004<=1);
float t17006;
if(t17005){
t17006 = t17004;
} else {
t17006 = 1;
}
bool t17007 = (t17006>=0);
float t17008;
if(t17007){
t17008 = t17006;
} else {
t17008 = 0;
}
float t17009 = (t16996*t17008);
t16967 = t17009;
} else {
t16964 = 0;
t16965 = 0;
t16966 = 0;
t16967 = 0;
}
float t17010 = (1-t16948);
float t17011 = (t16945*t17010);
float t17012 = (t16948+t17011);
float t17013 = (1-t17012);
float t17014 = (t16967*t17013);
float t17015 = (t16964*t17014);
float t17016 = (t16952+t17015);
float t17017 = (-float(1.5));
float t17018 = (t17017*t180);
float t17019 = (t17018*t16912);
float t17020 = pow(t16931,float(2.5));
float t17021 = (t17019/t17020);
float t17022 = (t17021*float(0.16));
float t17023 = (t16910+t17022);
float t17024 = (t17023*float(0.16));
float t17025 = (t16912+t17024);
float t17026 = (t17025*t17025);
float t17027 = (t17018*t16919);
float t17028 = (t17027/t17020);
float t17029 = (t17028*float(0.16));
float t17030 = (t16917+t17029);
float t17031 = (t17030*float(0.16));
float t17032 = (t16919+t17031);
float t17033 = (t17032*t17032);
float t17034 = (t17026+t17033);
float t17035 = (t17018*t16927);
float t17036 = (t17035/t17020);
float t17037 = (t17036*float(0.16));
float t17038 = (t16925+t17037);
float t17039 = (t17038*float(0.16));
float t17040 = (t16927+t17039);
float t17041 = (t17040*t17040);
float t17042 = (t17034+t17041);
float t17043 = sqrt(t17042);
float t17044 = (t17043*t17043);
bool t17045 = (t17044<1);
float t17046 = (t16912*t16912);
float t17047 = (t16919*t16919);
float t17048 = (t17046+t17047);
float t17049 = (t16927*t16927);
float t17050 = (t17048+t17049);
float t17051 = sqrt(t17050);
float t17052 = (t17051*t17051);
bool t17053 = (t17052>1);
bool t17054 = (t17045&&t17053);
float t17055;
float t17056;
float t17057;
float t17058;
if(t17054){
t17055 = 0;
t17056 = 0;
t17057 = 0;
t17058 = 1;
} else {
t17055 = 0;
t17056 = 0;
t17057 = 0;
t17058 = 0;
}
float t17059 = (1-t17012);
float t17060 = (t16967*t17059);
float t17061 = (t17012+t17060);
float t17062 = (1-t17061);
float t17063 = (t17058*t17062);
float t17064 = (t17055*t17063);
float t17065 = (t17016+t17064);
bool t17066 = (t16919>0);
bool t17067 = (t17032>0);
bool t17068 = (!t17067);
bool t17069 = (t17066&&t17068);
bool t17070 = (!t17066);
bool t17071 = (t17067&&t17070);
bool t17072 = (t17069||t17071);
bool t17073 = (t17044<196);
bool t17074 = (t17044>float(6.76));
bool t17075 = (t17073&&t17074);
bool t17076 = (t17072&&t17075);
float t17077;
float t17078;
float t17079;
float t17080;
if(t17076){
float t17081 = (t17032/t17030);
float t17082 = (-t17081);
float t17083 = (t17023*t17082);
float t17084 = (t17025+t17083);
float t17085 = atan(t17084,t17040);
float t17086 = (u1.u0/30);
float t17087 = (t17085+t17086);
float t17088 = (2*3.1415927);
float t17089 = (t17087+t17088);
float t17090 = mod(t17089,2);
float t17091 = (t17090*3.1415927);
float t17092 = (2*3.1415927);
float t17093 = (t17091/t17092);
float t17094 = (t17084*t17084);
float t17095 = (t17030*t17082);
float t17096 = (t17032+t17095);
float t17097 = (t17096*t17096);
float t17098 = (t17094+t17097);
float t17099 = (t17038*t17082);
float t17100 = (t17040+t17099);
float t17101 = (t17100*t17100);
float t17102 = (t17098+t17101);
float t17103 = sqrt(t17102);
float t17104 = (t17103*t17103);
float t17105 = sqrt(t17104);
float t17106 = (t17105-float(2.6));
float t17107 = (t17106/float(11.4));
vec4 t17108 = texture(s4,vec2(t17093,t17107));
t17077 = t17108.x;
t17078 = t17108.y;
t17079 = t17108.z;
float t17109;
if(t17076){
t17109 = 1;
} else {
t17109 = 0;
}
float t17110 = (t17108.x*t17108.x);
float t17111 = (t17108.y*t17108.y);
float t17112 = (t17110+t17111);
float t17113 = (t17108.z*t17108.z);
float t17114 = (t17112+t17113);
float t17115 = sqrt(t17114);
float t17116 = (t17115*t17115);
float t17117 = (t17116/float(3.0));
bool t17118 = (t17117<=1);
float t17119;
if(t17118){
t17119 = t17117;
} else {
t17119 = 1;
}
bool t17120 = (t17119>=0);
float t17121;
if(t17120){
t17121 = t17119;
} else {
t17121 = 0;
}
float t17122 = (t17109*t17121);
t17080 = t17122;
} else {
t17077 = 0;
t17078 = 0;
t17079 = 0;
t17080 = 0;
}
float t17123 = (1-t17061);
float t17124 = (t17058*t17123);
float t17125 = (t17061+t17124);
float t17126 = (1-t17125);
float t17127 = (t17080*t17126);
float t17128 = (t17077*t17127);
float t17129 = (t17065+t17128);
float t17130 = (-float(1.5));
float t17131 = (t17130*t180);
float t17132 = (t17131*t17025);
float t17133 = pow(t17044,float(2.5));
float t17134 = (t17132/t17133);
float t17135 = (t17134*float(0.16));
float t17136 = (t17023+t17135);
float t17137 = (t17131*t17040);
float t17138 = (t17137/t17133);
float t17139 = (t17138*float(0.16));
float t17140 = (t17038+t17139);
float t17141 = atan(t17136,t17140);
float t17142 = (t17141+float(4.5));
float t17143 = (2*3.1415927);
float t17144 = mod(t17142,t17143);
float t17145 = (2*3.1415927);
float t17146 = (t17144/t17145);
float t17147 = (t17131*t17032);
float t17148 = (t17147/t17133);
float t17149 = (t17148*float(0.16));
float t17150 = (t17030+t17149);
float t17151 = (t17136*t17136);
float t17152 = (t17140*t17140);
float t17153 = (t17151+t17152);
float t17154 = sqrt(t17153);
float t17155 = atan(t17150,t17154);
float t17156 = (3.1415927/2);
float t17157 = (t17155+t17156);
float t17158 = (t17157/3.1415927);
vec4 t17159 = texture(s5,vec2(t17146,t17158));
float t17160 = (1-t17125);
float t17161 = (t17080*t17160);
float t17162 = (t17125+t17161);
float t17163 = (1-t17162);
float t17164 = (1*t17163);
float t17165 = (t17159.x*t17164);
float t17166 = (t17129+t17165);
float t17167 = (t93*t97);
float t17168 = (0+t17167);
float t17169 = (t112*t161);
float t17170 = (t17168+t17169);
float t17171 = (t219*t226);
float t17172 = (t17170+t17171);
float t17173 = (t241*t290);
float t17174 = (t17172+t17173);
float t17175 = (t332*t339);
float t17176 = (t17174+t17175);
float t17177 = (t354*t403);
float t17178 = (t17176+t17177);
float t17179 = (t445*t452);
float t17180 = (t17178+t17179);
float t17181 = (t467*t516);
float t17182 = (t17180+t17181);
float t17183 = (t558*t565);
float t17184 = (t17182+t17183);
float t17185 = (t580*t629);
float t17186 = (t17184+t17185);
float t17187 = (t671*t678);
float t17188 = (t17186+t17187);
float t17189 = (t693*t742);
float t17190 = (t17188+t17189);
float t17191 = (t784*t791);
float t17192 = (t17190+t17191);
float t17193 = (t806*t855);
float t17194 = (t17192+t17193);
float t17195 = (t897*t904);
float t17196 = (t17194+t17195);
float t17197 = (t919*t968);
float t17198 = (t17196+t17197);
float t17199 = (t1010*t1017);
float t17200 = (t17198+t17199);
float t17201 = (t1032*t1081);
float t17202 = (t17200+t17201);
float t17203 = (t1123*t1130);
float t17204 = (t17202+t17203);
float t17205 = (t1145*t1194);
float t17206 = (t17204+t17205);
float t17207 = (t1236*t1243);
float t17208 = (t17206+t17207);
float t17209 = (t1258*t1307);
float t17210 = (t17208+t17209);
float t17211 = (t1349*t1356);
float t17212 = (t17210+t17211);
float t17213 = (t1371*t1420);
float t17214 = (t17212+t17213);
float t17215 = (t1462*t1469);
float t17216 = (t17214+t17215);
float t17217 = (t1484*t1533);
float t17218 = (t17216+t17217);
float t17219 = (t1575*t1582);
float t17220 = (t17218+t17219);
float t17221 = (t1597*t1646);
float t17222 = (t17220+t17221);
float t17223 = (t1688*t1695);
float t17224 = (t17222+t17223);
float t17225 = (t1710*t1759);
float t17226 = (t17224+t17225);
float t17227 = (t1801*t1808);
float t17228 = (t17226+t17227);
float t17229 = (t1823*t1872);
float t17230 = (t17228+t17229);
float t17231 = (t1914*t1921);
float t17232 = (t17230+t17231);
float t17233 = (t1936*t1985);
float t17234 = (t17232+t17233);
float t17235 = (t2027*t2034);
float t17236 = (t17234+t17235);
float t17237 = (t2049*t2098);
float t17238 = (t17236+t17237);
float t17239 = (t2140*t2147);
float t17240 = (t17238+t17239);
float t17241 = (t2162*t2211);
float t17242 = (t17240+t17241);
float t17243 = (t2253*t2260);
float t17244 = (t17242+t17243);
float t17245 = (t2275*t2324);
float t17246 = (t17244+t17245);
float t17247 = (t2366*t2373);
float t17248 = (t17246+t17247);
float t17249 = (t2388*t2437);
float t17250 = (t17248+t17249);
float t17251 = (t2479*t2486);
float t17252 = (t17250+t17251);
float t17253 = (t2501*t2550);
float t17254 = (t17252+t17253);
float t17255 = (t2592*t2599);
float t17256 = (t17254+t17255);
float t17257 = (t2614*t2663);
float t17258 = (t17256+t17257);
float t17259 = (t2705*t2712);
float t17260 = (t17258+t17259);
float t17261 = (t2727*t2776);
float t17262 = (t17260+t17261);
float t17263 = (t2818*t2825);
float t17264 = (t17262+t17263);
float t17265 = (t2840*t2889);
float t17266 = (t17264+t17265);
float t17267 = (t2931*t2938);
float t17268 = (t17266+t17267);
float t17269 = (t2953*t3002);
float t17270 = (t17268+t17269);
float t17271 = (t3044*t3051);
float t17272 = (t17270+t17271);
float t17273 = (t3066*t3115);
float t17274 = (t17272+t17273);
float t17275 = (t3157*t3164);
float t17276 = (t17274+t17275);
float t17277 = (t3179*t3228);
float t17278 = (t17276+t17277);
float t17279 = (t3270*t3277);
float t17280 = (t17278+t17279);
float t17281 = (t3292*t3341);
float t17282 = (t17280+t17281);
float t17283 = (t3383*t3390);
float t17284 = (t17282+t17283);
float t17285 = (t3405*t3454);
float t17286 = (t17284+t17285);
float t17287 = (t3496*t3503);
float t17288 = (t17286+t17287);
float t17289 = (t3518*t3567);
float t17290 = (t17288+t17289);
float t17291 = (t3609*t3616);
float t17292 = (t17290+t17291);
float t17293 = (t3631*t3680);
float t17294 = (t17292+t17293);
float t17295 = (t3722*t3729);
float t17296 = (t17294+t17295);
float t17297 = (t3744*t3793);
float t17298 = (t17296+t17297);
float t17299 = (t3835*t3842);
float t17300 = (t17298+t17299);
float t17301 = (t3857*t3906);
float t17302 = (t17300+t17301);
float t17303 = (t3948*t3955);
float t17304 = (t17302+t17303);
float t17305 = (t3970*t4019);
float t17306 = (t17304+t17305);
float t17307 = (t4061*t4068);
float t17308 = (t17306+t17307);
float t17309 = (t4083*t4132);
float t17310 = (t17308+t17309);
float t17311 = (t4174*t4181);
float t17312 = (t17310+t17311);
float t17313 = (t4196*t4245);
float t17314 = (t17312+t17313);
float t17315 = (t4287*t4294);
float t17316 = (t17314+t17315);
float t17317 = (t4309*t4358);
float t17318 = (t17316+t17317);
float t17319 = (t4400*t4407);
float t17320 = (t17318+t17319);
float t17321 = (t4422*t4471);
float t17322 = (t17320+t17321);
float t17323 = (t4513*t4520);
float t17324 = (t17322+t17323);
float t17325 = (t4535*t4584);
float t17326 = (t17324+t17325);
float t17327 = (t4626*t4633);
float t17328 = (t17326+t17327);
float t17329 = (t4648*t4697);
float t17330 = (t17328+t17329);
float t17331 = (t4739*t4746);
float t17332 = (t17330+t17331);
float t17333 = (t4761*t4810);
float t17334 = (t17332+t17333);
float t17335 = (t4852*t4859);
float t17336 = (t17334+t17335);
float t17337 = (t4874*t4923);
float t17338 = (t17336+t17337);
float t17339 = (t4965*t4972);
float t17340 = (t17338+t17339);
float t17341 = (t4987*t5036);
float t17342 = (t17340+t17341);
float t17343 = (t5078*t5085);
float t17344 = (t17342+t17343);
float t17345 = (t5100*t5149);
float t17346 = (t17344+t17345);
float t17347 = (t5191*t5198);
float t17348 = (t17346+t17347);
float t17349 = (t5213*t5262);
float t17350 = (t17348+t17349);
float t17351 = (t5304*t5311);
float t17352 = (t17350+t17351);
float t17353 = (t5326*t5375);
float t17354 = (t17352+t17353);
float t17355 = (t5417*t5424);
float t17356 = (t17354+t17355);
float t17357 = (t5439*t5488);
float t17358 = (t17356+t17357);
float t17359 = (t5530*t5537);
float t17360 = (t17358+t17359);
float t17361 = (t5552*t5601);
float t17362 = (t17360+t17361);
float t17363 = (t5643*t5650);
float t17364 = (t17362+t17363);
float t17365 = (t5665*t5714);
float t17366 = (t17364+t17365);
float t17367 = (t5756*t5763);
float t17368 = (t17366+t17367);
float t17369 = (t5778*t5827);
float t17370 = (t17368+t17369);
float t17371 = (t5869*t5876);
float t17372 = (t17370+t17371);
float t17373 = (t5891*t5940);
float t17374 = (t17372+t17373);
float t17375 = (t5982*t5989);
float t17376 = (t17374+t17375);
float t17377 = (t6004*t6053);
float t17378 = (t17376+t17377);
float t17379 = (t6095*t6102);
float t17380 = (t17378+t17379);
float t17381 = (t6117*t6166);
float t17382 = (t17380+t17381);
float t17383 = (t6208*t6215);
float t17384 = (t17382+t17383);
float t17385 = (t6230*t6279);
float t17386 = (t17384+t17385);
float t17387 = (t6321*t6328);
float t17388 = (t17386+t17387);
float t17389 = (t6343*t6392);
float t17390 = (t17388+t17389);
float t17391 = (t6434*t6441);
float t17392 = (t17390+t17391);
float t17393 = (t6456*t6505);
float t17394 = (t17392+t17393);
float t17395 = (t6547*t6554);
float t17396 = (t17394+t17395);
float t17397 = (t6569*t6618);
float t17398 = (t17396+t17397);
float t17399 = (t6660*t6667);
float t17400 = (t17398+t17399);
float t17401 = (t6682*t6731);
float t17402 = (t17400+t17401);
float t17403 = (t6773*t6780);
float t17404 = (t17402+t17403);
float t17405 = (t6795*t6844);
float t17406 = (t17404+t17405);
float t17407 = (t6886*t6893);
float t17408 = (t17406+t17407);
float t17409 = (t6908*t6957);
float t17410 = (t17408+t17409);
float t17411 = (t6999*t7006);
float t17412 = (t17410+t17411);
float t17413 = (t7021*t7070);
float t17414 = (t17412+t17413);
float t17415 = (t7112*t7119);
float t17416 = (t17414+t17415);
float t17417 = (t7134*t7183);
float t17418 = (t17416+t17417);
float t17419 = (t7225*t7232);
float t17420 = (t17418+t17419);
float t17421 = (t7247*t7296);
float t17422 = (t17420+t17421);
float t17423 = (t7338*t7345);
float t17424 = (t17422+t17423);
float t17425 = (t7360*t7409);
float t17426 = (t17424+t17425);
float t17427 = (t7451*t7458);
float t17428 = (t17426+t17427);
float t17429 = (t7473*t7522);
float t17430 = (t17428+t17429);
float t17431 = (t7564*t7571);
float t17432 = (t17430+t17431);
float t17433 = (t7586*t7635);
float t17434 = (t17432+t17433);
float t17435 = (t7677*t7684);
float t17436 = (t17434+t17435);
float t17437 = (t7699*t7748);
float t17438 = (t17436+t17437);
float t17439 = (t7790*t7797);
float t17440 = (t17438+t17439);
float t17441 = (t7812*t7861);
float t17442 = (t17440+t17441);
float t17443 = (t7903*t7910);
float t17444 = (t17442+t17443);
float t17445 = (t7925*t7974);
float t17446 = (t17444+t17445);
float t17447 = (t8016*t8023);
float t17448 = (t17446+t17447);
float t17449 = (t8038*t8087);
float t17450 = (t17448+t17449);
float t17451 = (t8129*t8136);
float t17452 = (t17450+t17451);
float t17453 = (t8151*t8200);
float t17454 = (t17452+t17453);
float t17455 = (t8242*t8249);
float t17456 = (t17454+t17455);
float t17457 = (t8264*t8313);
float t17458 = (t17456+t17457);
float t17459 = (t8355*t8362);
float t17460 = (t17458+t17459);
float t17461 = (t8377*t8426);
float t17462 = (t17460+t17461);
float t17463 = (t8468*t8475);
float t17464 = (t17462+t17463);
float t17465 = (t8490*t8539);
float t17466 = (t17464+t17465);
float t17467 = (t8581*t8588);
float t17468 = (t17466+t17467);
float t17469 = (t8603*t8652);
float t17470 = (t17468+t17469);
float t17471 = (t8694*t8701);
float t17472 = (t17470+t17471);
float t17473 = (t8716*t8765);
float t17474 = (t17472+t17473);
float t17475 = (t8807*t8814);
float t17476 = (t17474+t17475);
float t17477 = (t8829*t8878);
float t17478 = (t17476+t17477);
float t17479 = (t8920*t8927);
float t17480 = (t17478+t17479);
float t17481 = (t8942*t8991);
float t17482 = (t17480+t17481);
float t17483 = (t9033*t9040);
float t17484 = (t17482+t17483);
float t17485 = (t9055*t9104);
float t17486 = (t17484+t17485);
float t17487 = (t9146*t9153);
float t17488 = (t17486+t17487);
float t17489 = (t9168*t9217);
float t17490 = (t17488+t17489);
float t17491 = (t9259*t9266);
float t17492 = (t17490+t17491);
float t17493 = (t9281*t9330);
float t17494 = (t17492+t17493);
float t17495 = (t9372*t9379);
float t17496 = (t17494+t17495);
float t17497 = (t9394*t9443);
float t17498 = (t17496+t17497);
float t17499 = (t9485*t9492);
float t17500 = (t17498+t17499);
float t17501 = (t9507*t9556);
float t17502 = (t17500+t17501);
float t17503 = (t9598*t9605);
float t17504 = (t17502+t17503);
float t17505 = (t9620*t9669);
float t17506 = (t17504+t17505);
float t17507 = (t9711*t9718);
float t17508 = (t17506+t17507);
float t17509 = (t9733*t9782);
float t17510 = (t17508+t17509);
float t17511 = (t9824*t9831);
float t17512 = (t17510+t17511);
float t17513 = (t9846*t9895);
float t17514 = (t17512+t17513);
float t17515 = (t9937*t9944);
float t17516 = (t17514+t17515);
float t17517 = (t9959*t10008);
float t17518 = (t17516+t17517);
float t17519 = (t10050*t10057);
float t17520 = (t17518+t17519);
float t17521 = (t10072*t10121);
float t17522 = (t17520+t17521);
float t17523 = (t10163*t10170);
float t17524 = (t17522+t17523);
float t17525 = (t10185*t10234);
float t17526 = (t17524+t17525);
float t17527 = (t10276*t10283);
float t17528 = (t17526+t17527);
float t17529 = (t10298*t10347);
float t17530 = (t17528+t17529);
float t17531 = (t10389*t10396);
float t17532 = (t17530+t17531);
float t17533 = (t10411*t10460);
float t17534 = (t17532+t17533);
float t17535 = (t10502*t10509);
float t17536 = (t17534+t17535);
float t17537 = (t10524*t10573);
float t17538 = (t17536+t17537);
float t17539 = (t10615*t10622);
float t17540 = (t17538+t17539);
float t17541 = (t10637*t10686);
float t17542 = (t17540+t17541);
float t17543 = (t10728*t10735);
float t17544 = (t17542+t17543);
float t17545 = (t10750*t10799);
float t17546 = (t17544+t17545);
float t17547 = (t10841*t10848);
float t17548 = (t17546+t17547);
float t17549 = (t10863*t10912);
float t17550 = (t17548+t17549);
float t17551 = (t10954*t10961);
float t17552 = (t17550+t17551);
float t17553 = (t10976*t11025);
float t17554 = (t17552+t17553);
float t17555 = (t11067*t11074);
float t17556 = (t17554+t17555);
float t17557 = (t11089*t11138);
float t17558 = (t17556+t17557);
float t17559 = (t11180*t11187);
float t17560 = (t17558+t17559);
float t17561 = (t11202*t11251);
float t17562 = (t17560+t17561);
float t17563 = (t11293*t11300);
float t17564 = (t17562+t17563);
float t17565 = (t11315*t11364);
float t17566 = (t17564+t17565);
float t17567 = (t11406*t11413);
float t17568 = (t17566+t17567);
float t17569 = (t11428*t11477);
float t17570 = (t17568+t17569);
float t17571 = (t11519*t11526);
float t17572 = (t17570+t17571);
float t17573 = (t11541*t11590);
float t17574 = (t17572+t17573);
float t17575 = (t11632*t11639);
float t17576 = (t17574+t17575);
float t17577 = (t11654*t11703);
float t17578 = (t17576+t17577);
float t17579 = (t11745*t11752);
float t17580 = (t17578+t17579);
float t17581 = (t11767*t11816);
float t17582 = (t17580+t17581);
float t17583 = (t11858*t11865);
float t17584 = (t17582+t17583);
float t17585 = (t11880*t11929);
float t17586 = (t17584+t17585);
float t17587 = (t11971*t11978);
float t17588 = (t17586+t17587);
float t17589 = (t11993*t12042);
float t17590 = (t17588+t17589);
float t17591 = (t12084*t12091);
float t17592 = (t17590+t17591);
float t17593 = (t12106*t12155);
float t17594 = (t17592+t17593);
float t17595 = (t12197*t12204);
float t17596 = (t17594+t17595);
float t17597 = (t12219*t12268);
float t17598 = (t17596+t17597);
float t17599 = (t12310*t12317);
float t17600 = (t17598+t17599);
float t17601 = (t12332*t12381);
float t17602 = (t17600+t17601);
float t17603 = (t12423*t12430);
float t17604 = (t17602+t17603);
float t17605 = (t12445*t12494);
float t17606 = (t17604+t17605);
float t17607 = (t12536*t12543);
float t17608 = (t17606+t17607);
float t17609 = (t12558*t12607);
float t17610 = (t17608+t17609);
float t17611 = (t12649*t12656);
float t17612 = (t17610+t17611);
float t17613 = (t12671*t12720);
float t17614 = (t17612+t17613);
float t17615 = (t12762*t12769);
float t17616 = (t17614+t17615);
float t17617 = (t12784*t12833);
float t17618 = (t17616+t17617);
float t17619 = (t12875*t12882);
float t17620 = (t17618+t17619);
float t17621 = (t12897*t12946);
float t17622 = (t17620+t17621);
float t17623 = (t12988*t12995);
float t17624 = (t17622+t17623);
float t17625 = (t13010*t13059);
float t17626 = (t17624+t17625);
float t17627 = (t13101*t13108);
float t17628 = (t17626+t17627);
float t17629 = (t13123*t13172);
float t17630 = (t17628+t17629);
float t17631 = (t13214*t13221);
float t17632 = (t17630+t17631);
float t17633 = (t13236*t13285);
float t17634 = (t17632+t17633);
float t17635 = (t13327*t13334);
float t17636 = (t17634+t17635);
float t17637 = (t13349*t13398);
float t17638 = (t17636+t17637);
float t17639 = (t13440*t13447);
float t17640 = (t17638+t17639);
float t17641 = (t13462*t13511);
float t17642 = (t17640+t17641);
float t17643 = (t13553*t13560);
float t17644 = (t17642+t17643);
float t17645 = (t13575*t13624);
float t17646 = (t17644+t17645);
float t17647 = (t13666*t13673);
float t17648 = (t17646+t17647);
float t17649 = (t13688*t13737);
float t17650 = (t17648+t17649);
float t17651 = (t13779*t13786);
float t17652 = (t17650+t17651);
float t17653 = (t13801*t13850);
float t17654 = (t17652+t17653);
float t17655 = (t13892*t13899);
float t17656 = (t17654+t17655);
float t17657 = (t13914*t13963);
float t17658 = (t17656+t17657);
float t17659 = (t14005*t14012);
float t17660 = (t17658+t17659);
float t17661 = (t14027*t14076);
float t17662 = (t17660+t17661);
float t17663 = (t14118*t14125);
float t17664 = (t17662+t17663);
float t17665 = (t14140*t14189);
float t17666 = (t17664+t17665);
float t17667 = (t14231*t14238);
float t17668 = (t17666+t17667);
float t17669 = (t14253*t14302);
float t17670 = (t17668+t17669);
float t17671 = (t14344*t14351);
float t17672 = (t17670+t17671);
float t17673 = (t14366*t14415);
float t17674 = (t17672+t17673);
float t17675 = (t14457*t14464);
float t17676 = (t17674+t17675);
float t17677 = (t14479*t14528);
float t17678 = (t17676+t17677);
float t17679 = (t14570*t14577);
float t17680 = (t17678+t17679);
float t17681 = (t14592*t14641);
float t17682 = (t17680+t17681);
float t17683 = (t14683*t14690);
float t17684 = (t17682+t17683);
float t17685 = (t14705*t14754);
float t17686 = (t17684+t17685);
float t17687 = (t14796*t14803);
float t17688 = (t17686+t17687);
float t17689 = (t14818*t14867);
float t17690 = (t17688+t17689);
float t17691 = (t14909*t14916);
float t17692 = (t17690+t17691);
float t17693 = (t14931*t14980);
float t17694 = (t17692+t17693);
float t17695 = (t15022*t15029);
float t17696 = (t17694+t17695);
float t17697 = (t15044*t15093);
float t17698 = (t17696+t17697);
float t17699 = (t15135*t15142);
float t17700 = (t17698+t17699);
float t17701 = (t15157*t15206);
float t17702 = (t17700+t17701);
float t17703 = (t15248*t15255);
float t17704 = (t17702+t17703);
float t17705 = (t15270*t15319);
float t17706 = (t17704+t17705);
float t17707 = (t15361*t15368);
float t17708 = (t17706+t17707);
float t17709 = (t15383*t15432);
float t17710 = (t17708+t17709);
float t17711 = (t15474*t15481);
float t17712 = (t17710+t17711);
float t17713 = (t15496*t15545);
float t17714 = (t17712+t17713);
float t17715 = (t15587*t15594);
float t17716 = (t17714+t17715);
float t17717 = (t15609*t15658);
float t17718 = (t17716+t17717);
float t17719 = (t15700*t15707);
float t17720 = (t17718+t17719);
float t17721 = (t15722*t15771);
float t17722 = (t17720+t17721);
float t17723 = (t15813*t15820);
float t17724 = (t17722+t17723);
float t17725 = (t15835*t15884);
float t17726 = (t17724+t17725);
float t17727 = (t15926*t15933);
float t17728 = (t17726+t17727);
float t17729 = (t15948*t15997);
float t17730 = (t17728+t17729);
float t17731 = (t16039*t16046);
float t17732 = (t17730+t17731);
float t17733 = (t16061*t16110);
float t17734 = (t17732+t17733);
float t17735 = (t16152*t16159);
float t17736 = (t17734+t17735);
float t17737 = (t16174*t16223);
float t17738 = (t17736+t17737);
float t17739 = (t16265*t16272);
float t17740 = (t17738+t17739);
float t17741 = (t16287*t16336);
float t17742 = (t17740+t17741);
float t17743 = (t16378*t16385);
float t17744 = (t17742+t17743);
float t17745 = (t16400*t16449);
float t17746 = (t17744+t17745);
float t17747 = (t16491*t16498);
float t17748 = (t17746+t17747);
float t17749 = (t16513*t16562);
float t17750 = (t17748+t17749);
float t17751 = (t16604*t16611);
float t17752 = (t17750+t17751);
float t17753 = (t16626*t16675);
float t17754 = (t17752+t17753);
float t17755 = (t16717*t16724);
float t17756 = (t17754+t17755);
float t17757 = (t16739*t16788);
float t17758 = (t17756+t17757);
float t17759 = (t16830*t16837);
float t17760 = (t17758+t17759);
float t17761 = (t16852*t16901);
float t17762 = (t17760+t17761);
float t17763 = (t16943*t16950);
float t17764 = (t17762+t17763);
float t17765 = (t16965*t17014);
float t17766 = (t17764+t17765);
float t17767 = (t17056*t17063);
float t17768 = (t17766+t17767);
float t17769 = (t17078*t17127);
float t17770 = (t17768+t17769);
float t17771 = (t17159.y*t17164);
float t17772 = (t17770+t17771);
float t17773 = (t94*t97);
float t17774 = (0+t17773);
float t17775 = (t113*t161);
float t17776 = (t17774+t17775);
float t17777 = (t220*t226);
float t17778 = (t17776+t17777);
float t17779 = (t242*t290);
float t17780 = (t17778+t17779);
float t17781 = (t333*t339);
float t17782 = (t17780+t17781);
float t17783 = (t355*t403);
float t17784 = (t17782+t17783);
float t17785 = (t446*t452);
float t17786 = (t17784+t17785);
float t17787 = (t468*t516);
float t17788 = (t17786+t17787);
float t17789 = (t559*t565);
float t17790 = (t17788+t17789);
float t17791 = (t581*t629);
float t17792 = (t17790+t17791);
float t17793 = (t672*t678);
float t17794 = (t17792+t17793);
float t17795 = (t694*t742);
float t17796 = (t17794+t17795);
float t17797 = (t785*t791);
float t17798 = (t17796+t17797);
float t17799 = (t807*t855);
float t17800 = (t17798+t17799);
float t17801 = (t898*t904);
float t17802 = (t17800+t17801);
float t17803 = (t920*t968);
float t17804 = (t17802+t17803);
float t17805 = (t1011*t1017);
float t17806 = (t17804+t17805);
float t17807 = (t1033*t1081);
float t17808 = (t17806+t17807);
float t17809 = (t1124*t1130);
float t17810 = (t17808+t17809);
float t17811 = (t1146*t1194);
float t17812 = (t17810+t17811);
float t17813 = (t1237*t1243);
float t17814 = (t17812+t17813);
float t17815 = (t1259*t1307);
float t17816 = (t17814+t17815);
float t17817 = (t1350*t1356);
float t17818 = (t17816+t17817);
float t17819 = (t1372*t1420);
float t17820 = (t17818+t17819);
float t17821 = (t1463*t1469);
float t17822 = (t17820+t17821);
float t17823 = (t1485*t1533);
float t17824 = (t17822+t17823);
float t17825 = (t1576*t1582);
float t17826 = (t17824+t17825);
float t17827 = (t1598*t1646);
float t17828 = (t17826+t17827);
float t17829 = (t1689*t1695);
float t17830 = (t17828+t17829);
float t17831 = (t1711*t1759);
float t17832 = (t17830+t17831);
float t17833 = (t1802*t1808);
float t17834 = (t17832+t17833);
float t17835 = (t1824*t1872);
float t17836 = (t17834+t17835);
float t17837 = (t1915*t1921);
float t17838 = (t17836+t17837);
float t17839 = (t1937*t1985);
float t17840 = (t17838+t17839);
float t17841 = (t2028*t2034);
float t17842 = (t17840+t17841);
float t17843 = (t2050*t2098);
float t17844 = (t17842+t17843);
float t17845 = (t2141*t2147);
float t17846 = (t17844+t17845);
float t17847 = (t2163*t2211);
float t17848 = (t17846+t17847);
float t17849 = (t2254*t2260);
float t17850 = (t17848+t17849);
float t17851 = (t2276*t2324);
float t17852 = (t17850+t17851);
float t17853 = (t2367*t2373);
float t17854 = (t17852+t17853);
float t17855 = (t2389*t2437);
float t17856 = (t17854+t17855);
float t17857 = (t2480*t2486);
float t17858 = (t17856+t17857);
float t17859 = (t2502*t2550);
float t17860 = (t17858+t17859);
float t17861 = (t2593*t2599);
float t17862 = (t17860+t17861);
float t17863 = (t2615*t2663);
float t17864 = (t17862+t17863);
float t17865 = (t2706*t2712);
float t17866 = (t17864+t17865);
float t17867 = (t2728*t2776);
float t17868 = (t17866+t17867);
float t17869 = (t2819*t2825);
float t17870 = (t17868+t17869);
float t17871 = (t2841*t2889);
float t17872 = (t17870+t17871);
float t17873 = (t2932*t2938);
float t17874 = (t17872+t17873);
float t17875 = (t2954*t3002);
float t17876 = (t17874+t17875);
float t17877 = (t3045*t3051);
float t17878 = (t17876+t17877);
float t17879 = (t3067*t3115);
float t17880 = (t17878+t17879);
float t17881 = (t3158*t3164);
float t17882 = (t17880+t17881);
float t17883 = (t3180*t3228);
float t17884 = (t17882+t17883);
float t17885 = (t3271*t3277);
float t17886 = (t17884+t17885);
float t17887 = (t3293*t3341);
float t17888 = (t17886+t17887);
float t17889 = (t3384*t3390);
float t17890 = (t17888+t17889);
float t17891 = (t3406*t3454);
float t17892 = (t17890+t17891);
float t17893 = (t3497*t3503);
float t17894 = (t17892+t17893);
float t17895 = (t3519*t3567);
float t17896 = (t17894+t17895);
float t17897 = (t3610*t3616);
float t17898 = (t17896+t17897);
float t17899 = (t3632*t3680);
float t17900 = (t17898+t17899);
float t17901 = (t3723*t3729);
float t17902 = (t17900+t17901);
float t17903 = (t3745*t3793);
float t17904 = (t17902+t17903);
float t17905 = (t3836*t3842);
float t17906 = (t17904+t17905);
float t17907 = (t3858*t3906);
float t17908 = (t17906+t17907);
float t17909 = (t3949*t3955);
float t17910 = (t17908+t17909);
float t17911 = (t3971*t4019);
float t17912 = (t17910+t17911);
float t17913 = (t4062*t4068);
float t17914 = (t17912+t17913);
float t17915 = (t4084*t4132);
float t17916 = (t17914+t17915);
float t17917 = (t4175*t4181);
float t17918 = (t17916+t17917);
float t17919 = (t4197*t4245);
float t17920 = (t17918+t17919);
float t17921 = (t4288*t4294);
float t17922 = (t17920+t17921);
float t17923 = (t4310*t4358);
float t17924 = (t17922+t17923);
float t17925 = (t4401*t4407);
float t17926 = (t17924+t17925);
float t17927 = (t4423*t4471);
float t17928 = (t17926+t17927);
float t17929 = (t4514*t4520);
float t17930 = (t17928+t17929);
float t17931 = (t4536*t4584);
float t17932 = (t17930+t17931);
float t17933 = (t4627*t4633);
float t17934 = (t17932+t17933);
float t17935 = (t4649*t4697);
float t17936 = (t17934+t17935);
float t17937 = (t4740*t4746);
float t17938 = (t17936+t17937);
float t17939 = (t4762*t4810);
float t17940 = (t17938+t17939);
float t17941 = (t4853*t4859);
float t17942 = (t17940+t17941);
float t17943 = (t4875*t4923);
float t17944 = (t17942+t17943);
float t17945 = (t4966*t4972);
float t17946 = (t17944+t17945);
float t17947 = (t4988*t5036);
float t17948 = (t17946+t17947);
float t17949 = (t5079*t5085);
float t17950 = (t17948+t17949);
float t17951 = (t5101*t5149);
float t17952 = (t17950+t17951);
float t17953 = (t5192*t5198);
float t17954 = (t17952+t17953);
float t17955 = (t5214*t5262);
float t17956 = (t17954+t17955);
float t17957 = (t5305*t5311);
float t17958 = (t17956+t17957);
float t17959 = (t5327*t5375);
float t17960 = (t17958+t17959);
float t17961 = (t5418*t5424);
float t17962 = (t17960+t17961);
float t17963 = (t5440*t5488);
float t17964 = (t17962+t17963);
float t17965 = (t5531*t5537);
float t17966 = (t17964+t17965);
float t17967 = (t5553*t5601);
float t17968 = (t17966+t17967);
float t17969 = (t5644*t5650);
float t17970 = (t17968+t17969);
float t17971 = (t5666*t5714);
float t17972 = (t17970+t17971);
float t17973 = (t5757*t5763);
float t17974 = (t17972+t17973);
float t17975 = (t5779*t5827);
float t17976 = (t17974+t17975);
float t17977 = (t5870*t5876);
float t17978 = (t17976+t17977);
float t17979 = (t5892*t5940);
float t17980 = (t17978+t17979);
float t17981 = (t5983*t5989);
float t17982 = (t17980+t17981);
float t17983 = (t6005*t6053);
float t17984 = (t17982+t17983);
float t17985 = (t6096*t6102);
float t17986 = (t17984+t17985);
float t17987 = (t6118*t6166);
float t17988 = (t17986+t17987);
float t17989 = (t6209*t6215);
float t17990 = (t17988+t17989);
float t17991 = (t6231*t6279);
float t17992 = (t17990+t17991);
float t17993 = (t6322*t6328);
float t17994 = (t17992+t17993);
float t17995 = (t6344*t6392);
float t17996 = (t17994+t17995);
float t17997 = (t6435*t6441);
float t17998 = (t17996+t17997);
float t17999 = (t6457*t6505);
float t18000 = (t17998+t17999);
float t18001 = (t6548*t6554);
float t18002 = (t18000+t18001);
float t18003 = (t6570*t6618);
float t18004 = (t18002+t18003);
float t18005 = (t6661*t6667);
float t18006 = (t18004+t18005);
float t18007 = (t6683*t6731);
float t18008 = (t18006+t18007);
float t18009 = (t6774*t6780);
float t18010 = (t18008+t18009);
float t18011 = (t6796*t6844);
float t18012 = (t18010+t18011);
float t18013 = (t6887*t6893);
float t18014 = (t18012+t18013);
float t18015 = (t6909*t6957);
float t18016 = (t18014+t18015);
float t18017 = (t7000*t7006);
float t18018 = (t18016+t18017);
float t18019 = (t7022*t7070);
float t18020 = (t18018+t18019);
float t18021 = (t7113*t7119);
float t18022 = (t18020+t18021);
float t18023 = (t7135*t7183);
float t18024 = (t18022+t18023);
float t18025 = (t7226*t7232);
float t18026 = (t18024+t18025);
float t18027 = (t7248*t7296);
float t18028 = (t18026+t18027);
float t18029 = (t7339*t7345);
float t18030 = (t18028+t18029);
float t18031 = (t7361*t7409);
float t18032 = (t18030+t18031);
float t18033 = (t7452*t7458);
float t18034 = (t18032+t18033);
float t18035 = (t7474*t7522);
float t18036 = (t18034+t18035);
float t18037 = (t7565*t7571);
float t18038 = (t18036+t18037);
float t18039 = (t7587*t7635);
float t18040 = (t18038+t18039);
float t18041 = (t7678*t7684);
float t18042 = (t18040+t18041);
float t18043 = (t7700*t7748);
float t18044 = (t18042+t18043);
float t18045 = (t7791*t7797);
float t18046 = (t18044+t18045);
float t18047 = (t7813*t7861);
float t18048 = (t18046+t18047);
float t18049 = (t7904*t7910);
float t18050 = (t18048+t18049);
float t18051 = (t7926*t7974);
float t18052 = (t18050+t18051);
float t18053 = (t8017*t8023);
float t18054 = (t18052+t18053);
float t18055 = (t8039*t8087);
float t18056 = (t18054+t18055);
float t18057 = (t8130*t8136);
float t18058 = (t18056+t18057);
float t18059 = (t8152*t8200);
float t18060 = (t18058+t18059);
float t18061 = (t8243*t8249);
float t18062 = (t18060+t18061);
float t18063 = (t8265*t8313);
float t18064 = (t18062+t18063);
float t18065 = (t8356*t8362);
float t18066 = (t18064+t18065);
float t18067 = (t8378*t8426);
float t18068 = (t18066+t18067);
float t18069 = (t8469*t8475);
float t18070 = (t18068+t18069);
float t18071 = (t8491*t8539);
float t18072 = (t18070+t18071);
float t18073 = (t8582*t8588);
float t18074 = (t18072+t18073);
float t18075 = (t8604*t8652);
float t18076 = (t18074+t18075);
float t18077 = (t8695*t8701);
float t18078 = (t18076+t18077);
float t18079 = (t8717*t8765);
float t18080 = (t18078+t18079);
float t18081 = (t8808*t8814);
float t18082 = (t18080+t18081);
float t18083 = (t8830*t8878);
float t18084 = (t18082+t18083);
float t18085 = (t8921*t8927);
float t18086 = (t18084+t18085);
float t18087 = (t8943*t8991);
float t18088 = (t18086+t18087);
float t18089 = (t9034*t9040);
float t18090 = (t18088+t18089);
float t18091 = (t9056*t9104);
float t18092 = (t18090+t18091);
float t18093 = (t9147*t9153);
float t18094 = (t18092+t18093);
float t18095 = (t9169*t9217);
float t18096 = (t18094+t18095);
float t18097 = (t9260*t9266);
float t18098 = (t18096+t18097);
float t18099 = (t9282*t9330);
float t18100 = (t18098+t18099);
float t18101 = (t9373*t9379);
float t18102 = (t18100+t18101);
float t18103 = (t9395*t9443);
float t18104 = (t18102+t18103);
float t18105 = (t9486*t9492);
float t18106 = (t18104+t18105);
float t18107 = (t9508*t9556);
float t18108 = (t18106+t18107);
float t18109 = (t9599*t9605);
float t18110 = (t18108+t18109);
float t18111 = (t9621*t9669);
float t18112 = (t18110+t18111);
float t18113 = (t9712*t9718);
float t18114 = (t18112+t18113);
float t18115 = (t9734*t9782);
float t18116 = (t18114+t18115);
float t18117 = (t9825*t9831);
float t18118 = (t18116+t18117);
float t18119 = (t9847*t9895);
float t18120 = (t18118+t18119);
float t18121 = (t9938*t9944);
float t18122 = (t18120+t18121);
float t18123 = (t9960*t10008);
float t18124 = (t18122+t18123);
float t18125 = (t10051*t10057);
float t18126 = (t18124+t18125);
float t18127 = (t10073*t10121);
float t18128 = (t18126+t18127);
float t18129 = (t10164*t10170);
float t18130 = (t18128+t18129);
float t18131 = (t10186*t10234);
float t18132 = (t18130+t18131);
float t18133 = (t10277*t10283);
float t18134 = (t18132+t18133);
float t18135 = (t10299*t10347);
float t18136 = (t18134+t18135);
float t18137 = (t10390*t10396);
float t18138 = (t18136+t18137);
float t18139 = (t10412*t10460);
float t18140 = (t18138+t18139);
float t18141 = (t10503*t10509);
float t18142 = (t18140+t18141);
float t18143 = (t10525*t10573);
float t18144 = (t18142+t18143);
float t18145 = (t10616*t10622);
float t18146 = (t18144+t18145);
float t18147 = (t10638*t10686);
float t18148 = (t18146+t18147);
float t18149 = (t10729*t10735);
float t18150 = (t18148+t18149);
float t18151 = (t10751*t10799);
float t18152 = (t18150+t18151);
float t18153 = (t10842*t10848);
float t18154 = (t18152+t18153);
float t18155 = (t10864*t10912);
float t18156 = (t18154+t18155);
float t18157 = (t10955*t10961);
float t18158 = (t18156+t18157);
float t18159 = (t10977*t11025);
float t18160 = (t18158+t18159);
float t18161 = (t11068*t11074);
float t18162 = (t18160+t18161);
float t18163 = (t11090*t11138);
float t18164 = (t18162+t18163);
float t18165 = (t11181*t11187);
float t18166 = (t18164+t18165);
float t18167 = (t11203*t11251);
float t18168 = (t18166+t18167);
float t18169 = (t11294*t11300);
float t18170 = (t18168+t18169);
float t18171 = (t11316*t11364);
float t18172 = (t18170+t18171);
float t18173 = (t11407*t11413);
float t18174 = (t18172+t18173);
float t18175 = (t11429*t11477);
float t18176 = (t18174+t18175);
float t18177 = (t11520*t11526);
float t18178 = (t18176+t18177);
float t18179 = (t11542*t11590);
float t18180 = (t18178+t18179);
float t18181 = (t11633*t11639);
float t18182 = (t18180+t18181);
float t18183 = (t11655*t11703);
float t18184 = (t18182+t18183);
float t18185 = (t11746*t11752);
float t18186 = (t18184+t18185);
float t18187 = (t11768*t11816);
float t18188 = (t18186+t18187);
float t18189 = (t11859*t11865);
float t18190 = (t18188+t18189);
float t18191 = (t11881*t11929);
float t18192 = (t18190+t18191);
float t18193 = (t11972*t11978);
float t18194 = (t18192+t18193);
float t18195 = (t11994*t12042);
float t18196 = (t18194+t18195);
float t18197 = (t12085*t12091);
float t18198 = (t18196+t18197);
float t18199 = (t12107*t12155);
float t18200 = (t18198+t18199);
float t18201 = (t12198*t12204);
float t18202 = (t18200+t18201);
float t18203 = (t12220*t12268);
float t18204 = (t18202+t18203);
float t18205 = (t12311*t12317);
float t18206 = (t18204+t18205);
float t18207 = (t12333*t12381);
float t18208 = (t18206+t18207);
float t18209 = (t12424*t12430);
float t18210 = (t18208+t18209);
float t18211 = (t12446*t12494);
float t18212 = (t18210+t18211);
float t18213 = (t12537*t12543);
float t18214 = (t18212+t18213);
float t18215 = (t12559*t12607);
float t18216 = (t18214+t18215);
float t18217 = (t12650*t12656);
float t18218 = (t18216+t18217);
float t18219 = (t12672*t12720);
float t18220 = (t18218+t18219);
float t18221 = (t12763*t12769);
float t18222 = (t18220+t18221);
float t18223 = (t12785*t12833);
float t18224 = (t18222+t18223);
float t18225 = (t12876*t12882);
float t18226 = (t18224+t18225);
float t18227 = (t12898*t12946);
float t18228 = (t18226+t18227);
float t18229 = (t12989*t12995);
float t18230 = (t18228+t18229);
float t18231 = (t13011*t13059);
float t18232 = (t18230+t18231);
float t18233 = (t13102*t13108);
float t18234 = (t18232+t18233);
float t18235 = (t13124*t13172);
float t18236 = (t18234+t18235);
float t18237 = (t13215*t13221);
float t18238 = (t18236+t18237);
float t18239 = (t13237*t13285);
float t18240 = (t18238+t18239);
float t18241 = (t13328*t13334);
float t18242 = (t18240+t18241);
float t18243 = (t13350*t13398);
float t18244 = (t18242+t18243);
float t18245 = (t13441*t13447);
float t18246 = (t18244+t18245);
float t18247 = (t13463*t13511);
float t18248 = (t18246+t18247);
float t18249 = (t13554*t13560);
float t18250 = (t18248+t18249);
float t18251 = (t13576*t13624);
float t18252 = (t18250+t18251);
float t18253 = (t13667*t13673);
float t18254 = (t18252+t18253);
float t18255 = (t13689*t13737);
float t18256 = (t18254+t18255);
float t18257 = (t13780*t13786);
float t18258 = (t18256+t18257);
float t18259 = (t13802*t13850);
float t18260 = (t18258+t18259);
float t18261 = (t13893*t13899);
float t18262 = (t18260+t18261);
float t18263 = (t13915*t13963);
float t18264 = (t18262+t18263);
float t18265 = (t14006*t14012);
float t18266 = (t18264+t18265);
float t18267 = (t14028*t14076);
float t18268 = (t18266+t18267);
float t18269 = (t14119*t14125);
float t18270 = (t18268+t18269);
float t18271 = (t14141*t14189);
float t18272 = (t18270+t18271);
float t18273 = (t14232*t14238);
float t18274 = (t18272+t18273);
float t18275 = (t14254*t14302);
float t18276 = (t18274+t18275);
float t18277 = (t14345*t14351);
float t18278 = (t18276+t18277);
float t18279 = (t14367*t14415);
float t18280 = (t18278+t18279);
float t18281 = (t14458*t14464);
float t18282 = (t18280+t18281);
float t18283 = (t14480*t14528);
float t18284 = (t18282+t18283);
float t18285 = (t14571*t14577);
float t18286 = (t18284+t18285);
float t18287 = (t14593*t14641);
float t18288 = (t18286+t18287);
float t18289 = (t14684*t14690);
float t18290 = (t18288+t18289);
float t18291 = (t14706*t14754);
float t18292 = (t18290+t18291);
float t18293 = (t14797*t14803);
float t18294 = (t18292+t18293);
float t18295 = (t14819*t14867);
float t18296 = (t18294+t18295);
float t18297 = (t14910*t14916);
float t18298 = (t18296+t18297);
float t18299 = (t14932*t14980);
float t18300 = (t18298+t18299);
float t18301 = (t15023*t15029);
float t18302 = (t18300+t18301);
float t18303 = (t15045*t15093);
float t18304 = (t18302+t18303);
float t18305 = (t15136*t15142);
float t18306 = (t18304+t18305);
float t18307 = (t15158*t15206);
float t18308 = (t18306+t18307);
float t18309 = (t15249*t15255);
float t18310 = (t18308+t18309);
float t18311 = (t15271*t15319);
float t18312 = (t18310+t18311);
float t18313 = (t15362*t15368);
float t18314 = (t18312+t18313);
float t18315 = (t15384*t15432);
float t18316 = (t18314+t18315);
float t18317 = (t15475*t15481);
float t18318 = (t18316+t18317);
float t18319 = (t15497*t15545);
float t18320 = (t18318+t18319);
float t18321 = (t15588*t15594);
float t18322 = (t18320+t18321);
float t18323 = (t15610*t15658);
float t18324 = (t18322+t18323);
float t18325 = (t15701*t15707);
float t18326 = (t18324+t18325);
float t18327 = (t15723*t15771);
float t18328 = (t18326+t18327);
float t18329 = (t15814*t15820);
float t18330 = (t18328+t18329);
float t18331 = (t15836*t15884);
float t18332 = (t18330+t18331);
float t18333 = (t15927*t15933);
float t18334 = (t18332+t18333);
float t18335 = (t15949*t15997);
float t18336 = (t18334+t18335);
float t18337 = (t16040*t16046);
float t18338 = (t18336+t18337);
float t18339 = (t16062*t16110);
float t18340 = (t18338+t18339);
float t18341 = (t16153*t16159);
float t18342 = (t18340+t18341);
float t18343 = (t16175*t16223);
float t18344 = (t18342+t18343);
float t18345 = (t16266*t16272);
float t18346 = (t18344+t18345);
float t18347 = (t16288*t16336);
float t18348 = (t18346+t18347);
float t18349 = (t16379*t16385);
float t18350 = (t18348+t18349);
float t18351 = (t16401*t16449);
float t18352 = (t18350+t18351);
float t18353 = (t16492*t16498);
float t18354 = (t18352+t18353);
float t18355 = (t16514*t16562);
float t18356 = (t18354+t18355);
float t18357 = (t16605*t16611);
float t18358 = (t18356+t18357);
float t18359 = (t16627*t16675);
float t18360 = (t18358+t18359);
float t18361 = (t16718*t16724);
float t18362 = (t18360+t18361);
float t18363 = (t16740*t16788);
float t18364 = (t18362+t18363);
float t18365 = (t16831*t16837);
float t18366 = (t18364+t18365);
float t18367 = (t16853*t16901);
float t18368 = (t18366+t18367);
float t18369 = (t16944*t16950);
float t18370 = (t18368+t18369);
float t18371 = (t16966*t17014);
float t18372 = (t18370+t18371);
float t18373 = (t17057*t17063);
float t18374 = (t18372+t18373);
float t18375 = (t17079*t17127);
float t18376 = (t18374+t18375);
float t18377 = (t17159.z*t17164);
float t18378 = (t18376+t18377);
out0 = vec3(t17166,t17772,t18378);
}
